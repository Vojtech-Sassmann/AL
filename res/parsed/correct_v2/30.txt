def most_common(mylist):\n    most=0\n    high_freq = 0\n    freq=0\n    for x in mylist:\n        for y in mylist:\n            if x==y:\n                freq+=1\n        if freq > high_freq:\n            high_freq=freq\n            most=x\n        elif freq==high_freq:\n            if x<most:\n                most=x\n        freq=0\n    return most
def most_common(mylist):\n    p = mylist[0]\n    p3 = mylist[0]\n    p2 = []\n    b = 0\n    a = 0\n    for j in range (len(mylist)):\n        p = mylist[j]\n        b = 0\n        for i in range(len(mylist)):\n        	if mylist[i] == p:\n            	b = b + 1\n        	else:\n            	p2.append(mylist[i])\n        \n        if a<b:\n            a = b\n            p3 = p\n        if a==b and p3>p:\n            a = b\n            p3 = p\n       # print (a,b)\n        #print (p3 , p)\n            \n    return p3\n
def most_common(A):\n    p=-1\n    im=0\n    nm=0\n    n=0\n    A.sort()\n    A.append(-1)\n    for i in A:\n        if i==p:\n            n+=1\n        else:\n            if n>nm:\n                nm=n\n                im=p\n            p=i\n            n=1\n    return im\n
def most_common(mylist):\n    most = 0\n    num = 0\n    for number in mylist:\n        if mylist.count(number) >= num:\n            most = number\n            num = mylist.count(number)\n    return most\n                       \n
def most_common(mylist):\n    mostly = {}\n    for item in mylist:\n        if item not in mostly:\n            mostly[item] = 1\n        else:\n            mostly[item] += 1\n    for key in mostly:\n        if mostly[key] == max(mostly.values()):\n    	return key\n
def most_common(mylist):\n    counts = []\n    for item in mylist:\n        counts.append(mylist.count(item))\n    \n    most_frequent = []\n    for index, value in enumerate(counts):\n        if value == max(counts):\n            most_frequent.append(mylist[index])\n    \n    return sorted(most_frequent)[0]\n
def most_common(mylist):\n    help1 = {}\n    x = 0\n    c = ''\n    for m in sorted(mylist):\n        if m not in help1:\n            help1[m] = 1\n        else:\n            help1[m] += 1\n    for d in help1:\n        if help1[d] > x:\n            x = help1[d]\n            c = d\n    return c\n
def most_common(mylist): # vypíše nejčastější prvek ze seznamu\n    max_count = 0\n    alist = []\n    for prvek in mylist:\n\n        if mylist.count(prvek) > max_count:\n            alist = [prvek]\n            max_count = mylist.count(prvek)\n\n        elif mylist.count(prvek) == max_count:\n            alist.append(prvek)\n\n    if len(alist) > 1:\n        return (sorted(alist)[0])\n    else:\n        return (alist[0])
def most_common(mylist):\n    d = {}\n    for x in mylist:\n        if x in d:\n            d[x] = d[x] + 1\n        else:\n            d[x] = 1\n    amax = 0\n    for i in d:\n        if d[i] > amax:\n            amax = d[i]\n    for key in sorted(d, reverse=True):\n        if d[key] == amax:\n            result = key\n    return result\n
def most_common(mylist):\n    worklist=[]\n    workvalues=[]\n    \n    for a in mylist:\n        counter=0\n        for b in worklist:\n            if b==a:\n                workvalues[counter]+=1\n            counter+=1\n        if(not(a in worklist)):\n            worklist.append(a)\n            workvalues.append(1)\n    vysledek = 0\n    bestvalue = 0\n    for a in range(len(workvalues)):\n        if workvalues[a] > bestvalue:\n            bestvalue=workvalues[a]\n            vysledek=worklist[a]\n        if bestvalue == workvalues[a]:\n            if vysledek>worklist[a]:\n                vysledek=worklist[a]\n            \n  \n        \n    return vysledek 
def most_common(mylist):\n    nums = {}\n    for num in mylist:\n        if num in nums:\n            curr_value = nums.pop(num)\n            new_value = int(curr_value) + 1\n            nums[num] = new_value\n        else:\n            nums[num] = 1\n    new_nums = sorted(nums, key=lambda x: nums[x], reverse=True)\n    max_num = new_nums[0]\n    for i in range(len(new_nums)):\n        if nums[max_num] == nums[new_nums[i]]:\n            if new_nums[i] < max_num:\n                max_num = new_nums[i]\n    return max_num\n
import operator\ndef most_common(mylist):\n    count = {}\n    top = 0\n    top1 = 0\n    for x in mylist:\n        count[x] = count.get(x, 0) + 1\n	maximum = max(count.values())\n    for key, values in count.items():\n        if values == maximum:\n            return key
def most_common(mylist):\n    count = {}\n    for x in mylist:\n        count[x] = count.get(x, 0) + 1\n	maximum = max(count.values())\n    for key, values in count.items():\n        if values == maximum:\n            return key
def most_common(mylist):\n    count = {}\n    l = []\n    for x in mylist:\n        count[x] = count.get(x, 0) + 1\n    maximum = max(count.values())\n    for key, values in count.items():\n        if values == maximum:\n            l.append(key)\n    return min(l)\n
def most_common(mylist):\n    def get_my_value(key):\n        return output[key]\n    \n    output = {}\n    result = []\n    for number in mylist:\n        output.setdefault(number,0)\n        output[number]+=1\n\n    i=max(output.values())\n    result = (([k for k, v in output.items() if v == i]))\n    return min(result)
def most_common(mylist):\n    numbers = numbers_in_list(mylist)\n    previous = 0\n    previous_num = max(mylist)\n    for n in numbers:\n        count = mylist.count(n)\n        number = n\n        if count > previous:\n            previous = count\n            previous_num = number\n            result = n\n        if count == previous:\n            if number < previous_num:\n                previous = count\n                previous_num = number\n                result = n\n    return result\n\n\ndef numbers_in_list(mylist):\n    numbers = []\n    for num in mylist:\n        if num not in numbers:\n            numbers.append(num)\n    return numbers\n
def most_common(mylist):\n	pocet=[]\n	for i in range(len(mylist)):\n		pocet.append(1)\n	for i in range(len(mylist)):\n		if mylist[i] in mylist[:i]:\n			for j in range(len(mylist[:i])):\n				if mylist[i]==mylist[j]:\n					pocet[i]=pocet[j]+1\n	nej=max(pocet)\n	if nej==1:\n		return min(mylist)\n	for k in range(len(pocet)):\n		if pocet[k]==nej:\n			return mylist[k]\n
def most_common(mylist):\n	counts = {}\n	for n in mylist:\n		if n in counts:\n			counts[n] += 1\n		else:\n			counts[n] = 0\n            \n	count = 0\n	mostCommon = mylist[0]\n	for n in counts:\n		if counts[n] > count:\n			count = counts[n]\n			mostCommon = n\n            \n	for n in counts:\n		if counts[n] == count and n < mostCommon:\n			mostCommon = n\n            \n	return mostCommon\n
def most_common(mylist):\n    x = 0\n    y = list()\n    pocet = len(mylist)\n    for j in range(0,pocet):\n        x = 0\n        for i in range(pocet):\n            if mylist[j] in mylist[i:i+1]:\n                if j != i:\n                    x = x + 1\n        y.append(x + 1)\n##        print(mylist[j]," = ", x + 1)\n    nej = y[0]\n    index = 0\n    for i in range(0,pocet):\n        if nej > y[i]:\n            pass\n        else:\n            nej = y[i]\n            index = i\n    return(mylist[index])
def most_common(mylist):\n    pocet = 0\n    prvek = mylist[0]\n    for i in range(len(mylist)):\n        pocet_2 = 0\n        for j in range(i, len(mylist)):\n            if mylist[i] == mylist[j]:\n                pocet_2 += 1\n        if pocet_2 > pocet:\n            pocet = pocet_2\n            prvek = mylist[i]\n        elif pocet_2 == pocet:\n            if mylist[i] < prvek:\n                prvek = mylist[i]\n    return prvek\n
