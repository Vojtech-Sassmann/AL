def string_intersection(left, right):\n    for i in range(len(left)):\n    	if left[i]==right[-1-i]:\n            print(i)\n
def string_intersection(left, right):\n    for i in range(len(left)):\n    	if left[i]==right[-1-i]:\n            print(i)\n
def string_intersection(left, right):\n    for i in range(len(right)):\n        if left[i]==right[i]:\n            print(left[i])\n
def string_intersection(left, right):\n    if len(left) > len(right):\n        for i in range(len(right)):\n            if left[i] == right[i]:\n                print(left[i])\n    else:\n        for i in range(len(left)):\n            if left[i] == right[i]:\n                print(left[i])\n
def string_intersection(left, right):\n    for l, r in zip(left, right):\n        if l == r:\n            print(l)\n
def string_intersection(left, right):\n    for l, r in zip(left, right):\n        if l == r:\n            print(l)\n\n
def string_intersection(left, right):\n\n    for i in range (len(shorter(left,right))):\n        if left[i]==right[i]:\n            print(left[i])\n\n\ndef shorter(left,right):\n    if len(left)<=len(right):\n        return left\n    else: return right\n\n
def string_intersection(left, right):\n    print()\n
def string_intersection(left, right):\n    delka = 0\n    if len(left) < len(right):\n        delka = len(left)\n    else:\n        delka = len(right)        \n    \n    for i in range(delka):\n        if left[i]==right[i]:\n            print(left[i])\n            \n    print()\n
def string_intersection(left, right):\n    left=list(left)\n    right=list(right)\n    for i in range(min([len(left),len(right)])):\n        if left[i]==right[i]:\n        	print(left[i])\n
def string_intersection(left, right):\n    left = list(left)\n    right = list(right)\n    for i in range(min([len(left),len(right)])):\n        if left[i]==right[i]:\n            print(left[i])\n
def string_intersection(left, right):\n    stejne=''\n    for l, r in zip(left,right):\n        if l == r:\n            print(l)\n        else:\n            continue     \n\n    print()\n
def string_intersection(left, right):\n    for i in range(len(left)):\n        for j in range(len(right)):\n            if i == j and left[i] == right[j]:\n                print(left[i])\n    print()\n
def string_intersection(left, right):\n    for i in range(min(len(left),len(right))):\n        if left[i]==right[i]:\n            print(left[i])\n
def string_intersection(left, right):\n    for i in range(len(left)):\n        try:\n            if left[i] == right[i]:\n                print(left[i])\n        except IndexError:\n            pass\n
def string_intersection(left, right):\n    if len(left) >= len(right):\n        for i in range(len(right)):\n            if left[i] == right[i]:\n                print(left[i])\n    else:\n        for i in range(len(left)):\n            if left[i] == right[i]:\n                print(left[i])\n
def string_intersection(left, right):\n    if len(left) > len(right):\n        kratsi_delka =  len(right)\n    else: # if len(left) <= len(right)\n        kratsi_delka = len(left)\n    for x in range(kratsi_delka):\n        if left[x] == right[x]: \n            print(right[x])\n
def string_intersection(left, right):\n    if len(left) > len(right):\n        kratsi_delka = len(right)\n    else:\n        kratsi_delka = len(left)\n    for x in range(kratsi_delka):\n        if left[x] == right[x]:\n            print(right[x])\n
def string_intersection(left, right):\n    if len(left) > len(right):\n        kratsi_delka = len(right)\n    else:\n        kratsi_delka = len(left)\n        \n    for x in range(kratsi_delka):\n        if left[x] == right[x]:\n            print(left[x])\n        \n    print()\n
def string_intersection(left, right):\n    for i in range(len(left)):\n        if left[i] == right[i]:\n            print(left[i])
\ndef string_intersection(left, right):\n    y = len(right)-len(left)\n    x = len(left)-len(right)\n    if len(left) > len(right):\n        for i in range(len(left)-x):\n            if left[i] == right[i]:\n                print(left[i])\n    else:\n        for i in range(len(right)-y):\n            if left[i] == right[i]:\n                print(right[i])\n        
def string_intersection(left, right):\n    for i in range (len(left)):\n        if left[i] == right[i]:\n            print(left[i])\n
def string_intersection(left, right):\n    if len(left) > len(right):\n        kratsi = len(right)\n    else:\n        kratsi = len(left)\n    for x in range(kratsi):\n        if left[x] == right[x]:\n            print(right[x])\n
def string_intersection(left, right):\n    if len(left) > len(right):\n        bigger = left\n        smaller = right\n    else:\n        bigger = right\n        smaller = left\n    for i in range(len(smaller)):\n        if smaller[i] == bigger[i]:\n            print(smaller[i])\n
def string_intersection(left, right):\n    if len(left)< len(right):\n        m = left\n        n = right\n    else:\n        m = right\n        n = left\n    for i in range(len(m)):\n        if m[i] == n[i]:\n            print(m[i])\n
def string_intersection(left, right):\n    for i in range(len(right)):\n   		if left[i] == right[i]:\n    		print(left[i])\n
def string_intersection(left, right):\n    for i in range(len(right)):\n        if left[i] == right[i]:\n            print(right[i])\n   \n
def string_intersection(left, right):\n    for i in range(len(right)):\n        if left[i] == right[i]:\n            print(right[i])\n    \n
def string_intersection(left, right):\n    for i in range(len(left)):\n        if left[i] == right[i]:\n            print(left[i])
def string_intersection(left, right):\n    print()\n
def string_intersection(left, right):\n    alen = len(right)\n    for i in range(0, alen):\n        if right[i] == left[i]:\n        	print(right[i])
def string_intersection(left, right):\n    if len(left) > len(right):\n        x = len(right)\n    else:\n        x = len(left)\n    for i in range(0, x):\n        if left[i] == right[i]:\n            print(left[i])\n    print()\n
def string_intersection(left, right):\n    l = list(left)\n    r = list(right)\n    if len(l) <= len(r):\n        a = len(l)\n    else:\n        a = len(r)\n    for i in range(a):\n        if l[i] == r[i]:\n            print(l[i])
def string_intersection(left, right):\n    for i in range(len(right)):\n        if left[i] == right[i]:\n            print(left[i])\n\n\n
def string_intersection(left, right):\n    for i in range(min(len(left), len(right))):\n		if left[i] == right[i]:\n			print(left[i])\n
def string_intersection(left, right):\n    if len(left) <= len(right):\n        text = left\n    else:\n        text = right\n    for n in range(len(text)):\n        if left[n] == right[n]:\n            print(left[n])\n        \n            \n
def string_intersection(left, right):\n    if len(left) > len(right):\n        r = len(right)\n    else:\n        r = len(left)\n\n    for i in range(r):\n        if left[i] == right[i]:\n            print(left[i])\n
def string_intersection(left, right):\n    for letters in left:\n        for letter in right:\n            if letter == letters:\n                print(letter)\n                break\n\n
def string_intersection(left, right):\n        if len(left) <= len(right):\n            for i in range(len(left)):\n                if left[i] == right[i]:\n                    print(left[i])\n        else:\n            for i in range(len(right)):\n                if left[i] == right[i]:\n                    print(left[i])\n\n
def string_intersection(left, right):\n    try:\n        for i in range(len(left)):\n            if left[i] == right[i]:\n                print(left[i])\n    except:\n        pass\n    \n
def string_intersection(left, right):\n	delka=min(len(left),len(right))\n	for i in range(delka):\n		if left[i]==right[i]:\n			print(left[i])
def string_intersection(left, right):\n    shoda = ""\n    if len(left) > len(right):\n        delka = len(right)\n    else:\n        delka = len(left)\n    for i in range(delka - 1):\n        if left[i] == right[i]:\n            shoda = shoda + left[i]\n            print(left[i])
def string_intersection(left, right):\n    shoda = ""\n    if len(left) > len(right):\n        delka = len(right)\n    else:\n        delka = len(left)\n    for i in range(delka):\n        if left[i] == right[i]:\n            shoda = shoda + left[i]\n            print(left[i])
def string_intersection(left, right):\n    if len(left) <= len(right):\n        for i in range(len(left)):\n            if left[i] == right[i]:\n                print(left[i])\n    else:\n        for i in range(len(right)):\n            if left[i] == right[i]:\n                print(left[i])\n
