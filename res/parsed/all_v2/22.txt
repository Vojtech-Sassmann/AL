def print_primes(n):\n	delka =2\n	while delka<n+2:\n		cislo=0\n		for i in range(1,delka):\n			if not(delka%i):\n				cislo = cislo + 1\n		if cislo==2:\n            print(delka)\n		delka=delka+1\n        
def print_primes(n):\n    delka=2\n    a=1\n    while (a<(n+1)):\n    cislo=0\n    for i in range(1,delka+1):\n        if not(delka%i):\n            cislo = cislo + 1\n    if cislo==2:\n        print(delka)\n        a = a +1\n    delka=delka+1
def print_primes(n):\n    delka=2\n    a=1\n    while (a<(n+1)):\n    cislo=0\n    for i in range(1,delka+1):\n        if not(delka%i):\n            cislo = cislo + 1\n    if cislo==2:\n        print(delka)\n        a = a +1\n    delka=delka+1
def print_primes(n):\n    delka=2\n    a=1\n    while (a<(n+1)):\n    cislo=0\n    for i in range(1,delka+1):\n        if not(delka%i):\n            cislo = cislo + 1\n    if cislo==2:\n        print(delka)\n        a = a +1\n    delka=delka+1
def print_primes(n):\n    delka=2\n    a=1\n    while (a<(n+1)):\n    cislo=0\n    for i in range(1,delka+1):\n        if not(delka%i):\n            cislo = cislo + 1\n    if cislo==2:\n        print(delka)\n        a = a +1\n    delka=delka+1
def print_primes(n):\n    delka=2\n    a=1\n    while (a<(n+1)):\n    cislo=0\n    for i in range(1,delka+1):\n        if not(delka%i):\n            cislo = cislo + 1\n    if cislo==2:\n        print(delka)\n        a = a +1\n    delka=delka+1
def is_prime(k):\n    prime = True\n    for i in range(2,k):\n        if k % i == 0:\n            prime = False\n    return prime\ndef print_primes(n):\n    for i in range(1,n):\n        if is_prime(i):\n        	print(i)\n
def print_primes(n):\n    moj = []\n    for i in range(2,500):\n        prime = True\n        for j in range(2,i):\n            if i % j == 0:\n                prime = False\n        if prime == True:\n            moj.append(i)\n    for z in range(n):\n        print(moj[z])
def print_primes(n):\n    moj = []\n    for i in range(2,10000):\n        prime = True\n        for j in range(2,i):\n            if i % j == 0:\n                prime = False\n        if prime == True:\n            moj.append(i)\n    for z in range(n):\n        print(moj[z])
def print_primes(n):\n    moj = []\n    for i in range(2,2000):\n        prime = True\n        for j in range(2,i):\n            if i % j == 0:\n                prime = False\n        if prime == True:\n            moj.append(i)\n    for z in range(n):\n        print(moj[z])
def print_primes(n):\n    for i in range(n):\n        x=0\n        for j in range(i+1):\n            if (i+1)%(j+1)==0:\n                x+=1\n        if x==2:\n            print(i+1)\n        else:\n            n+=1\n                \n    print()\n
def print_primes(n):\n    t=0\n    c=0\n    while c<n:\n        if IsPrime(t)==True:\n            print(t)\n            c+=1\n        t+=1\n            \n\ndef IsPrime(p):\n    c=0\n    for i in range (1,p+1):\n        if p%i==0:\n            c+=1\n    if c==2:\n        return True
def print_primes(n):\n    x=2\n    while(n>0):\n        d=0\n        for i in range(1,x+1):\n			if(x%i==0):d+=1\n        if(d==2):\n            print(x)\n            n-=1\n        x+=1 
def isPrime(n):\n    for i in range(2, n):\n        if n % i==0:\n            return False\n    return True\n\ndef print_primes(n):\n    primes = 0\n    i=2\n    while primes<n:\n        if(isPrime(i)):\n            print(i)\n            primes+=1\n        i+=1\n
def print_primes(n):\n    count = 0\n    i = 2\n    print(2)\n    while count < (n-1):\n        for j in range(2, i):\n            if i%j == 0 and i != 2:\n                break\n            elif (i-1)==j:\n                print(i)\n                count += 1\n        i += 1
def cnt_divisors(n):\n    cont = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            cont += 1\n    return cont\n\n\n\ndef is_prime(n):\n    return cnt_divisors(n) == 2\n\n\n\n\n\ndef print_primes(k):\n    i = 1\n    stoper = 0\n    while k > stoper:\n        i += 1\n        if is_prime(i):\n            stoper += 1\n            print(i)\n        else:\n            pass\n    \n\n
def print_primes(n):\n    x = 2\n    i = 1\n    while i <= n:\n        is_prime = True\n        for j in range(1, x):\n            if x % j == 0 and j != 1:\n                is_prime = False\n                break\n        if is_prime == True:\n            print(x)\n            i += 1\n        x += 1\n    \n            \n        \n        \n        \n        \n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n        if a%b==0 and not a == b:\n            \n        	a = a + 1\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n        if a%b==0 and not a == b:\n            \n        	a = a + 1\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n            \n        if a%b==0 and not a == b:\n            a = a + 1\n            b = 2\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    print()\n
def je_prvocislo(n):\n    n = abs(n)\n    for i in range(2,n//2+1):\n        if n % i == 0:\n            return False\n    return True\n\ndef print_primes(n):\n    i = 2\n    while n != 0:\n        if je_prvocislo(i):\n            print(i)\n            n-=1\n        i+=1\n
def print_primes(n):\n    print()\n
def is_prime(n):\n    a = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            a += 1\n    if a == 2:\n        return True\n    else:\n        return False\n\n\ndef print_primes(n):\n    sum = 0\n    x = 1\n    while sum != n:\n        if is_prime(x):\n            print(x)\n            sum += 1\n        x += 1	
def is_prime(p):\n    for i in range(2,p):\n        if p%i==0:\n            return False\n    return True\n    \ndef print_primes(n):\n    p=2\n    for j in range(n):\n        while not is_prime(p):\n            p+=1\n        print(p)\n        p+=1\n\n
def print_primes(n):\n	print( 2)
def print_primes(n):\n	print( 2)
def print_primes(n):\n    import math\n    for i in range(1, n + 1):\n        test = 1\n        for j in range(1, int(math.sqrt(i))):\n            if i % j == 0:\n                test = 1\n            	break\n        if test:\n            print(i)
def print_primes(n):\n    print()\n
def is_prime(n):\n    count = 1\n    for i in range(2,n+1):\n        if n%i == 0:\n            count += 1\n    return count == 2\ndef print_primes(n):\n    alist = []\n    a = 1\n    while len(alist) != n:\n        if is_prime(a) == True:\n            alist.append(a)\n            a += 1\n        else:\n            a += 1\n    for j in range(n):\n        print(alist[j])\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1, n):\n        if i % 2 == 0 or i % 3 == 0:\n            print("není prvočíslo")\n        else: \n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1,30):\n        a = 0\n        for j in range(1, i+1):\n            b = i % j\n            if b ==0:\n                a = a+1\n        if a == 2:\n            print(i)\n    print()\n
def print_primes(n):\n    for i in range(1,115):\n        a = 0\n        for j in range(1, i+1):\n            b = i % j\n            if b ==0:\n                a = a+1\n        if a == 2:\n            print(i)\n    print()\n
def print_primes(n):\n	prim2_list = []\n	for possiblePrime in range(2, n*10):	\n		isPrime = True\n		for num in range(2, possiblePrime):\n			if possiblePrime % num == 0:\n				isPrime = False\n		if isPrime:\n			prim2_list.append(possiblePrime) \n	for p in range(n):\n		print(prim2_list[p])
def print_primes(n):\n    c =1\n    x = 0\n    while n >= 1:\n        for i in range(1,c):\n            if c % i == 0:\n                x += 1\n        if x == 1:\n            print(c)\n            n -= 1\n        x = 0\n        c +=1\n        \n                \n
def print_primes(n):\n    x = 0\n    i = 2\n    while x < n:\n        if isprimetest(i) is True:\n            print(i)\n            i = i + 1\n            x = x + 1\n        else:\n            i = i + 1\n    \ndef isprimetest(x):\n    count = 0\n    for i in range(1, x):\n        if x % i == 0:\n            count = count + 1\n    if count == 1:\n        return True\n    else:\n        return False\n
def print_primes(n):\n    m = 0\n    c = 2\n    pewds = []\n    while m < n:\n        l = 0\n        for i in range(1, c+1):\n            if c%i == 0:\n                l += 1\n        if l == 2:\n            pewds.append(c)\n            m += 1\n        c += 1\n    for debil in pewds:     \n    	print(debil)\n
import math\n\ndef is_prime(n):\n    if n < 2:\n        return False\n    \n    for k in range(2, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            return False\n    return True\ndef print_primes(n):\n    k = 2\n    while n > 0:\n        if is_prime(k):\n            print(k)\n            n -= 1\n        k += 1
def print_primes(n):\n    count = 0\n    i = 1\n    while count != n:\n        i += 1\n        res = True\n        for j in range(2,i//2+1):\n            if i%j == 0:\n                res = False\n            if res==False:\n                break\n        if res==True:\n            print(i)\n            count += 1\n
def print_primes(n):\n    primes = 0\n    i = 2\n    while primes != n:\n        count = 0\n        for k in range(1, i+1):\n            if i % k == 0:\n                count += 1\n        i +=1\n        if count < 3:\n            print (i-1)\n            primes += 1\n            \n
def print_primes(n):\n    pocet=0\n    prv=0\n    i=2\n    while pocet<n:\n        for j in range (1,i+1):\n            if i%j==0:\n                prv=prv+1\n        if prv==2:\n            print(i)\n            pocet=pocet+1\n        prv=0\n        i=i+1
def print_primes(n):\n    print()\n
def print_primes(n):\n    num = 2\n    while n > 0:\n        if (num == 2) or (num == 3):\n            print(num)\n            n -= 1\n        elif num % 2 == 0:\n#            print('{} is EVEN = not prime'.format(num))\n            pass\n        else:\n            for i in range(3, num, 2):\n                if (num % i == 0):\n#                    print('{} is ODD but not prime'.format(num))\n                    break\n            else:\n                print(num)\n                n -= 1\n        num += 1
def print_primes(n):\n    x = list()\n    stop = 1\n    cykl = 1\n    otocka = 0\n    while otocka < n:\n        cykl = cykl + 1\n        stop = stop + 1\n        for i in range(stop,cykl+1):\n            for j in range(2,i):\n                if i %j == 0:\n                    break\n            else:\n                x.append(i)\n                otocka = otocka + 1\n        else:\n            pass\n    else:\n        for i in range(0,n):\n            print(x[i])\n
def print_primes(n):\n    k = 1\n    j = 1    \n    print(k+1)\n    print(k+2)\n    print(k+4)\n    print(k+6)\n    print(k+10)\n    print(k+12)\n    print(k+16)\n    print(k+18)\n    print(k+22)\n    print(k+28)\n    for i in range(5,(8*n+(n//2))+8):\n           if (i%2 != 0) & (i%3 !=0) & (i%5 != 0) & (i%7 != 0) & (i%11 != 0) & (i%13 != 0) & (i%17 != 0) & (i%19 != 0) & (i%23 != 0) & (i%29 != 0):\n                               if j<n-9:\n                                       print(i)\n                                       if (i%2 != 0) & (i%3 !=0) & (i%5 != 0) & (i%7 != 0) & (i%11 != 0) & (i%13 != 0) & (i%17 != 0):\n                                           j = j+1;             
def print_primes(n):\n    print()\n
def print_primes(n):\n	print(2)\n	count=1\n	num=2\n	while count<n:\n		num+=1\n		delitel=2\n		prvocislo=True\n		while num>delitel and prvocislo==True:\n			if num%delitel==0:\n				prvocislo=False\n			delitel+=1    \n        \n		if prvocislo:\n			count+=1\n			print(num)\n                \n		\n               \n                \n	
