def nested_squares(n):\n    c=0\n    c2=n-2\n    c3=5\n    c4=1\n    c5=1\n    c6=1\n    for y in range(4*n-3):\n        \n        if y%2==0 and y<=2*n-1:\n            for i in range(y-c):\n                print ("# ", end="")\n            c=c+1\n            for k in range (4*n-3-2*y):\n                print("#", end="")\n            print(end=" ")\n            for l in range (y-c+1):\n                print ("# ",end="")\n\n                                    \n        elif y%2==0 and y>2*n-1:\n            for j in range(c2):\n                print ("# ", end="")\n            c2=c2-1\n            for m in range (c3):\n                print("#", end="")\n            c3=c3+4\n            print(end=" ")\n            for o in range (c2+1):\n                print ("# ",end="") \n\n\n\n\n\n        elif y%2==1 and y<=2*n-2:\n            for p in range (c4):\n                print ("#", end=" ")\n            c4+=1\n            for r in range(4*n-4-2*y):\n                print(end=" ")\n            for s in range (c4-1):\n                print("# ", end="")\n                \n        elif y%2==1 and y>2*n-2:\n            for t in range (n-c5):\n                print ("#",end=" ")\n            c5+=1\n            for u in range(c6):\n                print(end=" ")\n            c6+=4\n            for v in range (n-c5+1):\n                print(" #", end="")\n\n        print ()\n                
def nested_squares(n):\n    print("#", end="")\n    print()\n
def nested_squares(n):\n    print("#", end="")\n    print()\n
def nested_squares(n):\n    print("#", end="")\n    print()\n
def nested_squares(n):\n    out = []\n    biggest_square_size = 4*(n-1)+1\n\n    for i in range(    biggest_square_size ):\n        out.append([" "] * biggest_square_size)\n\n    for i in range(n):\n        square_size = 4 * i + 1\n        position = (biggest_square_size - square_size)//2\n        for j in range(square_size):\n            out[position][position+j] = "#"\n            out[position+j][position] = "#"\n            out[position+square_size-1][position+j] = "#"\n            out[position+j][position+square_size-1] = "#"\n\n    for row in out:\n        print("".join(row))
def nested_squares(n):\n    for i in range(n):\n        print("# "*i, end="")\n        print("#"*(4*(n-1-i)+1), end="")\n        print(" #"*i, end="")\n        print()\n        if i < n-1:\n            print("# "*i, end="")\n            print("#" + " "*(4*(n-i-1)-1) + "#" + " #"*i)\n    for i in range(n-1):\n        print("# "*(n-1-i), end="")\n        print(" "*(4*i+1), end="")\n        print(" #"*(n-1-i), end="")\n        print()\n        print("# "*(n-2-i), end="")\n        print("#"*(4*i+5), end="")\n        print(" #"*(n-2-i), end="")\n        print()\n
