5.147087319849824
import math

def divisors_count(n):
    cnt = 0
    for i in range(1, (int)(math.sqrt(n)) + 1) : 
        if (n % i == 0) : 
              
            # If divisors are equal, 
            # count only one 
            if (n / i == i) : 
                cnt = cnt + 1
            else : # Otherwise count both 
                cnt = cnt + 2
    return cnt
4.741431512655928
def divisors_count(n):    
    list_of_divisors = []
    for i in range(1, n + 1):
        x = n / i
        remain = n % i
        if remain == 0:
            list_of_divisors.append(x)
    return len(list_of_divisors)


4.398994792297445
def divisors_count(n):
    return len([i for i in range(1,n+1) if n % i == 0])

4.283093133099189
def divisors_count(n):
    pocet = 0
    if n>0:
       pocet = 1
       for i in range(1,n+1): 
              if ((n%i) == 0) and (i>1):
                 pocet = pocet + 1
    return pocet

2.9660288240280974
def divisors_count(n):
    s = 0
    for i in range(n, 0, -1):
        s += n % i == 0
    return s

2.6920794477413104
def divisors_count(n):
    a=0
    
    for i in range (n):
        b=n%(i+1)
        if b==0:
            a=a+1
           
        
    
    return a

2.5761777885430543
def divisors_count(n):  # vrátí počet dělitelů čísla n
    alist = []
    for i in range(1, n+1):
        if n % i == 0:
            alist.append(i)
    return (len(alist))
	
2.049352064914618
def divisors_count(n):
    divisorcnt=0
    for i in range (n+1):
    	if i!=0:
    		if n % i == 0:
        		divisorcnt=divisorcnt+1
    return divisorcnt

1.4487707399782002
def divisors_count(n):
    count = 0
    if n == 0:
        return 0
    for no in range(1, n+1):
        if n % no == 0:
            count += 1
    return count
1.4276977110330629
def divisors_count(n):
    k=0
    for i in range(n):
        if n%(i+1)==0: k=k+1
    return (k)

1.4276977110330629
def divisors_count(n):
    a=0
    for i in range(n):
        if n%(i+1)==0:
            a=a+1
    return a

1.4276977110330629
def divisors_count(n):
    divisors=0
    for i in range (n):
        if n% (i + 1) == 0:
            divisors = divisors + 1
    return (divisors)

1.4276977110330629
def divisors_count(n):
    a=0
    for i in range(n):
        if (n)%(i+1)==0:
            a=a+1
    return a

1.4224294537967785
def divisors_count(n):
    sumc=0
    for divider in range(1,n+1):
        if n%divider==0:
            sumc+=n/n
        
    return int(sumc)

1.2907230228896693
def divisors_count(n):
    num = 0
    for i in range(1, n):
        if n % i == 0:
            num += 1
    return num+1
1.2907230228896693
def divisors_count(n):
    num = 0
    for i in range(1, n):
        if n % i == 0:
            num += 1
    return num+1

1.2327721932905413
def divisors_count(n):
    pes = 0
    for i in range(n):
        if n % (i + 1) == 0:
            pes += 1
    return pes

1.2327721932905413
def divisors_count(n):
    x=0
    for i in range(n):
        if n%(i+1)==0:
            x+=1
            
    return(x) 

1.2327721932905413
def divisors_count(n):
    x = 0
    for i in range(n):
        if(n%(i+1)==0):
            x+=1
    return x

1.2327721932905413
def divisors_count(n):
    a = 0
    for i in range(n):
        if n%(i+1) == 0:
            a += 1
    return a

1.0062371321303136
def divisors_count(n):
    a=0
    for i in range(1,n+1,1):
        if n%i==0:
            a+=1
        else:
            pass
    return a

0.8692624439869202
def divisors_count(n):
    vysledok = 1
    for i in range(1,n):
 	    if n % i == 0:
        	vysledok += 1
    return vysledok

0.8692624439869202
def divisors_count(n):
    e=1
    for i in range(1,n):
        if n%i==0:
            e+=1
    return e

0.8692624439869202
def divisors_count(n):
    a = 1
    for i in range(1,n):
        if n % i == 0:
            a += 1
    return a

0.7586290420249485
def divisors_count(n):
    d=0
    for i in range(1,n+1):
        if n%i==0:
            d=d+1
    return d
            

0.7586290420249485
def divisors_count(n):
    x=0
    for i in range (1,n+1):
        if n%i==0:
            x=x+1
    return x
            

0.7586290420249485
def divisors_count(n):
    count = 0
    for i in range(1,n+1):
        if n % i == 0:
            count = count +1
    return count

0.7586290420249485
def divisors_count(n):
    count = 0
    for i in range(1,n+1):
        if n % i == 0:
            count = count + 1
    return count

0.7586290420249485
def divisors_count(n):
    deli=0
    for i in range(1,n+1):
        if n % i == 0:
            deli=deli+1
    return deli

0.7586290420249485
def divisors_count(n):
    x = 0
    for i in range(1,n + 1):
        if n % i == 0:
            x = x + 1
    return x

0.7586290420249485
def divisors_count(n):
    k = 0
    for i in range(1, n + 1):
        if n % i == 0:
            k = k + 1
    return k

0.7586290420249485
def divisors_count(n):
    x = 0
    for i in range(1,n+1):
        if n %i == 0:
        	x = x+1
    return x

0.7586290420249485
def divisors_count(n):
    pocet=0
    for i in range (1,n+1):
        if n%i==0: pocet= pocet+1
    return pocet

0.7586290420249485
def divisors_count(n):
    pocet = 0
    for i in range(1,n+1):
        if n % i == 0: pocet = pocet + 1
    return pocet

0.7586290420249485
def divisors_count(n):
    divisorsCounter=0
    for i in range(1,n+1,1):
        if n%i==0:
            divisorsCounter=divisorsCounter+1
    return divisorsCounter
0.7586290420249485
def divisors_count(n):
    count=0
    for i in range (1,n+1):
        if n%i ==0:
            count=count+1
    return count

0.7586290420249485
def divisors_count(n):
    pocet=0
    for i in range(1,n+1):
        if n%i==0: pocet=pocet+1
    return pocet

0.7586290420249485
def divisors_count(n):
    pocet=0
    for i in range(1,n+1):
        if n%i==0: pocet=pocet+1
    return pocet

0.7586290420249485
def divisors_count(n):
    pocet=0
    for i in range(1,n+1):
        if n%i==0: pocet=pocet+1
    return pocet

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    count=0
    for i in range(1,n+1,1):
        if n%i==0:
            count+=1
            
    return count



0.563703524282427
def divisors_count(n):
    pocet=0
    for i in range(1,n+1,1):
        if n%i ==0:
            pocet+=1
    
    return pocet

0.563703524282427
def divisors_count(n):
    pocet = 0
    for i in range(1,n+1,1):
        if n%i == 0:
        	pocet += 1 
    return pocet 
    


0.563703524282427
def divisors_count(n):
    a=0
    for i in range(1,n+1,1):
        if n%i==0:
            a+=1
    return a

0.563703524282427
def divisors_count(n):
    pocet = 0
    for i in range(1,n+1,1):
        if n%i==0:
            pocet+=1
    return pocet

0.563703524282427
def divisors_count(n):
    pocet=0
    for i in range(1,n+1,1):
        if n%i==0:
            pocet+=1
    return pocet

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    pocet = 0
    for x in range(1,n+1):
        if n % x == 0:
            pocet += 1
    return pocet

0.563703524282427

def divisors_count(n):
    x = 0
    for i in range(1,n+1):
        if n % i == 0:
            x += 1
    return x

0.563703524282427
def divisors_count(n):
    x=0
    for i in range(1,n+1):
        if n%i==0:
            x+=1
    return x

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
	count = 0
	for i in range(1, n+1):
		if n%i == 0:
			count += 1
	return count

0.563703524282427
def divisors_count(n):
    k=0
    for i in range(1,n+1):
        if n%i==0:
        	k+=1
    return (k)

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n%i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    x = 0
    for i in range(1, n+1):
        if n%i==0: 
            x += 1
    return (x)



0.563703524282427
def divisors_count(n):
    pocet = 0
    for i in range (1, n + 1):
        if n % i == 0:
            pocet += 1
    return pocet

0.563703524282427
def divisors_count(n):
    kolik = 0
    for x in range(1, n+1):
        if n % x == 0:
            kolik += 1
    return kolik

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n % i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    pocet=0
    for i in range(1,n+1):        
        if n%i==0:
            pocet+=1
    return pocet

0.563703524282427
def divisors_count(n):
    c = 0
    for i in range (1, n+1):
        if n%i == 0:
        	c+=1
    return c

0.563703524282427
def divisors_count(n):
    divisor = 0
    for i in range(1, n + 1):
        if n % i == 0:
        	divisor += 1
    return divisor

0.563703524282427
def divisors_count(n):
    sum = 0
    for i in range(1, n + 1):
        if n % i == 0:
            sum += 1
    return sum
0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1,n+1):
        if n%i == 0:
            count+=1
    return count

0.563703524282427
def divisors_count(n):
    a=0
    for i in range(1,n+1):
        if n%i==0:
            a+=1
    return a

0.563703524282427
def divisors_count(n):
    counter = 0
    for i in range(1, n+1):
        if n % i == 0:
            counter +=1
    return counter

0.563703524282427
def divisors_count(n):
    count=0
    for i in range(1,n+1):
        if n%i==0:
            count+=1
    return count

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n%i == 0:
            count +=1
    return count

0.563703524282427
def divisors_count(n):
    c=0
    for a in range(1,n+1):
        if n%a==0:
            c+=1
    return c

0.563703524282427
def divisors_count(n):
    div_count = 0
    for i in range(1, n+1):
        if n % i == 0:
            div_count+=1
    return div_count

0.563703524282427
def divisors_count(n):
    x = 0
    for i in range(1,n+1):
         if n % i == 0:
            x += 1
    return x

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n%i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    total = 0
    for i in range(1, n+1):
        if n % i == 0:
            total += 1
    return total

0.563703524282427
def divisors_count(n):
    d = 0
    for i in range(1, n+1):
        if n%i == 0:
            d += 1
    return d

0.563703524282427
def divisors_count(n):
    div_num = 0
    for k in range(1, n + 1):
        if n % k == 0:
            div_num += 1
    return div_num

0.563703524282427
def divisors_count(n):
    delitel = 0
    for i in range(1, n+1):
        if n % i == 0:
        	delitel += 1
    return delitel

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n % i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1,n+1):
        if n % i == 0:
            count+=1
            
    return count

0.563703524282427
def divisors_count(n):
    x=0
    for i in range(1,n+1):
        if n%i==0:
            x+=1
    return x

0.563703524282427
def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n % i == 0:
            count += 1
    return count

0.563703524282427
def divisors_count(n):
    a = 0
    for i in range(1, n+1):
        if n % i == 0:
            a += 1
    return a

0.563703524282427
def divisors_count(n):
    x=0
    for i in range(1,n+1):
        if n%i == 0:
         x+=1
    return x

0.563703524282427
def divisors_count(n):
    pd=0
    for i in range(1,n+1):
        if n%i==0:pd+=1
    return pd

0.563703524282427
def divisors_count(n):
    pocet=0
    for i in range(1,n+1):
    	if n%i==0:
            	pocet+=1
    return(pocet)

0.563703524282427
def divisors_count(n):
	pocet=0
	for i in range(1,n+1):
		if n%i==0:
		       pocet+=1
	return(pocet)

0.563703524282427
def divisors_count(n):
    pocet=0
    for i in range(1,n+1):
    	if n%i==0: pocet+=1
    return pocet

0.563703524282427
def divisors_count(n):
	pocet=0
	for i in range(1,n+1):
		if n%i==0: pocet+=1
	return pocet
0.563703524282427
def divisors_count(n):
	x=0
	for i in range(1,n+1):
		if n%i==0:
			x+=1
        
	return x

