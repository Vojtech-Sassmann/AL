Rate:  31.727272727272727
698.0
def print_primes(n):
    i = 0
    a = 2
    b = 2
    while i < n:
        if a%2==0 and not a == 2:
            
        	a = a + 1
            
        if a%b==0 and not a == b:
            a = a + 1
            b = 2
       
        if a%b==0 and a == b:
            print(a)
            a = b + 1
            i = i + 1
            b = 2
        else:
            b = b + 1

661.0
def print_primes(n):
    x = 0
    i = 2
    while x < n:
        if isprimetest(i) is True:
            print(i)
            i = i + 1
            x = x + 1
        else:
            i = i + 1
    
def isprimetest(x):
    count = 0
    for i in range(1, x):
        if x % i == 0:
            count = count + 1
    if count == 1:
        return True
    else:
        return False

617.0
import math

def is_prime(n):
    if n < 2:
        return False
    
    for k in range(2, int(math.sqrt(n)) + 1):
        if n % k == 0:
            return False
    return True
def print_primes(n):
    k = 2
    while n > 0:
        if is_prime(k):
            print(k)
            n -= 1
        k += 1
616.0
def cnt_divisors(n):
    cont = 0
    for i in range(1, n + 1):
        if n % i == 0:
            cont += 1
    return cont



def is_prime(n):
    return cnt_divisors(n) == 2





def print_primes(k):
    i = 1
    stoper = 0
    while k > stoper:
        i += 1
        if is_prime(i):
            stoper += 1
            print(i)
        else:
            pass
    


590.0
def print_primes(n):
    t=0
    c=0
    while c<n:
        if IsPrime(t)==True:
            print(t)
            c+=1
        t+=1
            

def IsPrime(p):
    c=0
    for i in range (1,p+1):
        if p%i==0:
            c+=1
    if c==2:
        return True
586.0
def print_primes(n):
    x = list()
    stop = 1
    cykl = 1
    otocka = 0
    while otocka < n:
        cykl = cykl + 1
        stop = stop + 1
        for i in range(stop,cykl+1):
            for j in range(2,i):
                if i %j == 0:
                    break
            else:
                x.append(i)
                otocka = otocka + 1
        else:
            pass
    else:
        for i in range(0,n):
            print(x[i])

584.0
def is_prime(n):
    count = 1
    for i in range(2,n+1):
        if n%i == 0:
            count += 1
    return count == 2
def print_primes(n):
    alist = []
    a = 1
    while len(alist) != n:
        if is_prime(a) == True:
            alist.append(a)
            a += 1
        else:
            a += 1
    for j in range(n):
        print(alist[j])

584.0
def print_primes(n):
	print(2)
	count=1
	num=2
	while count<n:
		num+=1
		delitel=2
		prvocislo=True
		while num>delitel and prvocislo==True:
			if num%delitel==0:
				prvocislo=False
			delitel+=1    
        
		if prvocislo:
			count+=1
			print(num)
                
		
               
                
	
575.0
def print_primes(n):
    num = 2
    while n > 0:
        if (num == 2) or (num == 3):
            print(num)
            n -= 1
        elif num % 2 == 0:
#            print('{} is EVEN = not prime'.format(num))
            pass
        else:
            for i in range(3, num, 2):
                if (num % i == 0):
#                    print('{} is ODD but not prime'.format(num))
                    break
            else:
                print(num)
                n -= 1
        num += 1
542.0
def print_primes(n):
    count = 0
    i = 2
    print(2)
    while count < (n-1):
        for j in range(2, i):
            if i%j == 0 and i != 2:
                break
            elif (i-1)==j:
                print(i)
                count += 1
        i += 1
533.0
def is_prime(p):
    for i in range(2,p):
        if p%i==0:
            return False
    return True
    
def print_primes(n):
    p=2
    for j in range(n):
        while not is_prime(p):
            p+=1
        print(p)
        p+=1


515.0
def is_prime(n):
    a = 0
    for i in range(1, n + 1):
        if n % i == 0:
            a += 1
    if a == 2:
        return True
    else:
        return False


def print_primes(n):
    sum = 0
    x = 1
    while sum != n:
        if is_prime(x):
            print(x)
            sum += 1
        x += 1	
513.0
def print_primes(n):
	prim2_list = []
	for possiblePrime in range(2, n*10):	
		isPrime = True
		for num in range(2, possiblePrime):
			if possiblePrime % num == 0:
				isPrime = False
		if isPrime:
			prim2_list.append(possiblePrime) 
	for p in range(n):
		print(prim2_list[p])
512.0
def print_primes(n):
    count = 0
    i = 1
    while count != n:
        i += 1
        res = True
        for j in range(2,i//2+1):
            if i%j == 0:
                res = False
            if res==False:
                break
        if res==True:
            print(i)
            count += 1

501.0
def je_prvocislo(n):
    n = abs(n)
    for i in range(2,n//2+1):
        if n % i == 0:
            return False
    return True

def print_primes(n):
    i = 2
    while n != 0:
        if je_prvocislo(i):
            print(i)
            n-=1
        i+=1

499.0
def print_primes(n):
    x = 2
    i = 1
    while i <= n:
        is_prime = True
        for j in range(1, x):
            if x % j == 0 and j != 1:
                is_prime = False
                break
        if is_prime == True:
            print(x)
            i += 1
        x += 1
    
            
        
        
        
        

498.0
def print_primes(n):
    moj = []
    for i in range(2,2000):
        prime = True
        for j in range(2,i):
            if i % j == 0:
                prime = False
        if prime == True:
            moj.append(i)
    for z in range(n):
        print(moj[z])
489.0
def isPrime(n):
    for i in range(2, n):
        if n % i==0:
            return False
    return True

def print_primes(n):
    primes = 0
    i=2
    while primes<n:
        if(isPrime(i)):
            print(i)
            primes+=1
        i+=1

477.0
def print_primes(n):
    m = 0
    c = 2
    pewds = []
    while m < n:
        l = 0
        for i in range(1, c+1):
            if c%i == 0:
                l += 1
        if l == 2:
            pewds.append(c)
            m += 1
        c += 1
    for debil in pewds:     
    	print(debil)

464.0
def print_primes(n):
    primes = 0
    i = 2
    while primes != n:
        count = 0
        for k in range(1, i+1):
            if i % k == 0:
                count += 1
        i +=1
        if count < 3:
            print (i-1)
            primes += 1
            

448.0
def print_primes(n):
    pocet=0
    prv=0
    i=2
    while pocet<n:
        for j in range (1,i+1):
            if i%j==0:
                prv=prv+1
        if prv==2:
            print(i)
            pocet=pocet+1
        prv=0
        i=i+1
438.0
def print_primes(n):
    c =1
    x = 0
    while n >= 1:
        for i in range(1,c):
            if c % i == 0:
                x += 1
        if x == 1:
            print(c)
            n -= 1
        x = 0
        c +=1
        
                

