def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

def powers(base, n):
    for i in range(n):
        i += 1
        print(base**i)

def powers(base, n):
    for i in range (n):
        i = i + 1
        m = base**i
        print(m)

def powers(base, n):
        mocnina = 1
        while True:
            if mocnina <= n:
                print(base ** mocnina)
                mocnina += 1
            else:
                break


def powers(base, n):
    x = 1
    for i in range(n):
        print(base ** x)
        x += 1
        

def powers(base, n):
    obase=base
    print(base)
    while n>1:
        base*=obase
        n-=1
        print(base)

def powers(base, n):
	a = [base**i for i in range(1,n+1)]
	for x in a:
		print(x)
def powers(base, n):
    base2 = 1
    for i in range(1,n+1):
       base2 = base*base2
       print(base2)
    print()

def powers(base, n):
    for i in range(n):
        a = base**(i+1)
        print(a)
    

def powers(base, n):
    current = base
    for i in range(n):
        print(current)
        current = current * base
    print()

