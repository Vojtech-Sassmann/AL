1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n * 2):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek ", n * 10)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n *2)\n    print("Trojnasobek", n *3)\n    print("Desetinasobek", n *10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n    
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("trojnasobek", n*3)\n    print("desetinasobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n+n)\n    print("Trojnasobek", n+n+n)\n    print("Desetinasobek", n+n+n+n+n+n+n+n+n+n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n   
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Čtyřnásobek", 4*n)\n    print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    int (n)\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print ("Trojnasobek", 3*n)\n    print ("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n	\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\nmultiples(7)
def multiples(n):\n    print("Dvojnasobek", n)\nmultiples(5)
def multiples(n):\n    print("Dvojnasobek", n*2)\nmultiples(5)
def multiples(n):\n    print("Dvojnasobek", n*2)\nmultiples(10)
def multiples(n):\n    print("Dvojnasobek", n*2)\nmultiples(5)
def multiples(n):\n    print("Dvojnasobek", n*2)\nmultiples(5)
def multiples(n):\n    print("Dvojnasobek", n * 2)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3* n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n          \n
###
1111
def multiples(n):\n    print("Dvojnásobek", n)\n    print("Trojnásobek", n)\n    print("Desetinásobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinásobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinásobek",n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Dvojnasobek", n*3)\n    print("Dvojnasobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Dvojnasobek", n*3)\n    print("Dvojnasobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    a= 2*n\n    print("Dvojnasobek", a)\n    b=3*n\n    print("Trojnasobek", b)\n    c=10*n\n    print("Trojnasobek", c)\n
def multiples(n):\n    a= 2*n\n    print("Dvojnasobek", a)\n    b= 3*n\n    print("Trojnasobek", b)\n    c= 10*n\n    print("Desetinasobek", c)\n
###
1111
def multiples(n):\n    a=2*n\n    b=3*n\n    c=10*n\n    print("Dvojnasobek", a)\n    print("Trojnasobek", b)\n    print("Desetinasobek", c)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
n=7\ndef multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n\n    \n   \n    \n
###
1111
def multiples(n):\n    dvoj = n + n\n    troj = n + n + n\n    deseti = n + n + n + n + n + n + n + n + n + n\n    print("Dvojnasobek", dvoj)\n    print("Trojnasobek", troj)\n    print("Desetinasobek", deseti)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    return n*2\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n	print("Dvojnasobek", n*2)\n	print("Trojnasobek", n*3)\n	print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n    return\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n	print("Dvojnasobek", y)\n    print("Dvojnasobek", n)\n    \n    n = 5\n    a = 2\n    b = 3\n    c = 10\n    \n    y = n*a 
def multiples(n):\n    print("Dvojnasobek", x)\n    print("Trojnasobek", y)\n    print("Desetinasobek", v)\n    a = 2\n    b = 3\n    c = 10\n    x = n*a\n    y = n*b\n    v = n*c\n
def multiples(n):\n    print("Dvojnasobek", x)\n    print("Trojnasobek", y)\n    print("Desetinasobek", v)\n    a = 2\n    b = 3\n    c = 10\n    x = n*a\n    y = n*b\n    v = n*c\n
def multiples(n):\n    print("Dvojnasobek", x)\n    print("Trojnasobek", y)\n    print("Desetinasobek", v)\n    a = 2\n    b = 3\n    c = 10\n    x = n*a\n    y = n*b\n    v = n*c\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n    
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinásobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print ("Desetinasobek", 10*n)\n	\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n    \n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n    \n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n    return \n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinasobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n	print("trojnasobek", 3*n)\n    print("desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n	print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek ",n*2)\n    print("Trojnasobek ",n*3)\n    print("Desetinasobek ",n*10)\n
def multiples(n):\n    print("Dvojnasobek ",n*2)\n    print("Trojnasobek ",n*3)\n    print("Desetinasobek ",n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n\n    print("Dvojnasobek", n*2)\n    print("trojnasobek", n*3)\n    print("Desetinasobek", n*10)
def multiples(n):\n\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n	nasobek = n*2\n	n = int("Zadejte cislo: ")
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Dtrojnasobek", n*3)\n    print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Dtrojnasobek", n*3)\n    print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print(2 * n)
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)
###
1111
def multiples(n):\n    print("Dvojnasobek",  n*2)\n
def multiples(n):\n    print("Dvojnasobek",  n*2)\n    print("Trojnasobek",  n*3)\n    print("Desetinasobek",  n*10)\n    \n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    n1 = n * 2\n    print("Dvojnasobek", n1)\n    n3 = n * 3\n    print("Trojnasobek", n3)\n    n10 = n * 10\n    print("Desetinasobek", n10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n    \n	
###
1111
def multiples(n):\n    m = n*2\n    l = n*3\n    p = n*10\n    print("Dvojnasobek", m)\n    print ("Trojnasobek", l)\n    print("Desetinasobek", p)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*4)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\ndef multiples1(n):\n    print("Dvojnasobek", n*3)\n\ndef multiples2(n):\n    print("Dvojnasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Dvojnasobek", n*3)\n    print("Dvojnasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n	
###
1111
def multiples(n):\n	ns = "nasobek"\n	print("Dvoj"  +ns, n* 2, "\n" \\n		  "Troj"  +ns, n* 3, "\n" \\n		  "Deseti"+ns, n*10, "\n")
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print(2 * n)\n
def multiples(n):\n    print(2 * n)\n
def multiples(n):\n    print(2 * n)\n    print(3 * n)\n    print(4 * n)\n
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    n=n*2\n    print("Dvojnasobek", n)\n    n=n*3/2\n    print("Trojnasobek", n)\n    n=n*10/3\n    print("Desetinasobek", n)
def multiples(n):\n    n=n*2\n    print("Dvojnasobek", n)\n    n=n*3\n    print("Trojnasobek", n//2)\n    n=n*10\n    print("Desetinasobek", n//6)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek",3*n)\n    print("Deestinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n	print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnásobek", n * 2)\n    print("Trojnásobek", n * 3)\n    print("Desetinásobek", n * 10)\n   		
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n   		
###
1111
def multiples(n):\n    n=n*2\n    print("Dvojnasobek", n)\n    n=n/2\n    n=n*3\n    print("Trojnásobek", n)\n    n=n/3\n    n=n*10\n    print("Desetinásobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinásobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print('Trojnasobek', n*3)\n    print('Desetinasobek',n*10)\n
###
1111
def multiples(n):\n    a=n*2\n    b=n*3\n    c=10*n\n    print("Dvojnasobek", a)\n    print("Trojnasobek", b)\n    print("Desetinasobek", c)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)\n
###
1111
def multiples(n):\n	print("Dvojnasobek", n*2)\n	print("Trojnasobek", n*3)\n	print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2);\n    print("Trojnasobek", n*3);\n    print("Desetinasobek", n*10);\n
###
1111
def multiples(n):\n    A=n*2\n    print("Dvojnasobek", A)\n    A=n*3\n    print("Trojnasobek", A)\n    A=n*10\n    print("Desetinasobek", A)\n\n    
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print('Trojnasobek', n*3)\n    print('Desetinasobek', n*10)\n
###
1111
def multiples(n):\n    print(2*n)\n    print(3*n)\n    print(10*n)\n
def multiples(n):\n    print(2*n)\n    print(3*n)\n    print(10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)  \n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    out = ""\n    ntx = ( ("Dvoj",2), ("Troj",3), ("Deseti",10) )\n\n    for p in ntx:\n	    out += p[0] +"nasobek " +str(p[1]*n) +"\n"\n\n    print(out)
###
1111
def multiples(n):\n    out = ""\n    ntx = ( ("Dvoj",2), ("Troj",3), ("Deseti",10) )\n\n    for p in ntx:\n	    out += p[0] +"nasobek " +str(p[1]*n) +("\n" if p[0] != "Deseti" else "")\n\n    print(out)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetnasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek",n*3)\n    print("Stvornasobek",n*4)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek",n*3)\n    print("Desetinasobek",n*10)\n
###
1111
def multiples(n):\n    m = n * 2\n    print("Dvojnasobek", m)\n    m = n * 3\n    print("Trojnasobek", m)\n    m = n * 10\n    print("Desetinasobek", m)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print('Trojnasobek', 3*n)\n    print('Desetinasobek', 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Dvojnasobek", n*3)\n    print("Dvojnasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Dvojnasobek", n*3)\n    print("Dvojnasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    d = n * 2\n    print("Dvojnasobek", d)\n    t = n * 3\n    print("Trojnasobek", t)\n    de = n * 10\n    print("Desetinasobek", de)\n\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2),\n    print("Trojnasobek", n*3), \n    print("Desetinasobek", n*10)\n\n
###
1111
def multiples(n):\n    \n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10) \n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n	print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)
def multiples(n):\n    print("Dvojnasobek", n * 2)\n	\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print ("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Tvojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n    
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n	\n    print("Trojnasobek", 3*n)\n   	\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n	print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    x=n\n    x=2*x\n    print("Dvojnasobek", x)\n    y=n\n    y=3*y\n    print("Trojnasobek", y)\n    z=n\n    z=10*z\n    print("Desetinasobek", z)\n    \n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek",n*3)\n    print("Desetinasobek",n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("trojnasobek", 3*n)\n    print("desetinasobek" , 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek" , 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n+n)\n    print("Trojnasobek", n+n+n)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",n*2)\n    print("Trojnasobek",n*3)\n    print("Desetinásobek",n*10)\n
def multiples(n):\n    print("Dvojnasobek",n*2)\n    print("Trojnasobek",n*3)\n    print("Desetinasobek",n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n         
n = 7\ndef multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    dvojnasobek=n*2\n    print("Dvojnasobek", dvojnasobek)\n    trojnasobek=3*n\n    desetinasobek=10*n\n    print("Trojnasobek", trojnasobek)\n    print("Desetinasobek", desetinasobek)\n    \ninput()
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)
###
1111
def multiples(n):\n    n=n*2\n    print("Dvojnasobek", n)\n    n=n//2\n    n=n*3\n    print("Trojnasobek", n)\n    n=n//3\n    n=n*10\n    print("Desetinasobek", n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2* n)\n    print("Trojnasobek",3* n)\n    print("Desetinasobek",10* n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)  \n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", n*2)\n    print("Desetinasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desaťnásobok", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desaťnásobok", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desaťnásobok", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinasobek ", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinasobek", 10*n)
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Dvojnasobek", 3 * n)\n    print("Dvojnasobek", 10 * n)\n
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Dvojnasobek", 3 * n)\n    print("Dvojnasobek", 10 * n)\n
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinásobek", 10 * n)\n
def multiples(n):\n    print("Dvojnasobek", 2 * n)\n    print("Trojnasobek", 3 * n)\n    print("Desetinasobek", 10 * n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("Trojnasobek", 2*n)\n    print("Desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinsobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek",n*10)\n\n
###
1111
def multiples(n):\n    n=7\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n 
def multiples(n):\n    n=5\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n 
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n 
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n 
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobok", 2*n)\n    print("Trojnasobok", 3*n)\n    print("Desatnasobok", 10*n)\n
def multiples(n):\n    print("Dvojnasobok", 2*n)\n    print("Trojnasobok", 3*n)\n    print("Desatnasobok", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n    \n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n    \n
###
1111
def multiples(n):\n    print("Dvojnasobek",n*2)\n    print("Trojnasobek",n*3)\n    print("Desetinasobek",n*10)\n    \n    \n\n\n\n\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n    \n   \n\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Dvojnasobek", 3*n)\n    print("Dvojnasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2* n)\n    print("Trojnasobek",3* n)\n    print("DSesetinasobek",10* n)\n\n\n
def multiples(n):\n    print("Dvojnasobek",2* n)\n    print("Trojnasobek",3* n)\n    print("Desetinasobek",10* n)\n\n\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\ndef nadruhou (cislo):\n    print (cislo**2)\n    \n    \n    
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n  \n
###
1111
def multiples(n):\n    print("Dvojnasobek",2* n)\n    print("trojnásobek",3* n)\n    print("Desetinásobek",10* n)
def multiples(n):\n    print("Dvojnasobek",2* n)\n    print("Trojnásobek",3* n)\n    print("Desetinásobek",10* n)
def multiples(n):\n    print("Dvojnasobek",2* n)\n    print("Trojnasobek",3* n)\n    print("Desetinasobek",10* n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Dvojnasobek", 3*n)\n    print("Dvojnasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("trojnasobek", 3*n)\n    print("Desetinasobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("trojnasobek", 3*n)\n    print("Desetinasobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek",10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)\n    \n    
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("trojnasobek", 3*n)\n    print("desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)\n           \n
###
1111
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("trojnasobek",3*n)\n    print("Čtyřnasobek",4*n)\n
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("desetinasobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnásobek", 3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinásobek",10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek",10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n    print("trojnasobek",3*n)\n    print("Desetinasobek",10*n)
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("trojnasobek",3*n)\n    print("Desetinasobek",10*n)
def multiples(n):\n    print("Dvojnasobek",2*n)\n    print("Trojnasobek",3*n)\n    print("Desetinasobek",10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n     \n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Dvojnasobek", 2*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Dvojnasobek", 3*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n    \n
###
1111
def multiples(n):\n    m=2*n\n    k=3*n\n    l=10*n\n    print("Dvojnasobek",m)\n    print("Trojnasobek",k)\n    print("Desetinasobek",l)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinásobek", n*10)
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n    \n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Drojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n * 2)\n    print("Trojnasobek", n * 3)\n    print("Desetinasobek", n * 10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n\n    
###
1111
def multiples(n):\n    print("Dvojnasobek", 2*n)\n	print("Trojnasobek", 3*n)
def multiples(n):\n    print("Dvojnasobek", 2*n,"\n","Trojnasobek", 3*n,"\n","Desetinasobek", 10*n)\n		
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetnasobek", n*10)\n
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n\n            \n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n
def multiples(n):\n	\n            \n    print("Dvojnasobek", n*2)\n    print("Trojnásobek", n*3)\n    print("Desetinásobek", n*10)\n
def multiples(n):\n	\n            \n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def multiples(n):\n    print("Dvojnasobek", n)\n
def multiples(n):\n    \n    print("Dvojnasobek", 2*n)\n    print("Trojnasobek", 3*n)\n    print("Desetinasobek", 10*n)\n	
###
1111
def multiples(n):\n    print("Dvojnasobek", n*2)\n    print("Trojnasobek", n*3)\n    print("Desetinasobek", n*10)\n
###
1111
def sum_dif(a, b):\n    print(a + b)\n
def sum_dif(a, b):\n    print(a + b)\n    print(a - b)\n
def sum_dif(a, b):\n    print("a + b =", a + b)\n    print("a - b =", a - b)
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a ,"+", b,"=", a+b)\n    print(a,"-", b,"=", a-b)
###
1111
def sum_dif(a, b):\n    print(a ,"+", b,"=", a+b)\n    print(a ,"-", b,"=", a-b)
###
1111
def sum_dif(a, b):\n    print(a,'+', b,'=',a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",13)\n
def sum_dif(a, b):\n    print(a,"+", b,"=")\n
def sum_dif(a, b):\n    print(a,"+", b,"=",ab)\n
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n	print(a,"-", b,"=",a-b)\n
def sum_dif(a, b):\n    print(a,"+", b,"=", a+b)\n	print(a,"-", b, "=", a-b)
def sum_dif(a, b):\n    print(a,"+", b,"=", a+b)\n    print(a,"-", b, "=", a-b)
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)\n    \n
###
1111
def sum_dif(a, b):\n    print(a, b)\n
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=", a + b)\n    print(a,"-", b,"=", a - b)\n	
###
1111
def sum_dif(a, b):\n    print(a+b)\n    print(a-b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n	\n    print(a, "+", b, "=",a+b)\n    print(a, "-", b, "=",a-b)
###
1111
def sum_dif(a, b):\n    print(a, "+" ,b, "=", a + b)\n
def sum_dif(a, b):\n    print(a, "+" ,b, "=", a + b)\n    print(a, "-" ,b, "=", a - b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b )\n    print(a, "-", b, "=", a-b )
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "+", b, "=", a-b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print (a, "-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+',b,'=',a+b)\n    print(a,'-',b,'=',a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",13)\n    print(a,"-",b,"=",-3)\n    \n    \n
def sum_dif(a, b):\n    x=a+b\n    o=a-b\n    print(a,"+",b,"=",x)\n    print(a,"-",b,"=",o)\n    \n    \n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    minus = a - b\n    plus = a + b\n    print(a, "+", b, "=", plus)\n    print(a, "-", b, "=", minus)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, b)\na = 5\nb = 8\nprint("5 + 8 =", a + b)\nprint("5 - 8 =", a - b)\n\n\n
def sum_dif(a, b):\n    print("a + b =", a + b)\n    print("a - b =", a - b)\n    \n    \n
def sum_dif(a, b):\n    print(a + b ,"=", a + b)\n    print(a - b ,"=", a - b)\n    \n    \n
def sum_dif(a, b):\n    print(a ,"+", b ,"=", a+b)\n    print(a ,"-", b ,"=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, b, a + b)\n    print(a, b)
def sum_dif(a, b):\n    print(a, b, a + b)\n    print(a, b, a - b)
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)
###
1111
def sum_dif(a, b):\n    print("5", "+", "8", "=", "13")\n    print("5", "-", "8", "=", "-3")\n
def sum_dif(a, b):\n    print("4", "+", "2", "=", a+b)\n    print("4", "-", "2", "=", a-b)\n
def sum_dif(a, b):\n    print("10", "+", "3", "=", a + b)\n    print("10", "-", "3", "=", a - b)\n
def sum_dif(a, b):\n    print(4, "+", "2", "=", a + b)\n    print(4, "-", "2", "=", a - b)\n
def sum_dif(a, b):\n    x = a\n    z = b\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n	   \n	
###
1111
def sum_dif(a, b):\n    plus=a+b\n    minus=a-b\n    print(a,"+",b,"=",plus)\n    print(a,"-",b,"=",minus)
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)\n
###
1111
def sum_dif(a, b):\n    print(a," + ", b," = ",a+b)\n    print(a," - ", b," = ",a-b)\n
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n	print(a, "+", b, "=", a+b)\n	print(a, "-", b, "=", a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n    return
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    soucet = a + b\n    rozdil = a - b\n    print(a, "+", b, "=", soucet)\n    print(a, "-", b, "=", rozdil)\n  \n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",(a+b))\n    print(a,"-",b,"=",(a-b))\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b )
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=", a + b)\n    print(a,"-", b,"=", a - b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)
###
1111
def sum_dif(a, b):\n    print(a,'+',b,'=',a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=", a+b)\n    print(a,"-", b,"=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a + b)\n    print(a,"-", b,"=",a - b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=", a+b)\n    print(a,"-", b,"=", a-b)\n
###
1111
def sum_dif(a, b):\n    plus = a + b\n    minus = a - b\n    print("%d + %d = %d" % (a, b, plus))\n    print("%d - %d = %d" % (a, b, minus))
###
1111
def sum_dif(a, b):\n    print(a, ("+"), b, ("="), a+b)\n    print(a, ("-"), b, ("="), a-b)
###
1111
def sum_dif(a, b):\n    c = a+b\n    d = a-b\n    print(a,"+",b,"=",c)\n    print(a,"-",b,"=",d)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+',b,'=',a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a," + ", b," = ", a+b)\n    print(a," - ", b, " = ", a-b)\n
def sum_dif(a, b):\n    print(a,"+", b,"=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print( a,"+",b,"=",a + b)\n    print(a,"-",b,"=",a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+', b, '=', a+b)\n    print(a,'-', b, '=', a-b)\n    \n    \n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "= ", a+b)\n    print(a, "-", b, "= ", a-b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n	print(a, "+", b, "=", a+b)\n	print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=",a+b)\n    print(a, "-", b, "=",a-b) 
###
1111
def sum_dif(a, b):\n    print(a," + ",b ," = ", a+b)\n    print(a," - ",b ," = ", a-b)\n
def sum_dif(a, b):\n    print(a,"+",b ,"=", a+b)\n    print(a,"-",b ,"=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    c=a+b\n    print(a, "+", b, "=", c)\n    c=a-b\n    print(a, "-", b, "=", c)\n
###
1111
def sum_dif(a, b):\n    print(a,'+',b,'=',a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a , "+" , b , "=" , a+b)\n    print(a , "-" , b , "=" , a-b)\n
###
1111
def sum_dif(a, b):\n    print("{a} + {b} = {res}".format(a=a, b=b, res=a+b))\n    print("{a} - {b} = {res}".format(a=a, b=b, res=a-b))\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n    \n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)\n
###
1111
def sum_dif(a, b):\n    addition = a + b\n    subtraction = a - b\n    print(a, "+", b, "=", addition)\n    print(a, "-", b, "=", subtraction)\n
###
1111
def sum_dif(a, b):\n    print(a,"+","=",a+ b)\n    print(a,"-","=",a+ b)\n
def sum_dif(a, b):\n    print(a,"+", b,"=",a+ b)\n    print(a,"-", b,"=",a- b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+',b,'=',a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, " + ", b, " = ", a + b)\n    print(a, " - ", b, " = ", a - b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,end=" + ")\n    print(b,end=" = ")\n    print(a+b)\n    print(a,end=" - ")\n    print(b,end=" = ")\n    print(a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+ ",b ,"=" ,a+b)\n    print(a, "-" ,b, "=" ,a-b)
def sum_dif(a, b):\n    print(a, "+",b ,"=" ,a+b)\n    print(a, "-" ,b, "=" ,a-b)
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=",a + b)\n    print(a,"-", b, "=",a - b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
a = 5\nb = 8\ndef sum_dif(a, b):\n    print("5 + 8 =", a + b)\n    print("5 - 8 =", a - b)\n
def sum_dif(a, b):\n    print("4 + 2 =", a + b)\n    print("4 - 2 =", a - b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=",a+b)\n    print(a,"-", b, "=",a-b)
###
1111
def sum_dif(a, b):\n    print(a, "+", b , "=", a+b)\n    print(a, "-", b , "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    c=a+b\n    d=a-b\n    print(a, "+", b,"=",c)\n    print(a, "-",b,"=",d)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a + b)\n    print(a, "-", b, "=", a - b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print("a+b=",a+b)\n    print(a-b)\n
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", a, "=", a-b)\n
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+',b, '=', a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    soucet= a+b\n    rozdil= a-b\n    print(a,"+",b,"=",soucet)\n    print(a,"-",b,"=",rozdil)\n	
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+" ,b, "=" ,a+b)\n    print(a, "-" ,b, "=" ,a-b)\n    \n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b)\n    print(a,"-",b)\n
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print("5 + 8 = 13")\n    print("5 - 8 = -3")\n
def sum_dif(a, b):\n    print(a, "+", b, "=",a+b)\n    print(a, "-", b, "=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a," + ",b," = ",a+b)\n    print(a," - ",b," = ",a-b)\n
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+", b, "=", a+b)\n    print(a,"-", b, "=", a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,"+",b,"=",a+b)\n    print(a,"-",b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    sucet = a + b\n    rozdiel = a - b\n	\n    \n    print(a, "+", b, "=", sucet)\n    print(a, "-", b, "=", rozdiel)\n   \n
###
1111
def sum_dif(a, b):\n    print(a,"+", b,"=",a+b)\n    print(a,"-", b,"=",a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+',b,'=',a+b)\n    print(a,'-',b,'=',a-b)\n
###
1111
def sum_dif(a, b):\n    print(a,'+', b, '=', a+b)\n    print(a,'-', b, '=', a-b)\n
###
1111
def sum_dif(a, b):\n    print(a, "+", b = a+b)\n	print(a, "-", b = a-b)
def sum_dif(a, b):\n    print(a, "+", b, "=", a+b)\n    print(a, "-", b, "=", a-b)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n    #print "test"\n	\n    #print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctrvto je", n*n*n*n)
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctrvtou je", n*n*n*n)
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na treti je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    \n\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n **4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)    \n    print(n, "na treti je", n*n*n)\n    print(n, "na čtvrtou je", n*n*n*n)
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je",n*n*n*n)
###
1111
def powers(n):\n    print(n, "na treti neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na treti neni", n**4)\n
def powers(n):\n    print(n, "na treti neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na treti neni", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou neni", n*n)\n    print(n, "na treti neni", n*n*n)\n    print(n, "na ctvrtou neni", n*n*n*n)\n
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)    
###
1111
def powers(n):\n    print(n, "na druhou je", (n * n))\n    print(n, "na treti je", (n * n * n))\n    print(n, "na ctvrtou je", (n * n * n * n))\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n,"na druhou je",n*n)\n    print(n,"na treti je",n*n*n)\n    print(n,"na ctvrtou je",n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou", n**2)\n    print(n, "na treti", n**3\n    print(n, "na ctvrtou", n**4\n
def powers(n):\n    print(n, "na druhou", n**2)\n    print(n, "na treti", n**3\n    print(n, "na ctvrtou", n**4)\n
def powers(n):\n    print(n, "na druhou", n*n)\n    print(n, "na treti", n*n*n)\n    print(n, "na ctvrtou", n**4)\n
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n	print(n, "na druhou je", n**2)\n	print(n, "na treti je", n**3)\n	print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na čtvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "druhou je", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "druhou je", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "druhou je", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou", n**2)\n    print(n, "na treti", n**3)\n    print(n, "ctvrtou", n**4)\n
def powers(n):\n    print(n, "na druhouje", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhouje", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n\n    
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n 	print(n, "na treti je", n**3)\n	print(n, "na ctvrtou je", n**4)
def powers(n):\n    print(n, "na druhou je", n**2)\n 	print(n, "na treti je", n**3)\n	print(n, "na ctvrtou je", n**4)
def powers(n):\n    print(n, "na druhou je", n**2)\n    print (n, "na treti je", n**3)\n    print (n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n,"na druhou je",n*n)\n    print(n,"na treti je",n*n*n)\n    print(n,"na ctvrtou je",n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctrvtou je", n*n*n*n)
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctrvtou je", n*n*n*n)
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3) \n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na treti neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na treti neni", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    n2 = n*n\n    print(n, "na druhou je", n2)\n    n3 = n*n*n\n    print(n, "na treti je", n3)\n    n4 = n*n*n*n\n    print(n, "na ctvrtou je", n4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", (n**2))\n	print(n, "na treti je", (n**3))\n    print(n, "na ctvrtou je", (n**4))
def powers(n):\n    print(n, "na druhou je", (n**2))\n    print(n, "na treti je", (n**3))\n    print(n, "na ctvrtou je", (n**4))\n	\n    
###
1111
def powers(n):\n    print(n, "na druhou je", n * n)\n    print(n, "na treti je", n * n * n)\n    print(n, "na ctvrtou je", n * n * n * n)\n
###
1111
def powers(n):\n    print(n, "na treti je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na treti je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtouje", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    m = n**2\n    l = n**3\n    o = n**4\n    print (n, "na druhou je", m)\n    print (n, "na treti je", l)\n    print (n, "na ctvrtou je", o)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", pow(n,2))\n    print(n, "na treti je", pow(n,3))\n    print(n, "na ctvrtou je", pow(n,4))\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    for i in range(2,5):\n    	print(n, "na treti je", n**i)\n
def powers(n):\n    for i in range(2,5):\n    	print(n, "na treti je", n**i)\n
def powers(n):\n    for i in range(2,5):\n    	print(n, "na treti je", n**i)\n
def powers(n):\n\n	print(n, "na druhou je", n**2)\n	print(n, "na treti je", n**3)\n	print(n, "na ctvrtou je", n**4)\n    \n	
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na třetí je", n**3)\n    print(n, "na čtvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na tr etí je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou", n**2)\n    print(n,"na treti",n**3)\n    print(n,"na ctvrtou",n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n,"na treti je",n**3)\n    print(n,"na ctvrtou je",n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n	print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(5, "na druhou je", n**2)\n    print(5, "na treti je", n**3)\n    print(5, "na ctvrtou je", n**4)
def powers(n):\n    print(5, "na druhou je", n**2)\n    print(5, "na treti je", n**3)\n    print(5, "na ctvrtou je", n**4)
def powers(n):\n    print(5, "na druhou je", n**2)\n    print(5, "na treti je", n**3)\n    print(5, "na ctvrtou je", n**4)
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou ke", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou ke", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je" , n ** 3)\n    print(n, "na ctvrtou je" , n ** 4)\n	
###
1111
def powers(n):\n    print(n, "na druhou neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou neni", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n    \n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n	print(n, "na druhou je", n**2)\n	print(n, "na treti je", n**3)\n	print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2);\n    print(n, "na treti je", n**3);\n    print(n, "na ctvrtou je", n**4);\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je" , n*n)\n    print(n, "na treti je" , n*n*n)\n    print(n, "na ctvrtou je" , n*n*n*n)\n    	\n        \n
###
1111
def powers(n):\n    print(n, "na druhou neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou neni", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    m = n**2\n    print(n, "na druhou je", m)\n    m=n**3\n    print(n, "na treti je", m)\n    m=n**4\n    print(n, "na ctvrtou je", m)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je",n**4)\n
###
1111
def powers(n):\n    d = n ** 2 \n    print(n, "na druhou je", d)\n    d = n ** 3 \n    print(n, "na treti je", d)\n    d = n ** 4 \n    print(n, "na ctvrtou je", d)\n\n\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2),\n    print(n, "na treti je", n**3),\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na treti je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na treti je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na treti neni", n**2)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je ", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na treti neni", n ** 2)\n    print(n, "na treti neni", n ** 3)\n    print(n, "na treti neni", n ** 4)\n
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n  t = ( ("druhou",2), ("treti",3), ("ctvrtou",4) )\n  for p in t:\n    m = 1\n    for i in range(p[1]):\n        m *= n\n    print( "{} na {} je {}".format(n, p[0], m) )
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n    \n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    \n    print(n, "na treti je", n**3)\n    \n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n   \n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n   \n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je" n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    x=n\n    x=x**2\n    print(n, "na druhou je", x)\n    y=n\n    y=y**3\n    print(n, "na treti je", y)\n    z=n\n    z=z**4\n    print(n, "na ctvrtou je", z)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n,"na druhou je",n*n)\n    print(n, "na treti je", n*n*n)\n    print(n,"na ctvrtou je",n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou", n**4)\n	
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n	
###
1111
def powers(n):\n    print(n, "na drohou je ", n**2)\n    print(n, " na treti je " , n**3)\n    print(n, "na ctvrtou je " ,n**4)
def powers(n):\n    print(n, "na drohou je ", n**2)\n    print(n, "na treti je " , n**3)\n    print(n, "na ctvrtou je " ,n**4)
def powers(n):\n    print(n, "na druhou je ", n**2)\n    print(n, "na treti je " , n**3)\n    print(n, "na ctvrtou je " ,n**4)
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je" , n**3)\n    print(n, "na ctvrtou je" ,n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", pow(n,2))\n    print(n, "na treti je", pow(n,3))\n    print(n, "na ctvrtou je", pow(n,4))\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)    \n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je",n*n)\n    print(n, "na treti je",n*n*n)\n    print(n, "na ctvrtou je",n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
n = 5\ndef powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)	
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je",n*n)\n    print(n,"na treti je",n*n*n)\n    print(n,"na ctvrtou je",n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou neni", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na třetí je", n**3)\n    print(n, "na čtvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na tretí je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na cvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je ", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je ",n**2)\n    print(n, "na treti je ",n**3)\n    print(n, "na ctvrtou je ",n**4)\n
def powers(n):\n    print(n, "na druhou je",n**2)\n    print(n, "na treti je",n**3)\n    print(n, "na ctvrtou je",n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na treti neni", n**3)\n
def powers(n):\n    print(n, "na treti je", n**3)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n	print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je" , n**4)\n    \n	\n    \n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je ", n**2)\n    print(n, "na treti je ",n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je ", n**2)\n    print(n, "na treti je ",n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je ", n**2)\n    print(n, "na treti je ", n**3)\n    print(n, "na ctvrtou je ", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je" , n**2)\n    print(n, "na treti je" ,n**3)\n    print(n, "na ctvrtou je" ,n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n  \n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na třetí je", n**3)\n    print(n, "na třetí je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na třetí je", n**3)\n    print(n, "na třetí je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**n)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je",n* n)\n    print(n, "na třetí je",n*n* n)\n    print(n, "na čtvrtou je",n*n*n* n)\n    \n
def powers(n):\n    print(n, "na druhou je",n* n)\n    print(n, "na treti je",n*n* n)\n    print(n, "na ctvrtou je",n*n*n* n)\n    \n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na třetí je", n**3)\n    print(n, "na čtvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na třetí je", n**3)\n    print(n, "na čtvrtou je",n**4)\n
def powers(n):\n    print(n, "na druhou je",n**2)\n    print(n, "na třetí je",n**3)\n    print(n, "na čtvrtou je",n**4)\n
def powers(n):\n    print(n,"na druhou je",n**2)\n    print(n,"na třetí je",n**3)\n    print(n,"na čtvrtou je",n**4)\n
def powers(n):\n    print(n,"na druhou je",n**2)\n    print(n,"na treti je",n**3)\n    print(n,"na ctvrtou je",n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", 2**n)\n    print(n, "na treti je", 3**n)\n    print(n, "na ctvrtou je", 4**n)\n    
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n    
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n,"na druhou je",n*2)\n	print(n,"na treti je",n*3)\n    print(n,"na ctvrtou je",n*4)\n \n
def powers(n):\n    print(n, "na druhou je",n*2)\n	print(n, "na treti je",n*3)\n    print(n, "na ctvrtou je",n*4)\n \n
def powers(n):\n    print(n, "na druhou je",n*2)\n    print(n, "na treti je",n*3)\n    print(n, "na ctvrtou je",n*4)\n \n
def powers(n):\n    print(n, "na druhou je",n**2)\n    print(n, "na treti je",n**3)\n    print(n, "na ctvrtou je",n**4)\n \n
###
1111
def powers(n):\n    print(5, "na druhou je", 25)\n    print(5, "na treti je", 125)\n    print(5, "na ctvrtou je", 625)\n
def powers(n):\n    print(5, "na druhou je", n**2)\n    print(5, "na treti je", n**3)\n    print(5, "na ctvrtou je", n**4)\n
def powers(n):\n    print("na druhou je", n**2)\n    print("na treti je", n**3)\n    print("na ctvrtou je", n**4)\n
def powers(n):\n    print(n,"na druhou je", n**2)\n    print(n,"na treti je", n**3)\n    print(n,"na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n,"na druhou je",n*n)\n    print(n, "na treti je", n*n*n)\n    print(n,"na ctvrtou je",n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)      \n
###
1111
def powers(n):\n    print(n,"na druhou je",n**2)\n    print(n,"na treti je",n**3)\n    print(n,"na ctvrtou je",n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je",n**3)\n    print(n, "na ctvrtou je",n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    \n
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    m=n**2\n    k=n**3\n    l=n**5\n    print(n, "na treti je",m)\n    print(n, "na treti je",k)\n    print(n, "na treti je",l)\n
def powers(n):\n    m=n**2\n    k=n**3\n    l=n**4\n    print(n, "na treti je",m)\n    print(n, "na treti je",k)\n    print(n, "na treti je",l)\n
def powers(n):\n    m=n**2\n    k=n**3\n    l=n**4\n    print(n, "na druhou je",m)\n    print(n, "na treti je",k)\n    print(n, "na ctvrtou je",l)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)
###
1111
def powers(n):\n    print(n, "na druhou neni", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou neni", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n ** 2)\n    print(n, "na treti je", n ** 3)\n    print(n, "na ctvrtou je", n ** 4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n,"\n",n, "na treti je", n*n*n, "\n", n, "na ctvrtou je", n*n*\n         n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n*n)\n    print(n, "na treti je", n*n*n)\n    print(n, "na ctvrtou je", n*n*n*n)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti neni", n**3)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti neni", n**5)\n    print(n, "na ctvrtou je", n**4)\n
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def powers(n):\n    print(n, "na druhou je", n**2)\n    print(n, "na treti je", n**3)\n    print(n, "na ctvrtou je", n**4)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin", n*7*24)\n    print("Pocet minut", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet hodin:", n*24*60*7)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut:", n*24*60*7)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 6*7)\n    print("Pocet hodin:", 6*7*24)\n    print("Pocet minut:", 6*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n    
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 7 * 24)\n    print("Pocet minut:", n * 7 * 24 * 60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*n*24)\n    print("Pocet minut:", 7*n*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 42)\n    print("pocet hodin:", 1008)\n    print("pocet minut:", 60480)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("pocet minut:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet dnu:", n * 7 * 24)\n    print("Pocet dnu:", n * 7 * 24 * 60)\n
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 7 * 24)\n    print("Pocet minut:", n * 7 * 24 * 60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", 42)\n    print("Pocet hodin", 42*24)\n    print("Pocet minut", 42*24*60)
def weeks(n):\n    print("Pocet dnu:", 7)\n    print("Pocet hodin", 7*24)\n    print("Pocet minut", 7*24*60)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 168*n)\n    print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n	print("Pocet hodin", 7*24*n)\n	print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n	print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 168*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 7*24*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 7*24*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin", 7*24*n)\n    print("Pocet minut", 7*24*60*n)
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*24*n)\n    print("Pocet minut:", 7*24*60*n)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 24*7*n)\n    print("Pocet minut:", 60*24*7*n)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet dnu:", n*7*24)\n    print("Pocet dnu:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    dny = n * 7\n    hodiny = dny * 24\n    minuty = hodiny * 60\n    print("Pocet dnu:", dny)\n    print("Pocet hodin:", hodiny)\n    print("Pocet minut:", minuty)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n   
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n	print("Pocet dnu:", 7*n)\n	print("Pocet hodin:", 168*n)\n	print("Pocet minut:", 10080*n)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet dnu:", n*10080)\n    return\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet dnu:", n*10080)\n    return\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet dnu:", n*10080)\n    return\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet dnu:", n*10080)\n    return\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    pocetDnu = n * 7\n    pocetHodin = pocetDnu * 24\n    pocetMinut = pocetHodin * 60\n    print("Pocet dnu:", pocetDnu)\n    print("Pocet hodin:", pocetHodin)\n    print("Pocet minut:", pocetMinut)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", (n*7)*24)\n    print("Pocet minut:", (n*7)*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet munut:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:",7*n)\n    print("Pocet hodin:",7*n*24)\n    print("Pocet minut:",7*n*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:",n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut:", n*24*7*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("pocet minut:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("pocet minut:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 168*n)\n    print("Pocet minut:", 10080*n)
###
1111
def weeks(n):\n    n = 42\n    print("Pocet dnu:", n)\n    print("Pocet hodin:", n*24)\n    print("Pocet minut:", n*60*24)
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)
###
1111
def weeks(n):\n    weeks = 6\n    print("Pocet dnu:", weeks*7)\n    print("Pocet hodin:", weeks*168)\n    print("Pocet minut:", weeks*10080)
def weeks(n):\n    weeks = 6\n    print("Pocet dnu:", weeks*7)\n    print("Pocet hodin:", weeks*168)\n    print("Pocet minut:", weeks*10080)
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 7 * 24)\n    print("Pocet minut:", n * 7 * 24 * 60)\n    \n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n    \n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 7 * 24)\n    print("Pocet minut:", n * 7 * 24 * 60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*n*24)\n    print("Pocet minut", 7*n*24*60)\n
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*n*24)\n    print("Pocet minut:", 7*n*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*24*7)\n    print("Pocet minut:", n*60*24*7)\n
###
1111
def weeks(n):\n    den_p = n * 7\n    hodin_p = den_p * 24\n    minut_p = hodin_p * 60\n    print("Pocet dnu:", den_p)\n    print("Pocet hodin", hodin_p)\n    print("Pocet minut", minut_p)\n
def weeks(n):\n    den_p = n * 7\n    hodin_p = den_p * 24\n    minut_p = hodin_p * 60\n    print("Pocet dnu:", den_p)\n    print("Pocet hodin", hodin_p)\n    print("Pocet minut", minut_p)\n
def weeks(n):\n    den_p = n * 7\n    hodin_p = den_p * 24\n    minut_p = hodin_p * 60\n    print("Pocet dnu:", den_p)\n    print("Pocet hodin", hodin_p)\n    print("Pocet minut", minut_p)\n
def weeks(n):\n    den_p = n * 7\n    hodin_p = den_p * 24\n    minut_p = hodin_p * 60\n    print("Pocet dnu:", den_p)\n    print("Pocet hodin", hodin_p)\n    print("Pocet minut", minut_p)\n
def weeks(n):\n    den_p = n * 7\n    hodin_p = den_p * 24\n    minut_p = hodin_p * 60\n    print("Pocet dnu:", den_p)\n    print("Pocet hodin:", hodin_p)\n    print("Pocet minut:", minut_p)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet dnu:", n*7*24)\n    print("Pocet dnu:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    days = n*7\n    hours = days*24\n    minutes = hours*60\n    print ("Pocet dnu:", days)\n    print ("Pocet hodin:", hours)\n    print ("Pocet minut:", minutes)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*60)\n    print("Pocet minut:", n*7*3600)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    d=n*7\n    print("Pocet dnu:", d)\n    h=d*24\n    print("Pocet dnu:", h)\n    m=h*60\n    print("Pocet dnu:", m)\n
def weeks(n):\n    d=n*7\n    print("Pocet dnu:", d)\n    h=d*24\n    print("Pocet hodin:", h)\n    m=h*60\n    print("Pocet minut:", m)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print('Pocet hodin:', n*7*24)\n    print('Pocet minut:', n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*168*60)\n
###
1111
def weeks(n):\n    z=(n*7)\n    x=(z*24)\n    print("Pocet dnu:", z)\n    print("Pocet hodin:", x)\n    print("Pocet minut:", x*60)\n	
###
1111
def weeks(n):\n	print("Pocet dnu:", n*7)\n	print("Pocet hodin:", n*168)\n	print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    n=n*7;\n    print("Pocet dnu:", n);\n    n=n*24;\n    print("Pocet hodin:", n);\n    n=n*60;\n    print("Pocet minut:", n);
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    days=n*7\n    hours=days*24\n    minuts=hours*60\n    print("Pocet dnu:", days)\n    print("Pocet dnu:", hours)\n    print("Pocet dnu:", minuts)\n
def weeks(n):\n    days=n*7\n    hours=days*24\n    minuts=hours*60\n    print("Pocet dnu:", days)\n    print("Pocet hodin:", hours)\n    print("Pocet minut:", minuts)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",(n*7)*24)\n    print("Pocet minut:",(n*7)*24*60)
###
1111
def weeks(n):\n    m=n*7\n    print("Pocet dnu:", m)\n    b=m*24\n    print("Pocet hodin:", b)\n    v=b*60\n    print("Pocet minut:", v)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:", n*7*24*60)
###
1111
def weeks(n):\n    days = n * 7\n    print("Pocet dnu:", days)\n    hours = days * 24\n    print("Pocet hodin:", hours)\n    minutes = hours * 60\n    print("Pocet minut:", minutes)\n\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:" , n*7*24)\n    print("Pocet minut:" , n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet dnu:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet dnu:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*60)\n    print("Pocet minut:", n*7*60*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*60)\n    print("Pocet minut:", n*7*60*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    days = n*7\n    hours = days*24\n    minutes = hours*60\n    print("Pocet dnu:", days)\n    print("Pocet hodin:", hours)\n    print("Pocet minut:", minutes)\n    \n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    days = 7 * n\n    hours = days * 24\n    minutes = hours * 60\n    print("Pocet dnu:", days)\n    print("Pocet hodin:", hours)\n    print("Pocet minut:", minutes)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print ("Pocet hodin", n*7*24)\n    print("Pocet minut", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print ("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*1080)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet hodin:",n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 7 * 24)\n    print("Pocet minut:", n * 7 * 24 * 60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:",n)\n    print("Pocet hodin:",n*24)\n    print("Pocet minut:",n*24*60)\n\n
def weeks(n):\n    print("Pocet dnu:", n)\n    print("Pocet hodin:", n*24)\n    print("Pocet minut:", n*24*60)\n\n
def weeks(n):\n    print("Pocet dnu:", n)\n    print("Pocet hodin:", n*24)\n    print("Pocet minut:", n*24*60)\n\n
def weeks(n):\n    print("Pocet dnu:", n)\n    print("Pocet hodin:", n*24)\n    print("Pocet minut:", n*(24*60))\n\n
def weeks(n):\n    print("Pocet dnu:", n)\n    print("Pocet hodin:", n*24)\n    print("Pocet minut:", n*1440)\n\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:",n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu: ", n*7, "\nPocet hodin: ", n*7*24, "\nPocet minut: ", n*7*24*60, sep='')\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n *7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    days = n * 7\n    hours = days * 24\n    minutes = hours * 60\n    print("Pocet dnu:", days)\n    print("Pocet hodin:", hours)\n    print("Pocet minut:", minutes)\n
###
1111
def weeks(n):\n    print("Pocet dnu:" ,n*7)\n    print("Pocet hodin:" ,n*7*24)\n    print("Pocet minut:" ,n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*168*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n	
###
1111
n = 6\nd = n * 7\nh = n * 168\nm = h * 60\ndef weeks(n):\n    print("Pocet dnu:", d)\n    print("Pocet hodin", h)\n    print("Pocet minut", m)\n
n = 1\nd = n * 7\nh = n * 168\nm = h * 60\ndef weeks(n):\n    print("Pocet dnu:", d)\n    print("Pocet hodin:", h)\n    print("Pocet minut:", m)\n
n = 3\nd = n * 7\nh = n * 168\nm = h * 60\n\ndef weeks(n):\n    print("Pocet dnu:", d)\n    print("Pocet hodin:", h)\n    print("Pocet minut:", m)\n
n = 1\n\ndef weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 168)\n    print("Pocet minut:", n * 10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("pocet minut:", n*7*24*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7 * n)\n    print("Pocet hodin:", 7 * 24 * n)\n    print("Pocet minut:", 7 * 24 * 60 * n)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut:", n*60*24*7)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*n*24)\n    print("Pocet minut:", 7*n*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin", (n*7)*24)\n    print("Pocet minut:", ((n*7)*24)*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin", (n*7)*24)\n    print("Pocet minut:", ((n*7)*24)*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin",  (n*7)*24)\n    print("Pocet minut:", ((n*7)*24)*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", (n*7)*24)\n    print("Pocet minut:",((n*7)*24)*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*90)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n * 7)\n    print("Pocet hodin:", n * 7 * 24)\n    print("Pocet minut:", n * 7 * 24 * 60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*168)\n    print("Pocet minut:", 10080)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n	print("Pocet hodin:", n*7)\n    print("Pocet minut:", n*7*24*60)
def weeks(n):\n    print("Pocet dnu:", n*7)\n	print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)
def weeks(n):\n    print("Pocet dnu:", n*7)\n    d=n*7\n	print("Pocet hodin:", d*24)\n    m=d*60\n    print("Pocet minut:",m)
d = n * 7\nm=d*60\ndef weeks(n):\n    print("Pocet dnu:", n*7)\n	print("Pocet hodin:", d * 24)\n    print("Pocet minut:",m)
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut)", n*24*7*60)\n    \n    \n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut)", n*24*7*60)\n    \n    \n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut", n*24*7*60)\n    \n    \n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut", n*24*7*60)\n    \n    \n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut:", n*24*7*60)\n    \n    \n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7 * n)\n    print("Pocet hodin:", 7 * 24 * n)\n    print("Pocet sekund:", 7 * 24 * 60 * n)\n
def weeks(n):\n    days = 7 * n\n    hours = 24 * days\n    seconds = 60 * hours\n    print("Pocet dnu:",days )\n    print("Pocet hodin:",hours )\n    print("Pocet sekund:",seconds )\n
def weeks(n):\n    days = 7 * n\n    hours = 24 * days\n    seconds = 60 * hours\n    print("Pocet dnu:",days)\n    print("Pocet hodin:",hours)\n    print("Pocet sekund:",seconds)\n
def weeks(n):\n    days = 7 * n\n    hours = 24 * days\n    seconds = 60 * hours\n    print("Pocet dnu:",days)\n    print("Pocet hodin:",hours)\n    print("Pocet sekund:",seconds)\n
def weeks(n):\n    days = 7 * n\n    hours = 24 * days\n    minutes = 60 * hours\n    print("Pocet dnu:",days)\n    print("Pocet hodin:",hours)\n    print("Pocet minut:",minutes)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print(n*7, (n*7)*24, ((n*7)*24)*60)\n
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*(7*24))\n	print("Pocet minut:",(n)
def weeks(n):\n   	print("Pocet dnu:",n*7),\n   	print("Pocet hodin:",n*7*24),\n   	print("Pocet minut:",n*7*24*60)
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*24*n)\n    print("Pocet minut:", 7*24*60*n)\n
###
1111
def weeks(n):\n    a= n*7\n    b= a*24\n    c= b*60\n    print("Pocet dnu:", a)\n    print("Pocet hodin:", b)\n    print("Pocet minut:", c)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:" ,42)\n    print("Pocet hodin:" ,1008)\n    print("Pocet minut:" ,60480)\n
def weeks(n):\n    print("Pocet dnu:" ,42)\n    print("Pocet hodin:" ,1008)\n    print("Pocet minut:" ,60480)\n
def weeks(n):\n    print("Pocet dnu:" ,n*7)\n    print("Pocet hodin:" ,n*7*24)\n    print("Pocet minut:" ,n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:",n*168)\n    print("Pocet minut:",n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*168)\n    print("Pocet minut:", n*10080)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:",24*n*7)\n    print("Pocet minut:",n*60*24*7)     \n          \n
###
1111
def weeks(n):\n    print("Pocet dnu:", 42)\n    print("Pocet hodin:", 1008)\n    print("Pocet minut:", 60480)\n
def weeks(n):\n    print("Pocet dnu:", 7)\n    print("Pocet hodin:", 168)\n    print("Pocet minut:", 10080)\n
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 168*n)\n    print("Pocet minut:", 10080*n)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7)\n    print("pocet hodin:",168)\n    print("pocet minut:",10080)
def weeks(n):\n    print("Pocet dnu:",7)\n    print("pocet hodin:",168)\n    print("pocet minut:",10080)
def weeks(n):\n    print("Pocet dnu:",7*n)\n    print("pocet hodin:",168)\n    print("pocet minut:",10080)
def weeks(n):\n    print("Pocet dnu:",7*n)\n    print("pocet hodin:",168*n)\n    print("pocet minut:",10080*n)
def weeks(n):\n    print("Pocet dnu:",7*n)\n    print("Pocet hodin:",168*n)\n    print("Pocet minut:",10080*n)
###
1111
def weeks(n):\n    print("Pocet dnu:", 42)\n    print("Pocet dnu:", 1008)\n    print("Pocet dnu:", 60480)\n\n\n
def weeks(n):\n    print("Pocet dnu:", 7)\n    print("Pocet dnu:", 168)\n    print("Pocet dnu:", 10080)\n\n\n
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet dnu:", 168*n)\n    print("Pocet dnu:", 10080*n)\n\n\n
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 168*n)\n    print("Pocet minut:", 10080*n)\n\n\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", (n*7)*24)\n    print("Pocet minut:", ((n*7)*24)*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:",7*n)\n    print("Pocet hodin:",24*7*n)\n    print("Pocet minut:",24*7*60*n)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:",n*7)\n    print("Pocet hodin:",n*7*24)\n    print("Pocet minut:",n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*24*7)\n    print("Pocet minut:", n*60*24*7)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    den = n * 7\n    hodiny = den * 24\n    minuty = hodiny * 60\n    \n    \n    print("Pocet dnu:", den)\n    print("Pocet hodin:", hodiny)\n    print("Pocet minut:", minuty)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", 7*n)\n    print("Pocet hodin:", 7*n*24)\n    print("Pocet minut:", 7*n*24*60)\n\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def weeks(n):\n    den = n * 7\n    hodin = den*24\n    minut = hodin * 60\n    print("Pocet dnu:", den)\n    print("Pocet hodin:", hodin)\n    print("Pocet minut:", minut)\n
###
1111
def weeks(n):\n    print("Pocet dnu:", n*7)\n	print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)
def weeks(n):\n    print("Pocet dnu:", n*7)\n    print("Pocet hodin:", n*7*24)\n    print("Pocet minut:", n*7*24*60)\n
###
1111
def chocolate(rows, columns, x):\n    print("zbytek:", rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("zbytek:",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print()\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows * columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x )\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n    \n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("zbytek:",(rows * columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows * columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    m=rows*columns-x\n    print ("Zbytek: "+ str( m))\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek", rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows * columns -x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows * columns -x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:" rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", "28")\n
def chocolate(rows, columns, x):\n    print("zbytek:", rows*columns-12)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-12)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-16)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    zbytek = (rows * columns) - x\n    print("Zbytek:", zbytek)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n	print("Zbytek:", rows*columns-x)\n	
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: 28")\n
def chocolate(rows, columns, x):\n    print("Zbytek: 24")\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns-x))\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    vypocet = (rows * columns) - x\n    print("Zbytek: ", vypocet)\n
def chocolate(rows, columns, x):\n    vypocet = (rows * columns) - x\n    print("Zbytek:", vypocet)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:" rows*columns-x)\n    \n
def chocolate(rows, columns, x):\n    	print("Zbytek:", rows*columns-x)\n    \n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("rows*columns-x")\n
def chocolate(rows, columns, x):\n    print("rows*columns-x")\n
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ", (rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    celek = rows * columns\n    zbytek = celek - x\n    print("Zbytek:", zbytek)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    x=rows*columns-x\n    print("Zbytek:", x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ", (rows * columns) - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows * columns) - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print('Zbytek: ',(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print('Zbytek:',(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    zbytek = rows*columns-x\n    print("Zbytek:",zbytek )\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    celkom = rows * columns\n    zvysok = celkom - x\n    print("Zbytek:", zvysok)\n
###
1111
def chocolate(rows, columns, x):\n    print( rows * columns - x )\n
def chocolate(rows, columns, x):\n    	print ("Zbytek:", rows * columns - x)\n\n
###
1111
def chocolate(rows, columns, x):\n    a = rows*columns - x\n    print("Zbytek: ")\n    print(a)\n
def chocolate(rows, columns, x):\n    a = rows*columns - x\n    print("Zbytek: " + str(a))\n
###
1111
def chocolate(rows, columns, x):\n    rest = rows*columns - x\n    print("Zbytek:", rest)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    z=rows*columns-x\n    print("Zbytek:", z)\n
###
1111
def chocolate(rows, columns, x):\n    print('Zbytek:',rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    y = rows\n    c = columns\n    print("Zbytek:", (y*c) -x )\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    s=rows*columns\n    y=s-x\n    print("Zbytek:", y)\n
###
1111
def chocolate(rows, columns, x):\n    print('Zbytek:',rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n	print("Zbytek: ", rows*columns - x)\n
def chocolate(rows, columns, x):\n	print("Zbytek: ", rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: " +str((rows*columns)-x))\n
###
1111
def chocolate(rows, columns, x):\n    z= (rows*columns)-x\n    print("Zbytek:", z)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    z = rows*columns - x;\n    print("Zbytek:",z)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("zbytek:",(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("zbytek:",(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("zbytek:",(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("zbytek:",(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    rest=rows*columns-x\n    print(rest)\n
def chocolate(rows, columns, x):\n    rest=rows*columns-x\n    print(rest)\n
def chocolate(rows, columns, x):\n    rest=rows*columns-x\n    print("Zbytek:", rest)\n
###
1111
def chocolate(rows, columns, x):\n    zbytek = rows*columns-x\n    print("Zbytek: ", zbytek)\n
def chocolate(rows, columns, x):\n    zbytek = (rows * columns) - x\n    print("Zbytek: ", zbytek)\n
def chocolate(rows, columns, x):\n    zbytek = (rows * columns) - x\n    print("Zbytek:", zbytek)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytok:",(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    n=rows * columns\n    m=n-x\n    print("Zbytek: ", m)\n
def chocolate(rows, columns, x):\n    n=rows * columns\n    m=n-x\n    print("Zbytek:", m)\n
###
1111
def chocolate(rows, columns, x):\n    left=int(rows)*int(columns)-int(x)\n    print("Zbytek:",left)\n
###
1111
def chocolate(rows, columns, x):\n    value = (rows * columns) - x\n    print("Zbytek:", value)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:" ,rows*columns-x)\n
###
1111
def chocolate(n, m, x):\n    print("Zbytek:", n*m-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    choco_left = rows * columns - x\n    print("Zbytek:", choco_left)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns - )\n
def chocolate(rows, columns, x):\n    print(rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:"rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print('Zbytek: ', rows*columns-x)\n
def chocolate(rows, columns, x):\n    print('Zbytek: ', rows*columns-x)\n
def chocolate(rows, columns, x):\n    print('Zbytek:', rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows * columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ",(rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    n=rows*columns-x\n    print(n)\n
def chocolate(rows, columns, x):\n    n=rows*columns-x\n    print("Zbytek: ",n)\n
def chocolate(rows, columns, x):\n    n=rows*columns-x\n    print("Zbytek:",n)\n
###
1111
def chocolate(rows, columns, x):\n    print("zbytek:", rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", ((rows*columns)-x))\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",end=" ")\n    print(rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek",(rows*columns)-x)
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek",rows*columns-x)
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)
###
1111
def chocolate(rows, columns, x):\n    a = rows*columns-x\n    print(a)\n
def chocolate(rows, columns, x):\n    a = rows*columns-x\n    print("Zbytek: ",a)\n
def chocolate(rows, columns, x):\n    a = rows*columns-x\n    print("Zbytek:",a)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows * columns) - x)\n
###
1111
def chocolate(rows, columns, x):\n    ctverce=rows*columns-x\n    print(ctverce)\n        \n
def chocolate(rows, columns, x):\n    ctverce=rows*columns-x\n    print("Zbytek: ",ctverce)\n        \n
def chocolate(rows, columns, x):\n    ctverce=rows*columns-x\n    print("Zbytek:",ctverce)\n        \n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
y = 5\nz = 8\nx = 12\nk = (y * z)\ndef chocolate(rows, columns, x):\n    print("Zbytek:", (k - x))\n    \n
y = 6\nz = 9\nx = 3\nk = (y * z)\ndef chocolate(rows, columns, x):\n    print("Zbytek:", (k - x))\n    \n
y = 5\nz = 8\nx = 12\nk = (y * z)\ndef chocolate(rows, columns, x):\n    print ("Zbytek:", (k - x))\n    \n    \n
y = 6\nz = 9\nx = 3\nk = (y * z)\n\ndef chocolate(rows, columns, x):\n   		print ("Zbytek:", (k - x))\n    \n    \n
y = 5\nz = 8\nx = 12\nk = (y * z)\n\ndef chocolate(rows, columns, x):\n   		print ("Zbytek:", k - x)\n    \n    \n
y = 6\nz = 9\nx = 3\nk = (y * z)\nj = (k - x)\ndef chocolate(rows, columns, x):\n   	print ("Zbytek:", j)\n    \n    \n
y = 5\nz = 8\nx = 12\ndef chocolate(rows, columns, x):\n   	print ("Zbytek:", ((y * z) - x))\n    \n    \n
y = 5\nz = 8\nx = 12\ndef chocolate(rows, columns, x):\n    print("Zbytek:", y * z - x)\n
x = 12\ny = 6\nz = 9\ndef chocolate(rows, columns, x):\n    print("Zbytek:", (y * z) - x)\n
x = 12\ny = 5\nz = 8\n\ndef chocolate(rows, columns, x):\n    	print("Zbytek:", (y * z) - x)\n
x = 3\ny = 54\n\ndef chocolate(rows, columns, x):\n    	print("Zbytek:", 54 - x)\n
z = 5\ny = 8\n\ndef chocolate(rows, columns, x):\n    	print("Zbytek:", z * y - x)\n
z = 6\ny = 9\n\ndef chocolate(rows, columns, x):\n    print("Zbytek:", ((z * y) - x))\n
a = 5\nb = 8\ndef chocolate(rows, columns, x):\n    print("Zbytek:", a * b - x)\n
a = 6\nb = 9\ndef chocolate(rows, columns, x):\n    print("Zbytek:", ((a * b) - x))\n
a = 5\nb = 8\nx = 12\ndef chocolate(rows, columns, x):\n    print("Zbytek:", ((a * b) - x))\n
def chocolate(rows, columns, x):\n    print("Zbytek:", 40 - x)\n
def chocolate(y, z, x):\n    print("Zbytek:", y * z - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows * columns) - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek :", rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    y= "Zbytek:"\n    print(y,(rows*columns)-x)\n    
###
1111
def chocolate(rows, columns, x):\n    print((rows*colums)-x)\n
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: " + (rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: " (rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek: " + ((rows*columns)-x))\n
def chocolate(rows, columns, x):\n    zbytek = (rows*columns)-x\n    print("Zbytek: " + zbytek)\n
def chocolate(rows, columns, x):\n    zbytek = (rows*columns)-x\n    print("Zbytek: " , zbytek)\n
def chocolate(rows, columns, x):\n    zbytek = (rows*columns)-x\n    print("Zbytek: " ,zbytek)\n
def chocolate(rows, columns, x):\n    zbytek = (rows*columns)-x\n    print("Zbytek:" ,zbytek)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n          print ("Zbytek:",(rows * columns - x))\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    rem = rows * columns - x\n    print("Zbytek:", rem)\n
###
1111
def chocolate(rows, columns, x):\n    square=rows*columns-x\n    print("Zbytek: ",square)\n
def chocolate(rows, columns, x):\n    square=rows*columns-x\n    print("Zbytek:",square)\n
###
1111
def chocolate(rows, columns, x):\n    choco = rows*columns\n    final = choco - x\n    print("Zbytek:", final)\n
###
1111
def chocolate(rows, columns, x):\n    check = (rows*columns)-x\n    print("Zbytek:", check )\n
###
1111
def chocolate(rows, columns, x):\n    y= rows * columns - x\n    print("Zbytek:",y)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:" ,rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(r, c, x):\n    print("Zbytek:",r*c-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(radek, sloupec, x):\n    print("Zbytek:", radek*sloupec-x)\n    \n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",(rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("zbytek:", rows*columns-x)\n    \n    \n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n    \n    \n
###
1111
def chocolate(rows, columns, x):\n    print((rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("zbytek:"rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("zbytek:",rows*columns-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n    \n   \n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",5*8-12)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",5*8-16)\n
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    choco=rows*columns-x\n    print("Zbytek:",choco)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek", rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek: ", rows*columns - x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", rows*columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    print("Zbytek:",rows * columns - x)\n
###
1111
def chocolate(rows, columns, x):\n    full = rows * columns\n    result = full - x\n    return result
def chocolate(rows, columns, x):\n    full = rows * columns\n    result = full - x\n    print (result)
def chocolate(rows, columns, x):\n    full = rows * columns\n    result = full - x\n    print ("Zbytek:", result)
###
1111
def chocolate(rows, columns, x):\n    print("zbytek:", (rows*columns)-x)\n
def chocolate(rows, columns, x):\n    print("Zbytek:", (rows*columns)-x)\n
###
1111
def chocolate(rows, columns, x):\n    print(rows*columns-x)\n
def chocolate(rows, columns, x):\n    print('Zbytek:',rows*columns-x)\n
###
1111
def chocolate(rows, columns, x):\n    celek = rows * columns\n    zbytek = celek - x\n    print('Zbytek: ', zbytek)\n
def chocolate(rows, columns, x):\n    celek = rows * columns\n    zbytek = celek - x\n    print('Zbytek:', zbytek)\n
###
1111
def chocolate(rows, columns, x):\n    celek = rows * columns\n    zbytek = celek - x\n    print("Zbytek:", zbytek)\n
###
1111
def cross(z):\n    print(z + "   " + z)\n    print("  " + z + "  ")\n    print(z + "   " + z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z,' ',z)\n    print(' ',z,' ')\n    print(z,' ',z)\n    \n
###
1111
def cross(z):\n    print('{}   {}\n  {} \n{}   {}'.format(z,z,z,z,z))\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z,"","",z)\n    print("","",z,"")\n    print(z,"","",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z+" ","  ", z+" ")\n    print("  ",z+" ","  ")\n    print(z+" ","  ", z+" ")\n
def cross(z):\n    print(z," ", z)\n    print(" ",z," ")\n    print(z," ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):     \n    print(z,"   ",z)\n    print("  ",z,"   ")\n    print(z,"   ",z)
def cross(z):     \n    print(z,"  ",z)\n    print(" ",z,"   ")\n    print(z,"  ",z)
def cross(z):     \n    print(z,"   ",z)\n    print("  ",z," ")\n    print(z,"   ",z)
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n\n    print(" ",z ," ")\n    print(z," ",z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ", z)\n    print(" ",z," ")\n    print(z," ", z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z, "   ", z)\n    print("  ", z, "  ")\n    print(z, "   ", z)
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n    \n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(1 * " ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n	print(z, " ", z)\n	print(" ",z)\n	print(z, " ", z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z,"  ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z,"")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z + "   " + z + "\n" + "  " + z + "\n" + z + "   " + z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z ," ", z)\n    print(" ", z ," ")\n    print(z ," ", z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n    
###
1111
def cross(z):\n    print("A", " ", "A")\n    print(" ", "A", " ")\n    print("A", " ", "A")
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print("A   A")\n    print("  A ")\n    print("A   A")\n    
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)
###
1111
def cross(z):\n    print(z)\n
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z ," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, "   ", z)\n    print("  ", z)\n    print(z, "   ", z)\n
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z,' ',z)\n    print(' ',z,' ')\n    print(z,' ',z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z + "   " + z) \n    print("  " + z + " ")\n    print(z + "   " + z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ", z  ," ")\n    print(z," ",z)\n    \n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n	print(z," ",z)\n    
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)  \n    
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print ("A", "","", "", "A")\n    print ("","", "A","", "")\n    print ("A","", "", "", "A")\n
def cross(z):\n    print((z),(""),(z))\n    print((""),(z),(""))\n    print((z),(""),(z))\n
def cross(z):\n    print((z),(""),(""),(z))\n    print((""),(""),(z),(""),(""))\n    print((z),(""),(""),(z))\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    x=' '\n    print(z,x,z)\n    print(x,z,x)\n    print(z,x,z)
###
1111
def cross(z):\n    print(z,' ',z)\n    print(' ',z)\n    print(z,' ',z)\n
###
1111
def cross(z):\n    print(z, " ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    n=2\n    for i in range(1):	\n        print(z, end="   ")\n	print(z)\n    print("  A")\n    for j in range(1):	\n        print(z, end="   ")\n	print(z)\n\n
def cross(z):\n    n=2\n    for i in range(1):	\n        print(z, end="   ")\n	print(z)\n    print(" ",z)\n    for j in range(1):	\n        print(z, end="   ")\n	print(z)\n\n
###
1111
def cross(z):\n    for i in range(1):	\n        print(z, end="   ")\n	print(z)\n    print(" ",z)\n    for j in range(2):	\n        print(z, end="   ")
###
1111
def cross(z):\n    n=1\n    k=2\n    for i in range (n):\n		print(z , end=" ")\n        	for j in range (k):\n    		print (" ", z)\n    for i in range (k):\n            print(z , end="   ")
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z," ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ",z)\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z,' ',z)\n    print(' ',z)\n    print(z,' ',z)\n
###
1111
def cross(z):\n    print(z +"   "+z)\n    print ("  "+z)\n    print(z +"   "+z)\n    \n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ", z, " ")\n    print(z," ",z)
###
1111
def cross(z):\n    print(z + " " + z)\n    print(" " + z + " ")\n    print(z + " " + z)\n
def cross(z):\n    print(z + "   " + z)\n    print("  " + z + "  ")\n    print(z + "   " + z)\n
###
1111
def cross(z):\n    print(z)\n
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def line(z):\n	print(z, " ", z)\n\ndef cross(z):\n	line(z)\n	print(" ", z)\n	line(z)
###
1111
def cross(z):\n    x=" ";\n    print(z,x,x,x,z,"\n",\n         x,x,z,"\n",\n         z,x,x,x,z,\n         sep=""\n         )
###
1111
def cross(z):\n    print(z, " " ,z)\n    print(" ",z ," ")\n    print(z, " " ,z)\n    \n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)
###
1111
def cross(z):\n    print(z, end="   ")\n    print(z)\n    print("  ", end="")\n    print(z)\n    print(z, end="   ")\n    print(z)\n
###
1111
def cross(z):\n    print(z, end="   ")\n    print(z)\n    print(" ", z)\n    print(z, end="   ")\n    print(z)
###
1111
def cross(z):\n    print(z, end="   ")\n    print(z)\n    print("  A") \n    print(z, end="   ")\n    print(z)\n
def cross(z):\n    print(z,end="   ")\n    print(z,end="   ")\n    print()\n    print(end="  ")\n    print(z) \n    print(z, end="   ")\n    print(z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print (z+3*' '+z,"\n  "+z,"\n"+z+3*' '+z)\n\n
###
1111
def cross(z):\n    print("A   A\n  A\nA   A")\n
def cross(z):\n    print(z," ",z)\n    print(" ", z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    for i in range(2):\n        print(" A ", end=" ")\n    \n    print("\n   A")\n    \n    for i in range(2):\n        print(" A ",end=" ")\n\n\n\n\n\n            \n
def cross(y):\n    for i in range(2):\n        print(" + ", end=" ")\n    \n    print("\n   +")\n    \n    for i in range(2):\n        print(" + ",end=" ")\n\n\n\n\n\n            \n
def cross(B):\n    for i in range(2):\n        print(" B ", end=" ")\n    \n    print("\n   B")\n    \n    for i in range(2):\n        print(" B ",end=" ")\n\n\n\n\n\n            \n
def cross(symbol):\n    for i in range(2):\n        print(" "+ symbol+" ", end=" ")\n    \n    print("\n   " + symbol)\n    \n    for i in range(2):\n        print(" "+ symbol+ " ",end=" ")\n\n\n\n\n\n            \n
###
1111
def cross(z):\n    print(z , " " , z)\n    print(" " , z , " ")\n    print(z , " " , z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z+" "*3+z)\n    print(" "*2+z+" "*2)\n    print(z+" "*3+z)\n    \n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n    \n
###
1111
def cross(z):\n    print(z + "   " + z)\n    print("  " + z + "  ")\n    print(z + "   " + z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print (" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n\n
###
1111
def cross(z):\n    print(z," ",z)\n	print(" ",z," ")\n    print(z," ",z)
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print("A  A")\n    print("  A  ")\n    print("A   A")\n
def cross(z):\n    print(z,"  ",z)\n    print("  ",z,"  ")\n    print(z,"  ",z)\n
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z + "   " + z)\n    print("  " + z + "  ")\n    print(z + "   " + z)\n
###
1111
def cross(z):\n         print(z," ",z,) \n         print(" ",z," ")\n         print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z ," ", z)\n    print(" ",z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n\n
###
1111
def cross(z):\n    print(z+"   "+z+"\n"+"  "+z+"  "+"\n"+z+"   "+z)\n
###
1111
def cross(z):\n    print(z+"   "+z)\n    print("  "+z)\n    print(z+"   "+z)\n
###
1111
def cross(z):\n    print(z,z)\n    print(z)\n    print(z,z)
def cross(z):\n    print(z," " ,z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z, " " , z)\n    print(" ", z, " ")\n    print(z, " " , z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
z = "A"\ny = " "\ndef cross(z):\n    print(z, y, z)\n    print(y, z)\n    print(z, y, z)\n    		\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n\n   \n
###
1111
def cross(z):\n    print(z + " " + z)\n    print(" " + z + " ")\n    print(z + " " + z)\n
def cross(z):\n    print(z + "   " + z)\n    print("  " + z + "  ")\n    print(z + "   " + z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z)\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z + "   " + z)\n    print("  " + z)\n    print(z + "   " + z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, z)\n    print(z)\n    print(z, z)\n
def cross(z):\n    print(z, , ,z)\n    print(z)\n    print(z, z)\n
def cross(z):\n    print(z  z)\n    print(z)\n    print(z, z)\n
def cross(z):\n    print("z  z")\n    print(" z ")\n    print("z  z")\n
def cross(n):\n    print("n",  ,"n")\n    print( "n" )\n    print(""n"  "n"")\n
def cross(z):\n    print(z," ",z)\n    print(" ",z,"")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n    \n
###
1111
def cross(z):\n    for i in range(3):\n        if i%2 != 1:\n        	print(z,z,sep="   ")\n        	#print()\n        else:\n            print(" ",z,end="  ")\n            print()\n   		\n
###
1111
def cross(z):\n    for i in range 3:\n    	for i in range 1,10:\n        	if i%2 == 0:\n            	print (" ", end = "")\n      	    else: \n    			print(z, end = "")\n		    i -= 1\n        print("")
def cross(z):\n    for i in range (1,10):\n        if i%2 == 0:\n            print("  ", end = "")\n        elif i%2==1:\n            print(z, end = " ")\n        if i%3 == 0:\n            print("")\n        i -= 1
###
1111
def cross(z):\n    print(z,' ', z)\n    print(' ', z)\n    print(z,' ', z)
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z,)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n    \n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n    \n    \n\n    \n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n    \n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n    \n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ",z)\n    print(" ",z," ")\n    print(z, " ",z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z)   \n    print(" ",z)\n    print(z," ",z) \n    \n
###
1111
def cross(z):\n    print(z,"",z)\n    print("",z)\n
def cross(z):\n    print(z,""",z)\n    print("",z)\n
def cross(z):\n    print(z,"+",z)\n    print("",z)\n
def cross(z):\n    print(z," ",z)\n    print("",z)\n
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n    
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)
###
1111
def cross(z):\n    print(z," ",z)\n    print(' ',z,' ')\n    print(z," ",z)\n
###
1111
def cross(z):\n\n    print(z," ",z)\n	print(' ',z,' ')\n    print(z," ",z)
def cross(z):\n    print(z," ",z)\n	print(" ",z," ")\n    print(z," ",z)
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n	\n    print(z," ",z)
###
1111
def cross(z):\n    print(z+"   "+z)\n    print("  "+z)\n    print(z+"   "+z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z)\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ",z,"\n","",z,"","\n",z," ",z)\n
###
1111
def cross(z):\n    for i in range(3):\n        for j in range(3):\n            if i==j or i+j==2 :\n                print(z, end=' ')\n            else:\n                print(' ', end=' ')\n        print()\n\n
###
1111
def cross(z):\n    print(z,' ',z)\n    print(' ',z,' ')\n    print(z,' ',z)\n    \n
###
1111
def cross(z):\n    print(z," ", z)\n    print(" ", z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z, " ", z)\n    print(" ", z, " ")\n    print(z, " ", z)\n
###
1111
def cross(z):\n    print(z," ",z)\n    print(" ",z," ")\n    print(z," ",z)\n
###
1111
def cross(z):\n    print(z," ", z)\n    print(" ", z, " ")\n    print(z," ", z)
###
1111
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    return False\n
def near_fifty(n):\n    if (n = 58):\n    return False\n
def near_fifty(n):\n    if n>=40 and n<=60:\n    	return True\n    elif n>=140 and n<=160:\n        return True\n    else: return False\n
###
1111
def near_fifty(n):\n    if n>=40 and n<=60:\n        return True\n    elif n>=140 and n<=160:\n        return True\n    else: return False\n
###
1111
def near_fifty(n):\n    if n <= 60 and n >= 40 or n >= 140 and n <= 160:\n        return True\n    return False\n
###
1111
def near_fifty(n):\n    return ((n < 50) or (n > 150))\n
def near_fifty(n):\n    return ((n > 50) or (n > 150))\n
def near_fifty(n):\n    return ((n < 50) or (n < 150))\n
def near_fifty(n):\n    return ((n > 50) and (n < 150))\n
def near_fifty(n):\n    return ((n < 50) and (n < 150))\n
def near_fifty(n):\n    return ((n > 50) and (n < 150))\n
def near_fifty(n):\n    return ((n <= 50) and (n < 150))\n
def near_fifty(n):\n    return ((n >= 50) and (n < 150))\n
def near_fifty(n):\n    return ((n <= 50) and (n <= 150))\n
def near_fifty(n):\n    return ((n <= 50) or (n <= 150))\n
def near_fifty(n):\n    return ((n <= 50) or (n <= 150))\n
def near_fifty(n):\n    return ((n >= 50) or (n <= 150))\n
def near_fifty(n):\n    return ((n >= 40) and (n <60 ) or (n >= 140) and (n < 160))\n
###
1111
def near_fifty(n):\n    if 40<=n<=60 or 140<=n<=160:\n        return True\n    return False\n
###
1111
def near_fifty(n):\n    if 40<=n<=60 or 140<=n<=160:\n        return True\n    return False\n
###
1111
def near_fifty(n):\n    return ((n>=40 and n<=60) or (n>=140 and n<=160))\n
###
1111
def near_fifty(n):\n    return 140 <= n <= 160 or 40 <= n <= 60\n
###
1111
def near_fifty(n):\n    if 39<n<61 or 139<n<161:\n        return True\n    return False
###
1111
print(True)\nprint(False)\nprint(False)\nprint(True)
print(True)\nprint(False)\nprint(False)\nprint(True)
def near_fifty(n):\n    if n in range(40,61) or n in range(140,161):\n    	return True\n    else:\n        return False
###
1111
def near_fifty(n):\n    if (n - 50 >= -10 and n - 50 <=10) or (n - 150 >= -10 and n - 150 <=10):\n        return True\n    return False\n
###
1111
def near_fifty(n):\n    if n >= (40) and n <= (60):\n        return True\n    elif n >= (140) and n <= (160):\n        return True\n    else:\n        return False
###
1111
def near_fifty(n):\n    if 40< n <60 or 140< n <160: return True\n	else: return False\n
def near_fifty(n):\n    if (40< n <60) or (140< n <160): return True\n	else: return False\n
def near_fifty(n):\n    if (40< int(n) <60) or (140< int(n) <160): return True\n	else: return False\n
def near_fifty(n):\n    if (40< int(n) <60) or (140< int(n) <160): p = True\n	else: p=False\n    return p\n
def near_fifty(n):\n	if (40< n <60) or 140< n <160): p = True\n	else: p=False\n	return p\n
def near_fifty(n):\n	if (40< n <60): p = True\n	else: p=False\n	return p\n
def near_fifty(n):\n	if (40< n <60): p = True\n	else: p=False\n	return p\n
def near_fifty(n):\n	if (40<= n <=60): p = True\n	else: p=False\n	return p\n
def near_fifty(n):\n	if (40<= n <=60)or (140<= n <=160): p = True\n	else: p=False\n	return p\n
###
1111
def near_fifty(n):\n    if abs(n - 50)<=10 or abs(n-150)<=10:\n    	return True\n    else:\n    	return False\n
###
1111
def near_fifty(n):\n    if ((n + 2) or (n - 10):\n        return False\n    return False\n
def near_fifty(n):\n    if (n + 2 == 60): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if (n + 2 == n): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n + 8 == 50) or (n - 8 == 50)): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n + 10 == 50) or (n - 10 == 50) or (n + 10 == 50) or (n - 10 == 50)): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n + 10 == 50) or (n - 10 == 50) or (n + 2 == 50) or (n - 2 == 50)): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n < 68) or (n > 48)): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n + 2 == 50) or (n - 2 == 50) or (n + 10 == 150) or (n - 10 == 150) ): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n >= 50) and (n <= 50) or (n >= 150) and (n <= 150)): \n        return True\n    else:\n        return False\n    return False\n
def near_fifty(n):\n    if ((n >= 40) and (n <= 60) or (n >= 140) and (n <= 160)): \n        return True\n    else:\n        return False\n    return False\n
###
1111
def near_fifty(n):\n    if (n>=40 and n<=60) or (n>=140 and n<=160): return True\n    else: return False\n
###
1111
def near_fifty(n):\n    if abs(n-50)<11 or abs(n-150)<11:\n        return True\n    return False\n
###
1111
def near_fifty(n):\n    if (n<=60 and n >=40) or (n<=160 and n>=140): return True\n    return False\n
###
1111
def near_fifty(n):\n    if n>39 and n<61:\n        return True\n    if n>139 and n<161:\n        return True    \n    else: return False
###
1111
def near_fifty(n):\n    if(40<=n<=60)or(140<=n<=160):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if n<61 and n>39 or n<161 and n>139:\n        return True\n    else:\n        return False
###
1111
def near_fifty(n):\n    if n<=60 and n>=40 or n<=160 and n>=140:\n    	return True\n    else:\n        return False
###
1111
def near_fifty(n):\n    if (n-50>-11 and n-50<11) or (n-150>-11 and n-150<11):\n        return True\n    return False\n
###
1111
def near_fifty(n):\n    if (n%50>39) or (n%50<11):\n        return True\n    else:\n        return False\n
def near_fifty(n):\n    if (n%50>39) or (n%50<11) and (n%50>0):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if 40 <= n <= 50 or 140 <= n <= 160:\n        return True\n    else: \n        return False\n
def near_fifty(n):\n    if 40 <= n <= 60 or 140 <= n <= 160:\n        return True\n    else: \n        return False\n
###
1111
def near_fifty(n):\n	if (39<n) and (n<61):\n		return True\n	if (139<n) and (n<161):\n		return True\n	else:\n		return False
###
1111
def near_fifty(n):\n    if 39 < n < 61 :\n        return True\n    if 139 < n < 161:\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    return (abs(n - 50) <= 10) or (abs(n - 150) <= 10)\n
###
1111
def near_fifty(n):\n    if (n>=40 and n<=60) or (n>=140 and n<=160):\n        return True\n    else:\n    	return False\n
###
1111
def near_fifty(n):\n    if n<50 and n-50>=-10:\n        return True\n    elif n>50 and n<150 and (n-50<=10 or n-150>=-10):\n        return True\n    elif n>150 and n-150<=10:\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    d = 10\n    return (n>=50-d and n<=50+d)or(n>=150-d and n<=150+d)\n
###
1111
def near_fifty(n):\n    if ((abs(n - 150) < 11) or (abs(n - 50) < 11)):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if n>=40 and n<=60 or n>=140 and n<=160:\n    	return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if 40<=n<=60 or 140<=n<=160:\n        return True\n    else:\n    	return False\n
###
1111
def near_fifty(n):\n    for x in 50, 150:\n        if n >= x - 10 and n <= x + 10:\n            return True\n    return False\n
###
1111
def near_fifty(n):\n    if n > 39 and n <61 :\n    	return True\n    elif n > 139 and n < 161 :\n        return True\n    else :\n    	return False\n
###
1111
def near_fifty(n):\n    if 39<n<61:\n        return True\n    elif 139<n<161:\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    return ((abs(n-50)<=10) or (abs(n-150)<=10))\n
###
1111
def near_fifty(n):\n    if(abs(n-50)<=10)or(abs(n-150)<=10):\n        return True\n    else:\n        return False
###
1111
def near_fifty(n):\n    if (40<= n <=60) or (140 <= n <= 160):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if 40<=n<=60 or 140<=n<=160:\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if(40 <= n <= 60 or 140 <= n <= 160):\n    	return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if 40<=n<=60 or 140<=n<=160:\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if 60>=n>=40:\n        return True\n    elif 160>=n>=140:\n        return True\n    else:\n        return False\n        \n
###
1111
def near_fifty(n):\n    if(50-n<=10 or 150-n<=10):\n        return True\n   	else:\n    	return False\n
def near_fifty(n):\n    if(50-n<=10 or 150-n<=10):\n        return True\n	else:\n    	return False\n
def near_fifty(n):\n    if(50-n<=10 or 150-n<=10):\n        return True\n    else:\n        return False\n
def near_fifty(n):\n    if(abs(50-n)<=10 or abs(150-n)<=10):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    return abs(n-50) <= 10 or abs(n-150) <= 10\n
###
1111
def near_fifty(n):\n    if 40<=n<=60 or 140<=n<=160:\n    	return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if (n>=40 and n<=60) or(n>=140 and n<=160) :\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    return (40<=n<=60) or (140<=n<=160)\n
###
1111
def near_fifty(n):\n    if n <= 60 and n >= 40:\n   		return True\n    elif n <= 160 and n >= 140:\n        return True\n    else:\n        return False
###
1111
def near_fifty(n):\n    x = abs(50 - n)\n    y = abs(150 - n)\n    if y <= 10:\n        return True\n    \n    if x <= 10:\n        return True\n    else:\n        return False    \n    return y or x\n    \n
###
1111
def near_fifty(n):\n    if (n<61 and n>39) or (n<161 and n>139):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    return abs(50 - n) < 11 or abs(150 - n) < 11\n
###
1111
def near_fifty(n):\n    if 61>n>39:\n    	return True\n    elif 161>n>139:\n    	return True\n    else: return False\n
###
1111
def near_fifty(n):\n    if (n < 50 and (50 - n <= 10)) or (n > 50 and ( n - 50 <= 10))or (n < 150 and (150 - n <= 10)) or (n > 150 and ( n - 150 <= 10)):\n    	return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if n>=40 and n<=60 or n>=140 and n<=160:\n        return True\n    else:\n        return False\n    \n
###
1111
def near_fifty(n):\n    if n in range(39,61) or n in range(139,161):\n        return True\n    else:\n        return False\n
###
1111
def near_fifty(n):\n    if (40 <= n <= 60) or (140 <= n <= 160):\n        return True\n    return False\n
###
1111
def happy(a, b, c):\n    if a<3 and b<3 and c<3:\n    	return True\n    else: return False\n
def happy(a, b, c):\n    if a<3 and b<3 and c<3:\n    	return True\n    else: return False\n
def happy(a, b, c):\n    if a<3 and b<3 and c<3:\n    	return True\n    else: return False\n
def happy(a, b, c):\n    if a<3 and b<3 and c<3:\n    	return True\n    else: return False\n
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else: return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else: return False\n
###
1111
def happy(a, b, c):\n    if(a < 3 or b < 3 or c < 3):\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    return False\n
###
1111
def happy(a, b, c):\n    return (a < 3 or b < 3 or c < 3)\n
###
1111
def happy(a, b, c):\n    return (a<3)or(b<3)or(c<3)\n
###
1111
def happy(a, b, c):\n    if a < 3 or b<3 or c<3:\n        return True\n    return False\n
###
1111
def happy(a, b, c):\n    if a<3:\n        return True\n    elif b<3:\n        return True\n    elif c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return (a<3 or b<3 or c<3)\n    
###
1111
def happy(a, b, c):\n    \n    return (a<3 or b < 3 or c<3)\n
###
1111
def happy(a, b, c):\n    for i in a, b, c:\n        if i < 3: return True\n    return False\n
###
1111
def happy(a, b, c):\n    if a = 3:\n    	return True\n	else:\n        return False\n
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return a < 3 or b < 3 or c < 3\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    return False
###
1111
def happy(a, b, c):\n    truth = 0\n    if (a < 3):\n        truth = 1\n    if (b < 3):\n        truth = 1\n    if (c < 3):\n        truth = 1\n    if (truth == 1):\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    truth = 0\n    if (a < 3):\n        truth = 1\n	if (b < 3):\n        truth = 1\n    if (c < 3):\n        truth = 1\n    if (truth == 1):\n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    truth = 0\n    if (a < 3):\n        truth = 1\n    if (b < 3):\n        truth = 1\n    if (c < 3):\n        truth = 1\n    if (truth == 1):\n        return True\n    else:\n        return False
###
1111
def happy(a, b, c):\n	if a<3 or b<3 or c<3:\n		return True\n	else:\n		return False
###
1111
def happy(a, b, c):\n    if (a<3) or (b<3) or (c<3):\n        return True\n    return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False
###
1111
def happy(a, b, c):\n    if a <= 2:\n        return True\n    elif b <=2:\n        return True\n    elif c <=2:\n        return True\n    else:\n        return False
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c <3:\n        return True\n    else:\n        return False\n\n
###
1111
def happy(a, b, c):\n    if (a<3)or(b<3)or(b<3): \n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    if (a<3)or(b<3)or(c<3): \n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a or b or c > 2:\n    	return False\n    else:\n        return True\n
def happy(a, b, c):\n    if ((a >= 1,2) and (b >= 1,2) and (b >= 1,2)):\n    	return True
def happy(a, b, c):\n    if ((a > 2) and (b > 2) and (c > 2)):\n        return False\n    else:\n        return True\n    return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3: return True\n    else: return False\n
###
1111
def happy(a, b, c):\n    for i in (a, b, c):\n        if i > 3:\n            return True\n        else:\n            return False\n
def happy(a, b, c):\n    hap =[]\n    for i in (a, b, c):\n        if i < 3:\n            hap.append(i)\n    if hap != []:\n        return True\n    else:        \n    	return False\n
###
1111
def happy(a, b, c):\n    if a < 3:\n        return True\n    if b < 3:\n        return True\n    if c < 3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a < 3:\n        return True\n    if b < 3:\n        return True\n    if c < 3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    else:\n  	return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n   		 return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if (a<3) or (b<3) or (c<3):\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if (a > 2) and (b > 2) and (c > 2):\n        return False\n    else:\n        return True\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3: return True\n    return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else: return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:return False\n
###
1111
def happy(a, b, c)\n    if a <= 3 or b <= 3 or c <=3:\n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    if a <= 3 or b <= 3 or c <=3:\n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    if a <= 2 or b <= 2 or c <=2:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3 :\n    	return True\n    else :\n    	return False\n
###
1111
def happy(a, b, c):\n    if a < 3:\n        return True\n    elif b < 3:\n        return True\n    elif c < 3:\n        return True\n    else:\n        return False \n   \n
###
1111
def happy(a, b, c):\n    if(a<3 or b<3 or c<3):\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return a < 3 or b < 3 or c < 3\n
###
1111
def happy(a, b, c):\n    return True if any(x < 3 for x in (a, b, c)) else False
###
1111
def happy(a, b, c):\n    if a<=3 or b<=3 or c<=3:\n    	return True\n    else:\n        return False\n
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n	if a < 3 or b < 3 or c < 3:\n    	return True\n	else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n	if (a<3) or (b<3) or (c<3):\n		return True\n	else:\n		return False\n\n
###
1111
def happy(a, b, c):\n    if((a<3 or b<3 or c<3)):\n        return True\n    else: return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n
def happy(a, b, c):\n    if a<=3 or b<=3 or c<=3:\n    	return True\n    else:\n        return False
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:\n        return False
###
1111
def happy(a, b, c):\n    if (a or b or c)<3:\n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    if (a or b or c)<3:\n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    happiness = (a<3) or (b<3) or (c<3)\n    return happiness\n
###
1111
def happy(a, b, c):\n    return a < 3 or b < 3 or c < 3\n
###
1111
def happy(a, b, c):\n    return a<3 or b<3 or c<3\n
###
1111
def happy(a, b, c):\n    if ((a < 3) or (b < 3) or (c < 3)):\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    for i in a, b, c:\n        if i < 3:\n            return True\n    return False;\n
###
1111
def happy(a, b, c):\n    if ((a<3) or (b<3) or (c<3)) and (0<a<6) and (0<b<6) and (0<c<6):\n    	return True\n    else:\n        return False\n\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if (a<3)or(b<3)or(c<3):\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return ((a<3) or (b<3) or (c<3))\n
###
1111
def happy(a, b, c):\n    if(a<=3 or b<=3 or c<=3):\n    	return True\n    else:\n        return False\n
def happy(a, b, c):\n    if(a<3 or b<3 or c<3):\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return(a<3 or b<3 or c<3)\n
###
1111
def happy(a, b, c):\n    if (a<3 or b<3 or c<3):\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n    	return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return a<3 or b<3 or c<3\n
###
1111
def happy(a, b, c):\n    if a < 3 or b <3 or c <3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c <3:\n    	return True \n    else:\n        return False
###
1111
def happy(a, b, c):\n    if (a < 3) or (b < 3) or (c < 3):\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if(a < 3 or b < 3 or c < 3):\n    	return True\n    else:\n        return False
###
1111
def happy(a, b, c):\n    if(a or b or c <= 3):\n    	return True \n    else: \n    	return False \n
def happy(a, b, c):\n    if(a or b or c <= 3):\n    	return False\n    else: \n    	return True \n
def happy(a, b, c):\n    if(a or b or c < 3):\n    	return True\n    else: \n    	return False\n
def happy(a, b, c):\n    if(a or b or c >3):\n    	return False\n    else: \n    	return True\n
def happy(a, b, c):\n    if(a or b or c <3):\n    	return True\n    else: \n    	return False\n
def happy(a, b, c):\n    if(a , b , c <3):\n    	return True\n    else: \n    	return False\n
def happy(a, b, c):\n    if(a < 3 or b < 3 or c <3):\n    	return True\n    else: \n    	return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n   if a+b+c <= 11:\n    	return True\n   else:\n        return False\n
def happy(a, b, c):\n   if a > 3 or b > 3 or c > 3 :\n    return True\n   else :\n    return False
def happy(a, b, c):\n   if a < 3 or b < 3 or c < 3 :\n    return True\n   else :\n    return False
###
1111
def happy(a, b, c):\n    if (a<3 or b<3 or c<3):\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n   if a<3 or b <3 or c< 3 :\n       return True\n   else:\n       return False\n
###
1111
def happy(a, b, c):\n    return (a < 3 or b < 3 or c < 3)\n
###
1111
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a < 3:\n        return True\n    if b < 3:\n        return True\n    if c < 3:\n		return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n	if ((a<3) or (b<3) or (c<3)):\n		return True\n	else: return False\n
###
1111
def happy(a, b, c):\n    if a+b+c<=10:\n        return True\n    else:\n        return False\n
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return ((a < 3) or (b < 3) or (c < 3))\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n        return False\n
###
1111
def happy(a, b, c):\n    return a < 3 or b < 3 or c < 3\n
###
1111
def happy(a, b, c):\n    x = a + b + c\n    x = x / 3\n    if(x <= 3) :\n    	return True;\n    else :\n    	return False\n\n
def happy(a, b, c):\n    x = a + b + c\n    x = x / 3\n    if(x < 3) :\n    	return True;\n    else :\n    	return False\n\n
def happy(a, b, c):\n    x = a + b + c\n    x = x / 3\n    if(x < 4) :\n    	return True;\n    else :\n    	return False\n\n
def happy(a, b, c):\n    if(a <= 3) :\n        return True\n    if(b <= 3) :\n        return True\n    if(c <= 3) :\n        return True\n
def happy(a, b, c):\n    if(a < 3) :\n        return True\n    if(b < 3) :\n        return True\n    if(c < 3) :\n        return True\n    else :\n        return False\n
###
1111
def happy(a, b, c):\n    arr = [a, b ,c]\n    if 1 in arr or 2 in arr :\n    	return True\n    else :\n        return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a or b or c < 3:\n        return True\n    else:\n    	return False\n
def happy(a, b, c):\n    if a < 3:\n        return True\n    elif b < 3:\n        return True\n    elif c < 3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if a<3 or b<3 or c<3:\n        return True\n    else:\n    	return False\n
###
1111
def happy(a, b, c):\n    if (a or b or c) < 3:\n        return True\n    return False\n
def happy(a, b, c):\n    if a < 3 or b < 3 or c < 3:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer is True:\n        return True\n    else: return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer is True:\n        return True\n    else: return False\n    \n
###
1111
def impose_fine(age, beer):\n    if(age < 18 and beer == True):\n        return True\n    else: \n        return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    return (age < 18 and beer == True)\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    return (age>18 \n
def impose_fine(age, beer):\n    return (age>21) \n
def impose_fine(age, beer):\n    return (age<21) \n
def impose_fine(age, beer):\n    return (age<21 and beer)\n
###
1111
def impose_fine(age, beer):\n    return (age < 18 and beer== True)\n
###
1111
def impose_fine(age, beer):\n    return age < 18 and beer\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if (age<18) and (beer == True):\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n        return False
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True :\n        return True\n    elif age < 18 and beer == False:\n        return False\n    else:\n        return False
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if (age<18)and(beer):\n    	return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if ((age < 18) and (beer == True)):\n        return True\n    else:\n        return False\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age <18 and beer==True: return True\n    else: return False\n
###
1111
def impose_fine(age, beer):\n    if age >= 18 and beer == True:\n            return False\n    elif age < 18 and beer == False:\n        return False\n    else:\n        return True
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer=True:\n        return True\n    else:\n        return False\n
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n    	return True\n	elif age >= 18 and beer=True:\n    	return False\n
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n    	return True\n	elif age >= 18 and beer=True:\n    	return False\n
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n    	return True\n	elif age >= 18 and beer=True:\n    	return False\n
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n    	return True\n	elif age >= 18 and beer=True:\n    	return False\n
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n    	return True\n    if age >= 18 and beer==True:\n    	return False
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n    	return True\n    else:\n    	return False
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if (age < 18) and beer:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer==True: return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n    	return True\n    else: return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer== True :\n        return True\n    else :\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if beer and age < 18:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    return True if age < 18 and beer == True else False
###
1111
def impose_fine(age, beer):\n    if age<18  and beer==True:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if beer==True and age<18:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n	if age < 19 and beer is True:\n    	return True\n	else:\n    	return False
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n	if (age<18) and (beer == True):\n		return True\n	else:\n		return False\n
###
1111
def impose_fine(age, beer):\n    if age > 17:\n        return False\n    else:\n        if beer == True:\n            return True\n        else:\n            return False\n
###
1111
def impose_fine(age, beer):\n    if(age<18 and beer==True):\n    	return True\n    else: return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer=True:\n        return True\n    else:\n        return False\n
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    decision = (age < 18) and (beer == True)\n    return decision\n
###
1111
def impose_fine(age, beer):\n    return age < 18 and beer\n
###
1111
def impose_fine(age, beer):\n    return age<18 and beer\n
###
1111
def impose_fine(age, beer):\n    if ((age < 18) and (beer == 1)):\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n        return False
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n        return True\n    return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if beer == True:\n        if age >= 18:\n    		return False\n        else:\n        	return True\n    else: \n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if (beer==True) and (age<18): \n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    return (beer and age<18)\n
###
1111
def impose_fine(age, beer):\n    if(age<18 and beer==True):\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if (age<18 and beer==True):\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer == True:\n        return True\n    else:\n   		return False\n
###
1111
def impose_fine(age, beer):\n    return age<18 and beer==True\n
###
1111
def impose_fine(age, beer):\n    if (age <= 18 and beer == True): \n    	return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if(age < 18 and beer == True):\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if (age < 18) and (beer == True):\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer == True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if beer==True:\n        if age>17:\n            return True\n        else:\n            return False\n    else:\n        return False\n
def impose_fine(age, beer):\n    if beer==True:\n        if age>17:\n            return False\n        else:\n            return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n   if age < 18:\n      if beer == True:\n          return True\n      else:\n          return False\n   else:\n    return False\n
###
1111
def impose_fine(age, beer):\n    if(age<18 and beer=True):\n        return True\n    else:\n    	return False\n
def impose_fine(age, beer):\n    if(age<18 and beer==True):\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n   if age < 18 and beer == True:\n        return True\n   else: \n        return False\n
###
1111
def impose_fine(age, beer):\n    return (age <= 17 and beer)\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        print("True")\n    else:\n        print("False")\n    return print(end="")
###
1111
def impose_fine(age, beer):\n    return age < 18 and beer\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if (age<18):\n        if (beer==True):\n            return("True")\n        else:\n            return("False")\n    else:\n        return("False")
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    return ((age<18) and (beer))\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == False:\n    	return False\n    elif age > 18:\n        return False\n    else:\n        return True\n
###
1111
def impose_fine(age, beer):\n    if age<18:\n        while beer == True:\n    		return True\n        while beer == False:\n            return False\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer == True:\n        return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    return age < 18 and beer\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer is True:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if age >= 18:\n    	return False\n    if age < 18 and beer == False:\n        return False\n    else:\n        return True
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n    	return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if(age < 19) and (beer) :\n        return True\n    else :\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if(age < 19) and (beer) :\n        return  True\n    else :\n   		 return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer==True:\n   		return True\n    else:\n        return False\n
###
1111
def impose_fine(age, beer):\n    if (age < 18) and (beer== True):\n    	return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age >= 21 and beer = True:\n        return False\n    else:\n    	return True\n
def impose_fine(age, beer):\n    if beer == False:\n        return False\n    else:\n        if age <18:\n            return True\n        else:\n            return False\n
###
1111
def impose_fine(age, beer):\n    if age<18 and beer==True:\n        return True\n    else:\n    	return False\n
###
1111
def impose_fine(age, beer):\n    if age < 18 and beer == True:\n    	return True\n    return False\n
###
1111
def nice(a, b):\n    if a%2 is True and b%2 is False:\n        return True\n    if a%2 is False and b%2 is True:\n        return True\n    else: return False\n
###
1111
def nice(a, b):\n    if((a+b) % 2 != 0):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if a % 2 == 0 and b % 2 == 1 or a % 2 == 1 and b % 2 == 0:\n        return True\n    \n        \n    return False\n
###
1111
def nice(a, b):\n    if a%2 == 0 and b%2 == 1 or a%2 == 1 and b%2 == 0:\n        return True\n    return False\n
###
1111
def nice(a, b):\n    return ((a%2==0) and  (b%2!=0)) or ((b%2==0) and  (a%2!=0))\n
###
1111
def nice(a, b):\n    if ((a % 2 == 0 and b % 2 == 1) or (a % 2 == 1 and b % 2 == 0)):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    return a % 2 is 1 and b % 2 is 0 or a % 2 is 0 and b % 2 is 1\n
###
1111
def nice(a, b):\n    if a%2==1 and b%2==0 or a%2==0 and b%2==1:\n        return True\n    else:\n        return False
###
1111
def nice(a, b):\n    if a%2==0 and b%2==1 or a%2==1 and b%2==0:\n        return True\n    else:\n        return False
###
1111
def nice(a, b):\n    if (not(a/2) and (b/2))or(not(b/2) and (a/2)):\n    	return True\n    else:\n        return False\n
def nice(a, b):\n    if (not(a/2) and bool(b/2))or(not(b/2) and (a/2)):\n    	return True\n    else:\n        return False\n
def nice(a, b):\n    if (not(a%2) and (b%2))or(not(b%2) and (a%2)):\n    	return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if ((a % 2 == 0) and (b % 2 == 1) or (a % 2 == 1) and (b % 2 == 0)):\n        return True\n    else:\n        return False\n    return False\n
###
1111
def nice(a, b):\n    if a%2==0 and b%2==1: return True\n    elif b%2==0 and a%2==1: return True\n    else: return False\n
###
1111
def nice(a, b):\n    if a%2==0 and b%2==1:\n        return True\n    if a%2==1 and b%2==0:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if (a+b)%2 == 1:\n        return True\n    return False\n
###
1111
def nice(a, b):\n    if a % 2 == 0 and not b % 2 == 0:\n    	return True\n    elif b % 2 == 0 and not a % 2 == 0:\n    	return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if(((a % 2 == 0)and(b % 2 == 1))or((a % 2 == 1)and(b % 2 == 0))):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if (a%2==0 and b%2==1) or (b%2==0 and a%2==1): return True\n    return False\n
###
1111
def nice(a, b):\n    if a%2==0 and b%2==1:\n        return True\n    if a%2==1 and b%2==0:\n        return True\n    else:return False\n
###
1111
def nice(a, b):\n    if a%2==0 :\n        if b%2==0:\n            return False\n        else :\n            return True\n    else:\n        if b%2==0:\n            return True\n        else :\n            return False\n
###
1111
def nice(a, b):\n    if(a%2==0 and b%2!=0)or(b%2==0 and a%2!=0):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if a % 2 == 0 and b % 2 != 0:\n        return True\n    elif b % 2 == 0 and a % 2 != 0:\n        return True\n    else:\n        return False
###
1111
def nice(a, b):\n    if a%2 and b%2:\n    	return False\n    elif not a%2 and not b%2:\n       	return False\n    else:\n       	return True
###
1111
def nice(a, b):\n    if a%2 and b%2 or not a%2 and not b%2:\n        return False\n    else:\n        return True\n
###
1111
def nice(a, b):\n    if a%2!=b%2:\n        return True\n    return False\n
###
1111
def nice(a, b):\n    if a%2==0 ^ b%2==0:\n        return True\n    else:\n    	return False\n
def nice(a, b):\n    if a%2==1 ^ b%2==0:\n        return True\n    else:\n    	return False\n
def nice(a, b):\n    if a%2==1 ^ b%2==1:\n        return True\n    else:\n    	return False\n
def nice(a, b):\n    if (a%2==0) ^ (b%2==0):\n        return True\n    else:\n    	return False\n
###
1111
def nice(a, b):\n    if a%2 == 0 and b%2 == 1:\n        return True\n    elif a%2 == 1 and b%2 == 0:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if a % 2 == 0 and b % 2 == 1:\n        return True\n    if a % 2 == 1 and b % 2 == 0:\n        return True\n    else:\n    	return False\n
###
1111
def nice(a, b):\n    return (a % 2 == 0 and b % 2 == 1) or (b % 2 == 0 and a % 2 == 1)\n
###
1111
def nice(a, b):\n    if (a%2==0 and b%2==1) or (a%2==1 and b%2==0):\n        return True\n    else:\n   		return False\n
###
1111
def nice(a, b):\n    if a%2==0 and b%2!=0:\n        return True\n    elif a%2!=0 and b%2==0:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if a % 2 == 0:\n        return b % 2 != 0\n    else:\n        return b % 2 == 0\n
###
1111
def nice(a, b):\n    return (a%2==0 and b%2==1) or (a%2==1 and b%2==1)\n
def nice(a, b):\n    return (a%2==0 and b%2==1) or (a%2==1 and b%2==0)\n
###
1111
def nice(a, b):\n    if (((a % 2 == 0) and (b % 2 == 1)) or ((a % 2 == 1) and (b % 2 == 0))):\n		return True\n    else:\n        return False
###
1111
def nice(a, b):\n    if (a%2==0 and b%2==1) or (a%2==1 and b%2==0):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if (a % 2 == 0 and b % 2 != 0) or (b % 2 == 0 and a % 2 != 0):\n		return True\n    return False
###
1111
def nice(a, b):\n    if((a%2==0)and(b%2==1))or((a%2==1)and(b%2==0)):\n    	return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if ((a%2==0) and (b%2!=0)) or ((b%2==0) and (a%2!=0)):\n    	return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    return ((((a%2)==0) and ((b%2)==1)) or (((b%2)==0) and ((a%2)==1)))\n
###
1111
def nice(a, b):\n    if(a+b)%2==1:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if a % 2 ==0 and b % 2!= 0:\n    	return True\n    elif b % 2 ==0 and a % 2!= 0:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    return (a%2==0 and b%2==1) or (b%2==0 and a%2==1)\n
###
1111
def nice(a,b):\n    if a%2==0 and b%2!=0 or a%2!=0 and b%2==0:\n        return True\n    else:\n        return False\n        
###
1111
def nice(a, b):\n    if(a%2==0 and b%2!=0 or a%2==0 and b%2!=0):\n        return True\n    else:\n    	return False\n
def nice(a, b):\n    if(a%2==0 and b%2!=0 or a%2==0 and b%2!=0):\n        return True\n    else:\n    	return False\n
def nice(a, b):\n    if(a%2==0 and b%2!=0 or a%2==0 and b%2!=0):\n        return False\n    else:\n    	return True\n
def nice(a, b):\n    if(a%2==0 and b%2!=0 or b%2==0 and a%2!=0):\n        return True\n    else:\n    	return False\n
###
1111
def nice(a, b):\n    if(a%2==0 and b%2!=0 or b%2==0 and a%2!=0):\n    	return True\n    else:\n       	return False
###
1111
def nice(a, b):\n    if a % 2 == 0 and b % 2 == 1 or b % 2 == 0 and a % 2 == 1:\n    	return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if (a % 2 == 0 and b % 2 == 1) or (a % 2 == 1 and b % 2 == 0):   \n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if (a+b)%2==1:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if((a%2==0 and b%2==1) or (a%2==1 and b%2==0):\n       return True\n    else:\n    	return False\n
def nice(a, b):\n    if((a%2==0 and b%2==1) or (a%2==1 and b%2==0)):\n       return True\n    else:\n    	return False\n
###
1111
def nice(a, b):\n  if a%2 == 0 and b%2 ==1 :\n	return True\n  else:\n    if a%2 == 1 and b%2 == 0:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    return (a % 2 == 0) != (b % 2 == 0)\n
###
1111
def nice(a, b):\n    if (a%2==0 and b%2==1) or (a%2==1 and b%2==0):\n        return True\n    else:\n        return False
###
1111
def nice(a, b):\n    if a%2==0 and b%2==1:\n        return True\n    elif a%2==1 and b%2==0:\n        return True\n    else:\n        return False\n        \n
###
1111
def nice(a, b):\n    if(a%2==0 and b%2!=0)or(b%2==0 and a%2!=0):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    return ((a%2 == 1)and(b%2 == 0)) or ((a%2 == 0)and(b%2 == 1))\n
###
1111
def nice(a, b):\n    if a % 2 ==  0 and b % 2 == 0:\n        return False\n    elif a % 2 == 1 and b % 2 == 1:\n       	return False\n    else:\n        return True\n
###
1111
def nice(a, b):\n    x = a % 2\n    y = b % 2\n    return x != y\n
###
1111
def nice(a, b):\n    if a%2==0 and b%2!=0 or b%2==0 and a%2!=0:\n        print(True)\n    else:\n        print(False)\n    return print(end="")\n
###
1111
def nice(a, b):\n    if (a%2==0 and b%2==1) or (a%2==1 and b%2==0):\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    return ((a % 2 == 0) and (b % 2 != 0)) or ((a % 2 != 0) and (b % 2 == 0))\n
###
1111
def nice(a, b):\n    if a%2 == 0 and b%2 == 1:\n    	return True\n    elif b%2 == 0 and a%2 == 1:\n        return True\n    else: return False
###
1111
def nice(a, b):\n	if (a % 2 ==0 or b % 2 == 0) and (a % 2 != 0 or b %2 != 0):\n		return True\n	return False
###
1111
def nice(a, b):\n    if a%2==0 and b%2==1 or a%2==1 and b%2==0:\n		return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n	if a % 2 == 0 and b % 2 == 0:\n		return False\n	elif a % 2 == 1 and b % 2 == 1:\n		return False\n	else:\n		return True
###
1111
def nice(a, b):\n    if a % 2 == 0 and b % 2 !=0:\n        return True\n    elif b % 2 == 0 and a % 2 != 0:\n        return True\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if  (a % 2 == 0 and b % 2 == 1) or (a % 2 == 1 and b % 2 == 0):\n    	return True	\n    else:\n        return False\n
###
1111
def nice(a, b):\n    if a % 2 ==0 and b % 2 == 0:\n        return False\n    else:\n        return True\n
def nice(a, b):\n    if a % 2 == 0 and b % 2 != 0:\n        return True\n    elif a % 2 != 0 and b % 2 == 0:\n        return True\n    else:\n        return False
###
1111
def nice(a, b):\n    if (a % 2 == 0 and b % 2 != 0) or (a % 2 != 0 and b % 2 == 0):\n        return True\n    return False\n
###
1111
def compare(a, b):\n    if a>b:\n        print(a, "je vetsi nez", b)\n    if b>a:\n        print(b, "je vetsi nez", a)\n    if a is b:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if(a == b):\n        print("stejna")\n    elif(a > b):\n        print(a, "je vetsi nez", b)\n    else:\n        print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n     if (b > a):\n	    print(b, "je vetsi nez", a)\n     else:\n	    if (a == b):        \n			print("stejna")\n    	else:\n			print(a, "je vetsi nez", b)
###
1111
def compare(a, b):\n    if a > b :\n        print(a, "je vetsi nez", b)\n    elif a == b :\n        print("stejna")\n    else:\n        print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a>b:\n    	print(a,"je vetsi nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)\n        \n
###
1111
def compare(a, b):\n    if a>b:\n        print("a")\n    if a==b:\n        print("stejna")\n    if a<b:\n        print("b")\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n	if a>b:\n		print(a,"je vetsi nez",b)\n	if a==b:\n		print("stejna")\n	if a<b:\n		print(b,"je vetsi nez",a)
###
1111
def compare(a, b):\n    if a>b:\n        print(a, "je vetsi nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)
###
1111
def compare(a, b):\n	if a>b:\n		print(a, "je vetsi nez", b)\n	if a==b:\n		print("stejna")\n	if a<b:\n		print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n    if a>b:\n    	print(a,"je vetsi nez",b)\n    if a==b:\n    	print("stejna")\n    if a<b:\n    	print(b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n	if a>b:\n		print(a, "je vetsi nez", b)\n	if a==b:\n		print("stejna")\n	if a<b:\n		print(b, "je vetsi nez", a)
###
1111
def compare(a, b):\n   	if a>b: \n    	print(a, "je vetsi nez",b)\n   	if a==b: \n    	print("stejna")\n   	if a<b:\n    	print(b, "je vetsi nez",a)\n          
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetši nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi nez",a)
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi než", b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi než", a)\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi než", b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi než", a)\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi než",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi než",a)\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi než",b)\n    if a==b:\n        print("stejna")\n    if a<b:\n        print(b,"je vetsi než",a)\n
def compare(a, b):\n	if a>b:\n		print(a,"je vetsi nez",b)\n	if a==b:\n		print("stejna")\n	if a<b:\n		print(b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n    if a > b:\n        print (a,"je vetsi nez",b)\n    elif a < b:\n        print (b,"je vetsi nez",a)\n    else:\n        print ("stejna")
###
1111
def compare(a, b):\n    if(a==b): print("stejna")\n    if (a<b):print(b,"je vetsi nez",a)\n    if (a>b):print(a,"je vetsi nez",b)\n        
###
1111
def compare(a, b):\n    if a > b:\n        print (a,"je vetsi nez",b)\n    elif b > a:\n        print (b,"je vetsi nez",a)\n    else:\n        print ("stejna")
###
1111
def compare(a, b):\n    if a>b:\n        print(a, "je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",b)\n    else:\n        print("stejna")\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",b)\n    else:\n        print("stejna")\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",b)\n    else:\n        print("stejna")\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif a<b:\n        print(b,"je vetsi nez",a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif a > b:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif a > b:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif a > b:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif a > b:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif a > b:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif a > b:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n    	print(b ,"je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    else:\n        print(a ,"je vetši nez", b)\n
def compare(a, b):\n    if a < b:\n        print(b, "je vetsi nez", a)\n    elif a == b:\n    	print("stejna")\n    else:\n		print (a, "je vetsi nez", b)
###
1111
def compare(a, b):\n    print("nevim")\n
def compare(a, b):\n    if a<b:\n        print (b,"je vetsi nez",a)\n    elif a==b:\n        print ("stejna")\n    elif b<a:\n        print (a,"je vetsi nez",a)\n    else:\n        print ("ani jedna podminka") 
def compare(a, b):\n    if a<b:\n        print (b,"je vetsi nez",a)\n    elif a==b:\n        print ("stejna")\n    elif b<a:\n        print (a,"je vetsi nez",a)\n    else:\n        print ("ani jedna podminka") 
def compare(a, b):\n    if a<b:\n        print (b,"je vetsi nez",a)\n    elif a==b:\n        print ("stejna")\n    elif b<a:\n        print (a,"je vetsi nez",a)\n    else:\n        print ("ani jedna podminka") 
def compare(a, b):\n    if a<b:\n        print (b,"je vetsi nez",a)\n    elif a==b:\n        print ("stejna")\n    elif b<a:\n        print (a,"je vetsi nez",b)\n    else:\n        print ("ani jedna podminka") 
###
1111
def compare(a, b):\nmax(a,b)==c:\n#...\n    if a==b:\n        print("stejna")\n    else:\n        print (c" je vetsi nez "d):
def compare(a, b):\n    if a==b:\n        print("stejna")\n    else:\n        print(max(a,b)" je vetsi nez "min(a,b))\n
def compare(a, b):\n    if a==b:\n        print("stejna")\n    else:\n        print(max(a,b)," je vetsi nez ",min(a,b))
def compare(a, b):\n    if a==b:\n        print("stejna")\n    else:\n        print(max(a,b)," je vetsi nez ",min(a,b))
def compare(a, b):\n    if a==b:\n        print("stejna")\n    else:\n        print(max(a,b),"je vetsi nez",min(a,b))
###
1111
def compare(a, b):\n    if (a>b):\n        print(a, "je vetsi nez", b)\n    elif a==b:\n        print("stejna")\n    elif a<b:\n        print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a==b:\n        print("stejna")\n    else:\n        print(max(a,b),"je vetsi nez",min(a,b))
###
1111
def compare(a, b):\n    if a < b:\n        print(b, "je vetsi nez", a)\n    if a == b:\n        print("stejna")\n    if a > b:\n        print(a, "je vetsi nez", b)
###
1111
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez", b)\n    if a < b:\n        print(b, "je vetsi nez", a)\n    if a == b:\n        print("stejna")
###
1111
def compare(a, b):\n    if(a>b):\n    	print(a," je vetsi nez ",b)\n    if(b>a):\n    	print(b," je vetsi nez ",a)\n    else:\n    	print("stejna")\n
def compare(a, b):\n    if(a>b):\n    	print(a,"je vetsi nez",b)\n    elif(b>a):\n    	print(b,"je vetsi nez",a)\n    else:\n    	print("stejna")\n
###
1111
def compare(a, b):\n    if b > a:\n        print(b,"je vetsi nez", a)\n    elif a > b:\n        print(a,"je vetsi nez",b)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a>b: print(a, "je vetsi nez", b)\n    elif a==b: print ("stejna")\n    else: print (b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a == b:\n        print("stejna")\n    elif a > b:\n        print(a, "je vetsi nez", b)\n    elif b > a:\n        print(b, "je vetsi nez", a)
###
1111
def compare(a, b):\n    jv = " je vetsi nez "    \n    if   a > b:\n       print(str(a) +jv +str(b))\n    elif a < b:\n       print(str(b) +jv +str(a))\n    else: \n       print("stejna")\n   \n\n      \n       \n    \n
###
1111
def compare(a, b):\n    if a==b:\n   	 print("stejna")\n    elif b>a:\n     print (b,"je vetsi nez",a)\n    else:\n     print (a,"je vetsi nez",b)\n
###
1111
def compare(a, b):\n    if a == b:\n        print("stejna")\n    elif a > b:\n        print(a,"je vetsi nez", b)\n    else:\n        print(b,"je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if(a == b):\n        print("stejna")\n    elif(a > b):\n        print(a, "je vetsi nez", b)\n    elif(b > a):\n        print(b, "je vetsi nez", a)\n        \n
###
1111
def compare(a, b):\n    if a>b: print(a, "je vetsi nez", b)\n    elif b>a: print(b, "je vetsi nez", a)\n    else: print("stejna")\n
###
1111
def compare(a, b):\n    if a == b:\n        print("stejna")\n    if a > b:\n        print("%d je vetsi nez %d" %(a, b))\n    if a < b:\n        print("%d je vetsi nez %d" %(b, a))\n
###
1111
def compare(a, b):\n    if(a>b):\n        print(a, "je vetsi nez", b)\n    elif(a<b):\n        print(b, "je vetsi nez", a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a>b:\n        print( a, "je vetsi nez", b)\n    elif b>a:\n        print( b, "je vetsi nez", a)\n    else:\n    	print("stejna")\n
###
1111
def compare(a, b):\n    if a==b:\n        print ("stejna")\n    else:\n        if a>b:\n        	print (a, "je vetsi nez", b)\n        else:\n        	print (b, "je vetsi nez", a)
###
1111
def compare(a, b):\n    if a > b:\n        print(a,"je vetsi nez", b)\n    if a < b:\n        print(b,"je vetsi nez", a)\n    if a == b:\n        print("stejna")\n    \n    \n
###
1111
def compare(a, b):\n	if a == b:\n		print("stejna")\n	if a>b:\n		print(a, "je  vetsi nez", b)\n	if a<b:\n		print(b, "je vetsi nez", a)\n
def compare(a, b):\n	if a == b:\n		print("stejna")\n	if a>b:\n		print(a, "je vetsi nez", b)\n	if a<b:\n		print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a==b:\n        print("stejne")\n    if a>b:\n        print(a, "je vetsi nez", b)\n    else:\n        print(b, "je vetsi nez", a)\n
def compare(a, b):\n    if a==b:\n        print("stejna")\n    if a>b:\n        print(a, "je vetsi nez", b)\n    else:\n        print(b, "je vetsi nez", a)\n
def compare(a, b):\n    if a==b:\n        print("stejna")\n    else:\n    	if a>b:\n        	print(a, "je vetsi nez", b)\n    	else:\n        	print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a > b :\n        print (a, "je vesti nez", b)\n    elif a < b :\n        print (b, "je vesti nez", a)\n    else:\n    	print("stejna")\n
def compare(a, b):\n    if a > b :\n        print (a, "je vesti nez", b)\n    elif a < b :\n        print (b, "je vesti nez", a)\n    else:\n    	print("stejna")\n
def compare(a, b):\n    if a > b :\n        print (a, "je vesti nez", b)\n    elif a < b :\n        print (b, "je vesti nez", a)\n    else:\n    	print("stejna")\n
def compare(a, b):\n    if a > b :\n        print (a, "je vetsi nez", b)\n    elif a < b :\n        print (b, "je vetsi nez", a)\n    else:\n    	print("stejna")\n
###
1111
def compare(a, b):\n    if(a==b):\n        print("stejna")\n    elif(a>b):\n        print(a,"je vetsi nez",b)\n    else:\n		print(b,"je vetsi nez",a)        \n\n\n
###
1111
def compare(a, b):\n    if a>b:\n        print (a ,"je vetsi nez", b)\n    elif a==b:\n        print("stejna")\n    elif b>a:\n        print (b ,"je vetsi nez", a)\n    \n
###
1111
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez", b)\n    elif a < b:\n        print(a, "je mensi nez", b )\n    else:\n        print("stejna")
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez", b)\n    elif a < b:\n        print(b, "je vetsi nez", a )\n    else:\n        print("stejna")
###
1111
def compare(a, b):\n    print("nevim")\n
def compare(a, b):\n    print("stejna")\n
def compare(a, b):\n    if a==b:\n        print("stejna")\n    elif a>b:\n        print(a,"je vetsi nez", b)\n    else:\n        print(b,"je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if (a == b):\n        print("stejna")\n    elif (a > b):\n        print(a, " je vetsi nez ", b)\n    else:\n        print(b, " je vetsi nez ", a)
def compare(a, b):\n    if (a == b):\n        print("stejna")\n    elif (a > b):\n        print(a, "je vetsi nez", b)\n    else:\n        print(b, "je vetsi nez", a)
###
1111
def compare(a, b):\n    if a > b :\n        print (a, "je vetsi nez", b)\n    elif b > a :\n        print (b, "je vetsi nez", a)\n    else:\n        print ("stejna")\n
###
1111
def compare(a, b):\n	if a == b:\n		print("stejna")\n	elif a > b:\n		print(a, "je vetsi nez", b)\n	else:\n		print(b, "je vetsi nez", a)
###
1111
def compare(a, b):\n    if a>b:\n    	print(a,"je vetsi nez",b)\n    elif a<b:\n        print(b,"je vetsi nez",a)\n    else:\n    	print("stejna")\n
###
1111
def compare(a, b):\n    if a < b:\n        print(b, "je vetsi naz", a)\n    elif a == b:\n        print("stejne")\n    elif b < a:\n        print(a, "je vetsi nez", b)\n
def compare(a, b):\n    if a < b:\n        print(b, "je vetsi nez", a)\n    elif a == b:\n        print("stejne")\n    elif b < a:\n        print(a, "je vetsi nez", b)\n
def compare(a, b):\n    if a < b:\n        print(b, "je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    elif b < a:\n        print(a, "je vetsi nez", b)\n
###
1111
def compare(a, b):\n    if a == b:\n    	print("stejna")\n    elif a > b:\n        print(a," je vetsi nez ",b)\n    else:\n        print(b," je vetsi nez ",a)\n       \n
def compare(a, b):\n    if a == b:\n    	print("stejna")\n    elif a > b:\n        print(a,"je vetsi nez ",b)\n    else:\n        print(b,"je vetsi nez ",a)\n       \n
def compare(a, b):\n    if a == b:\n    	print("stejna")\n    elif a > b:\n        print(a,"je vetsi nez",b)\n    else:\n        print(b,"je vetsi nez",a)\n       \n
###
1111
def compare(a, b):\n    if a>b:\n    	print(a,"je vetsi nez",b)\n    elif b>a:\n    	print(b,"je vetsi nez",a)\n    elif a==b:\n    	print("stejna")\n
###
1111
def compare(a, b):\n    if b > a:\n        print("5 je vetsi nez 3")\n    if b == a:\n        print (" stejna ")\n    if b < a:\n        print("6 je vetsi nez 3")\n   \n \n
def compare(a, b):\n    if b > a:\n        print(b,"je vetsi nez", a)\n    if b == a:\n        print (" stejna ")\n    if b < a:\n        print(a," je vetsi nez ",b)\n   \n \n
def compare(a, b):\n    if b > a:\n        print(b,"je vetsi nez", a)\n    if b == a:\n        print (" stejna ")\n    if b < a:\n        print(a ," je vetsi nez ", b)\n   \n \n
def compare(a, b):\n    if a < b:\n        print(b,"je vetsi nez",a)\n    if a==b:\n        print(a," stejna",b)\n    if a>b:\n        print(a," je vetsi nez",b)\n         \n
def compare(a, b):\n    if a < b:\n        print(b,"je vetsi nez",a)\n    if a==b:\n        print("stejna")\n    if a>b:\n        print(a,"je vetsi nez",b)\n         \n
###
1111
def compare(a, b):\n    if a>b:\n        print(a," je vetsi nez ",b)\n	if b>a:\n        print(b," je vetsi nez ",a)\n	else:\n        print("stejna")\n
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a < b:\n        print(b, "je vetsi nez", a)\n    elif a == b:\n        print("stejna")\n    else:\n        print(a, "je vetsi nez", b)\n
###
1111
def compare(a, b):\n    if (a < b):\n        print(b, "je vetsi nez", a)\n    if (a > b):\n        print(a, "je vetsi nez", b)\n    if (a == b):\n        print(stejna)\n
def compare(a, b):\n    if (a < b):\n        print(b, "je vetsi nez", a)\n    if (a > b):\n        print(a, "je vetsi nez", b)\n    if (a == b):\n        print("stejna")\n
###
1111
def compare(a, b):\n	if (a<b):\n		print(b, "je vetsi nez", a)\n	if (a>b):\n		print(a, "je vetsi nez", b)\n	if (a==b):\n		print("stejna")
###
1111
def compare(a, b):\n    if a > b:\n        print(a, 'je vetsi nez', b)\n    elif a < b:\n        print(b, 'je vetsi nez', a)\n    else:\n        print('stejna')\n
###
1111
def compare(a, b):\n    if a > b:\n        print(a, " je větší než ", b)\n    else:\n        if a == b:\n            print("stejna")\n        else:\n            print(b, " je větší než ", a)\n
def compare(a, b):\n    if a > b:\n        print(a, " je větší než ", b)\n    else:\n        if a == b:\n            print("stejna")\n        else:\n            print(b, " je větší než ", a)\n
def compare(a, b):\n    if a > b:\n        print(a, " je vetsi nez ", b)\n    else:\n        if a == b:\n            print("stejna")\n        else:\n            print(b, " je vetsi nez ", a)\n
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez ", b)\n    else:\n        if a == b:\n            print("stejna")\n        else:\n            print(b, "je vetsi nez ", a)\n
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez", b)\n    else:\n        if a == b:\n            print("stejna")\n        else:\n            print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",a)\n    else:\n        print("stejna")\n\n
###
1111
def compare(a, b):\n    if(a>b):\n    	print(a,"je vetsi nez",b)\n    if(a==b):\n    	print("stejna")\n	if(a<b):\n    	print(b,"je vetsi nez",a)
def compare(a, b):\n    if (a>b):\n    	print(a,"je vetsi nez",b)\n    if (a==b):\n    	print("stejna")\n    if (a<b):\n    	print(b,"je vetsi nez",a)
###
1111
def compare(a, b):\n    if(a==b):\n        print("stejna")\n    else:\n        if(a>b):\n            print(a,"je vetsi nez",b)\n        else:\n            print(b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n if a > b:\n    print(a," je vetsi nez ",b)\n elif a == b :\n 	print('stejna')\n else :\n    print(b,' je vetsi nez ',b)
def compare(a, b):\n if a > b:\n    print(a," je vetsi nez ",b)\n elif a == b :\n 	print('stejna')\n else :\n    print(b,' je vetsi nez ',a)
def compare(a, b):\n if a > b:\n    print(a,"je vetsi nez",b)\n elif a == b :\n 	print('stejna')\n else :\n    print(b,'je vetsi nez',a)
###
1111
def compare(a, b):\n    if (a==b):\n    	print("stejna")\n    if (a>b):\n        print(a, "je vetsi nez" ,b)\n    if (b>a):\n        print(b, "je vetsi nez" ,a)\n
###
1111
def compare(a, b):\n    if a==b:\n        print("stejna")\n    elif a>b:\n        print (a, "je vetsi nez", b)\n    elif b>a:\n        print (b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez", b)\n    if b > a:\n        print(b, "je vetsi nez", a)\n    if a == b:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a == b:\n        print("stejna")\n    elif a < b:\n        print(b, "je vetsi nez", a)\n    else:\n        print(a, "je vetsi nez", b)\n\n
###
1111
def compare(a, b):\n    if a == b:\n        print ("stejna")\n    elif a < b:\n        print (b," je vetsi nez", a)\n    else:\n        print (a,"je vetsi nez",b)
def compare(a, b):\n    if a == b:\n        print ("stejna")\n    elif a < b:\n        print (b," je vetsi nez", a)\n    else:\n        print (a,"je vetsi nez",b)
def compare(a, b):\n    if a == b:\n        print ("stejna")\n    elif a < b:\n        print (b," je vetsi nez", a)\n    else:\n        print (a,"je vetsi nez", b)
def compare(a, b):\n    if a == b:\n        print ("stejna")\n    elif a < b:\n        print (b,"je vetsi nez", a)\n    else:\n        print (a,"je vetsi nez", b)
###
1111
def compare(a, b):\n    if(a == b):\n    	print("stejna")\n    elif(a > b):\n    	print(a, "je vetsi nez", b)\n    else:\n        print(b, "je vetsi nez", a)\n    \n
###
1111
def compare(a, b):\n    if a>b:\n        print(a,"je vetsi nez",b)\n    elif b>a:\n        print(b,"je vetsi nez",a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a == b:\n        print("stejna")\n    if a < b:\n         print(a, "je mensi nez", b)\n    if a > b:\n              print(a, "je vetsi nez", b)\n
def compare(a, b):\n    if a == b:\n        print("stejna")\n    if a < b:\n         print(b, "je mensi nez", a)\n    if a > b:\n              print(a, "je vetsi nez", b)\n
def compare(a, b):\n    if a == b:\n        print("stejna")\n    if a < b:\n         print(a, "je vetsi nez", b)\n    if a > b:\n              print(a, "je mensi nez", b)\n
def compare(a, b):\n    if a == b:\n        print("stejna")\n    elif b > a:\n        print(b, "je vetsi nez", a)\n    elif a > b:\n        print(a, "je vetsi nez", b)   \n    print\n
###
1111
def compare(a, b):\n    if a > b:\n    	print(a, "je vetsi nez", b)\n    elif a < b:\n        print(b, "je vetsi nez", a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a > b:\n        print( a, " je vetsi nez ", b)\n    elif a < b:\n        print( a, " je mensi nez ", b) \n    else:\n        print("stejna")\n    	\n
def compare(a, b):\n    if a > b:\n        print( a, " je vetsi nez ", b)\n    elif a < b:\n        print( b, " je vetsi nez ", a) \n    else:\n        print("stejna")\n    	\n
def compare(a, b):\n    if a > b:\n        print( a, " je vetsi nez ", b)\n    elif a < b:\n        print( b, " je vetsi nez", a) \n    else:\n        print("stejna")\n    	\n
def compare(a, b):\n    if a > b:\n        print( a, "je vetsi nez", b)\n    elif a < b:\n        print( b, "je vetsi nez", a) \n    else:\n        print("stejna")\n    	\n
###
1111
def compare(a, b):\n    if a > b:\n        print(a, "je vetsi nez", b)\n    elif a < b:\n        print(b, "je vetsi nez", a)\n    else:\n        print("stejna")\n
###
1111
def compare(a, b):\n    if a > b:\n    	print(a, "je vetsi nez", b)\n    elif a == b:\n        print("stejna")\n    else:\n        print(b, "je vetsi nez", a)\n
###
1111
def compare(a, b):\n    if a<b:\n    	print(b,"je vetsi nez",a)\n    elif a>b:\n       	print(a,"je vetsi nez",b)\n    else:\n       print("stejna")
###
1111
def compare(a, b):\n    if a == b:\n        print ("stejna")\n    else:\n    	if a > b:\n       		print (a,"je vetsi nez",b)\n    	else:\n        	print (b,"je vetsi nez",a)\n
###
1111
def compare(a, b):\n    if a > b:\n        print(a,"je vetsi nez", b)\n    elif b == a:\n        print('stejna')\n    else:\n        print(b,"je vetsi nez", a)\n\n
###
1111
def compare(a, b):\n    if a == b:\n        print("stejna")\n    elif a > b:\n        print(a, "je vetsi nez", b)\n    else:\n    	print(b, "je vetsi nez", a)\n
###
1111
def check(p, k):\n    if p / 4 > k:\n        print("OgK",p / 4)\n    else: print("no")\n
def check(p, k):\n    if p / 4 > k:\n        print("Prebyva:", p - 4*k)\n    elif p / 4 < k:\n        print("Chybi:", 4*k - p)\n    else: print("OK")
###
1111
def check(p, k):\n    pocetNoh = k*4\n    if(pocetNoh == p):\n        print("OK")\n    if(p > pocetNoh):\n        print("Prebyva", p - pocetNoh)\n    elif(p < pocetNoh):\n        print("Chybi", pocetNoh - p)
def check(p, k):\n    pocetNoh = k*4\n    if(pocetNoh == p):\n        print("OK")\n    if(p > pocetNoh):\n        print("Prebyva:", p - pocetNoh)\n    elif(p < pocetNoh):\n        print("Chybi:", pocetNoh - p)
###
1111
def check(p, k):\n    if p-(k*4)==0:\n        print("OK")\n    elif p-(k*4) > 0:\n        print("Prebyva:", p-(k*4))\n    else:\n        print("Chybi:", (k*4)-p)\n
###
1111
def check(p, k):\n    if p==4*k:\n        print ("OK")\n        \n    if p>4*k:\n         print ("Prebyva:",p%4)\n        \n    if p<4*k:\n         print ("Chybi:",4*k-p)        
###
1111
def check(p, k):\n    if (k*4==p): print ("OK")\n    elif (k*4<p): print ("Prebyva:",p-k*4)\n    elif (k*4>p): print ("Chybi:",k*4-p)\n        \n    \n
###
1111
def check(p, k):\n    if (p==k*4):\n    	print("OK")\n    if (p<k*4):\n    	print ("Chybi:", 4*k-p)\n    if (p>k*4):\n    	print ("Prebyva:", p-4*k)\n
###
1111
def check(p, k):\n	if (p==k*4):\n		print ("OK")\n	if (p<k*4):\n		print("Chybi:", k*4-p)\n	if (p>k*4):\n		print("Prebyva:", p-4*k)
###
1111
def check(p, k):\n    if (p==k*4):\n        print ("OK")\n    if (p<k*4):\n        print("Chybi:", k*4-p)\n    if (p>k*4):\n        print("Prebyva:" , p-4*k)\n
###
1111
def check(p, k):\n	if 4*k>p:\n		print("Prebyva:", 4*k-p)\n	if 4*k<p:\n		print("Chybi:",p-4*k )\n	if 4*k==p:\n		print("OK")\n
def check(p, k):\n	if 4*k<p:\n		print("Prebyva:",p-4*k)\n	if 4*k>p:\n		print("Chybi:",4*k-p )\n	if 4*k==p:\n		print("OK")\n
###
1111
def check(p, k):\n	if (k*4==p):\n		print("OK")\n	if (4*k<p):\n		print("Prebyva:", p-4*k)\n	if (4*k>p):\n		print("Chybi:", 4*k-p)\n        	\n
###
1111
def check(p, k):\n    if k*4>p:\n        print ("Chybi:",k*4 - p)\n    elif k*4<p:\n        print ("Prebyva:",p-k*4)\n    else:\n        print ("OK")
###
1111
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", -(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", -(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", -(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", -(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", -(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", abs(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) < 0):\n        print("Chyby:", abs(p - k * 4))\n    else:\n        print("OK")\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n        print("Chyby:", abs(p - k * 4))\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("O")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chyby:", abs(p - k * 4))\n
def check(p, k):\n    if ((p - k * 4) > 0):\n    	print("Prebyva:", p - k * 4)\n    elif ((p - k * 4) == 0):\n        print("OK")\n    else:\n        print("Chybi:", abs(p - k * 4))\n
###
1111
def check(p, k):\n    if p == k * 4:\n        print("OK")\n    if p < k * 4:\n        print("Chybi:", 4 * k - p)\n    if p > k * 4:\n        print("Prebyva:", p - 4 * k)\n
###
1111
def check(p, k):\n    if(p==(k*4)):\n        print("OK")\n    elif(p<(k*4)):\n        print("Chybi",(k*4)-p)\n    else:\n    	print("Prebyva",p-(k*4))
def check(p, k):\n    if(p==(k*4)):\n        print("OK")\n    elif(p<(k*4)):\n        print("Chybi",(k*4)-p)\n    else:\n    	print("Prebyva:",p-(k*4))
def check(p, k):\n    if(p==(k*4)):\n        print("OK")\n    elif(p<(k*4)):\n        print("Chybi:",(k*4)-p)\n    else:\n    	print("Prebyva:",p-(k*4))
###
1111
def check(p, k):\n   # vysledok = 0\n    vysledok = p - 4*k\n    if vysledok == 0:\n        print("OK")\n    elif vysledok < 0:\n        print("Chybi:", -vysledok)\n    else:\n        print("Prebyva:", vysledok)\n
###
1111
def check(p, k):\n    x=p-4*k\n    if x<0:\n        print ("Prebyva:", x)\n    if x>0:\n        print ("Prebyva:",0-x)\n    if x==0:\n        print ("OK")\n
def check(p, k):\n    x=p-4*k\n    if x<0:\n        print ("Prebyva:", 0-x)\n    if x>0:\n        print ("Prebyva:",x)\n    if x==0:\n        print ("OK")\n
def check(p, k):\n    x=p-4*k\n    if x<0:\n        print ("Chybi:", 0-x)\n    if x>0:\n        print ("Prebyva:",x)\n    if x==0:\n        print ("OK")\n
###
1111
def check(p, k):\n    if k*4 > p:\n        print("Chybi:", k*4-p)\n    elif k*4 < p:\n        print("Prebyva:", p-4*k)\n    else:\n        print("OK")\n    \n
###
1111
def check(p, k):\n    if p>4*k:\n        print ("Prebyva:",p-4*k)\n    else:\n        if p<4*k:\n            print ("Chybi:",4*k-p)\n        else:\n		    print("OK")\n
###
1111
def check(p, k):\n    if p/k==4:\n        print('OK')\n    else:\n        if p/k>4:\n            print('Prebyva:',p%4)\n        else:\n            print('Chybi:',p%4)\n        
def check(p, k):\n    if p/k==4:\n        print('OK')\n    else:\n        if p/k>4:\n            print('Prebyva:',(k*4)-p)\n        else:\n            print('Chybi:',(k*4)-p)\n        
def check(p, k):\n    if p/k==4:\n        print('OK')\n    else:\n        if p/k>4:\n            print('Prebyva:',p-(k*4))\n        else:\n            print('Chybi:',(k*4)-p)\n        
###
1111
def check(p, k):\n    if 4*k==p:#(p-(p//k)*k)==0 and p-(p//4)*4==0:\n    	print("OK")\n    elif p>4*k:\n        print("Prebyva:", p-4*k)\n    else:\n        print("Chybi:", 4*k-p)\n
###
1111
def check(have, horses):\n    need = horses*4\n    result = need-have\n    if result==0:\n        print("OK")\n    elif result>0:\n        print("Prebyva:",result)\n    else:\n        print("Chybi:",-result)\n
def check(have, horses):\n    need = horses*4\n    result = need-have\n    if result==0:\n        print("OK")\n    elif result<0:\n        print("Prebyva:",result)\n    else:\n        print("Chybi:",-result)\n
def check(have, horses):\n    need = horses*4\n    result = need-have\n    if result==0:\n        print("OK")\n    elif result<0:\n        print("Prebyva:",-result)\n    else:\n        print("Chybi:",result)\n
###
1111
def check(p, k):\n    m=k*4\n    if m==p:\n        print("OK")\n    elif m<p:\n        print("Prebyva:", p-m)\n    elif m>p:\n        print("Chybi:", m-p)\n    else:\n        print("nonsense")\n    \n    \n
###
1111
def check(p, k):\n    if p/4==k:\n    	print("OK")\n    elif p/4>k:\n        print("Prebyva: ", p-k*4)\n    elif p/4<k:\n        print("Chybi: ", k*4-p) \n    \n
def check(p, k):\n    if p/4==k:\n    	print("OK")\n    elif p/4>k:\n        print("Prebyva:", p-k*4)\n    elif p/4<k:\n        print("Chybi:", k*4-p) \n    \n
###
1111
def check(p, k):\n    temp1=0\n    temp2=0\n\n    if p%k==0:\n        if p/k==4:\n            print("OK")\n        else:\n            temp1=k*4\n            print("Prebyva:",p-temp1)\n    else:\n        temp2=k*4\n        print("Chybi:",temp2-p)
def check(p, k):\n    temp1=0\n    temp2=0\n\n    if k*4>p:\n         temp2=k*4\n         print("Chybi:",temp2-p)\n\n    elif p/k==4:\n            print("OK")\n\n    else: #ak je k*4<p\n        temp1=k*4\n        print("Prebyva:",p-temp1)
###
1111
def check(p, k):\n    temp1=0\n    temp2=0\n\n    if k*4>p:\n         temp2=k*4\n         print("Chybi:",temp2-p)\n\n    elif p/k==4:\n            print("OK")\n\n    else: #ak je k*4<p\n        temp1=k*4\n        print("Prebyva:",p-temp1)\n
###
1111
def check(p, k):\n    temp1=0\n    temp2=0\n\n    if k*4>p:\n         temp2=k*4\n         print("Chybi:",temp2-p)\n\n    elif p/k==4:\n            print("OK")\n\n    else: #ak je k*4<p\n        temp1=k*4\n        print("Prebyva:",p-temp1)
###
1111
def check(p, k):\n    if k*4 == p:\n        print("OK")\n    elif k*4<p:\n        print("Prebyva:",p-k*4)\n    else:\n        print ("Chybi:",k*4-p)
###
1111
def check(p, k):\n		if p > 4*k:\n    		print("Prebyva:", p - 4*k)\n		elif p < 4*k:\n			print("Chybi:", 4*k - p)\n		else:\n			print("OK")
###
1111
def check(p, k):\n    if p%(4*k)==0: \n        print("OK")\n    elif p%(4*k)>0 and p>(4*k):\n        print("Prebyva:",p%(4*k))\n    else:\n        print("Chybi:",(4*k)-p)\n
###
1111
def check(p, k):\n    if (p > k*4):\n        print("Prebyva:",p - k*4)\n    elif (p < k*4):\n        print("Chybi:", k*4 - p)\n    else:\n    	print("OK")\n
###
1111
def check(p, k):\n    if k*4 == p:\n    	print("OK")\n    elif k*4 > p:\n        print("Chybi:", k*4 - p)\n    else:\n        print("Prebyva:", p - k*4)\n
###
1111
def big_even(a, b):\n    vetsiCislo = a\n    if(vetsiCislo < b):\n        vetsiCislo = b\n    if(vetsiCislo % 2 == 0):\n        return True\n    else: \n        return False\n
###
1111
def big_even(a, b):\n    return a > b and a % 2 is 0 or b % 2 is 0\n
###
1111
def big_even(a, b):\n    if (a > b):\n        if ((a % 2) == 0):\n            return True\n        else:\n            return False\n    else:\n        if ((b % 2) == 0):\n    		return True\n        else:\n            return False\n
###
1111
def big_even(a, b):\n	if max(a,b)%2==0:\n    	return True\n	else:\n    	return False
###
1111
def big_even(a, b):\n    if ((a > b) and (a % 2 == 0) or (a < b) and (b % 2 == 0)):\n    	return True\n    else:\n        return False\n    return False\n
###
1111
def big_even(a, b):\n    if ((a > b) and (a % 2 == 0) or (a < b) and (b % 2 == 0)):\n    	return True\n    else:\n        return False\n    return False\n\n
###
1111
def big_even(a, b):\n    moda = a%2\n    modb = b%2\n    if a>b and moda==0:\n        return True\n    if b>a and modb==0:\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    if a>b and a%2==0:\n    	return True\n    if a<b and b%2==0:\n        return True\n    else:return False
###
1111
def big_even(a, b):\n    if a%2==0 and b%2==0 :\n    	return True\n    else :\n    	return False\n
def big_even(a, b):\n    if a>b :\n		if a%2==0:\n    		return True\n		else:\n			return False\n    else:\n        if a%2==0:\n            return True\n        else:\n			return False\n        \n
def big_even(a, b):\n    if a>b :\n		if a%2==0:\n    		return True\n		else:\n			return False\n    else:\n        if b%2==0:\n            return True\n        else:\n			return False\n        \n
###
1111
def big_even(a, b):\n    if(a<b and b%2==0)or(a>b and a%2==0):\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    return True if max(a, b) % 2 == 0 else False
###
1111
def big_even(a, b):\n    if a>b and a%2:\n        return False\n    elif a<b and b%2:\n        return False\n    elif a==b:\n        return False\n    else:\n        return True\n
###
1111
def big_even(a, b):\n    if a>b or a==b:\n        x=a\n    else:\n        x=b\n    if x%2==0:\n        return True\n    else:\n    	return False\n
###
1111
def big_even(a, b):\n    if a>=b and a%2 == 0:\n        return True\n    elif a<b and b%2 == 0:\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    if a>b and (a/2)==True:\n        return True\n    if b>a and (b/2)==True:\n    	return True\n    else:\n        return False\n
def big_even(a, b):\n    if a>b: \n        if a%2==0:\n        	return True\n        else:\n            return False\n    if b>a: \n    	if b%2==0:\n    		return True\n    	else:\n        	return False\n
###
1111
def big_even(a, b):\n    if a>b and a%2==0:\n        return True\n    elif b>a and b%2==0:\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    if ((a > b) and (a % 2 == 0)):\n        return True\n    elif (b % 2 == 0):\n        return True\n    else:\n    	return False\n
###
1111
def big_even(a, b):\n    if a>b and a % 2==0 or b>a and b % 2==0:\n    	return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    if(a>b):\n        if(a%2==0):\n    		return True\n        else:\n            return False\n    else:\n        if(b%2==0):\n            return True\n        else:\n            return False\n
###
1111
def big_even(a, b):\n    c=0\n    if a>b:\n        c=a\n    else:\n        c=b\n    \n    if c%2==0:\n        return True\n    else:\n        return False\n    	\n
###
1111
def big_even(a, b):\n    if(max(a,b)%2==0):\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    if a < b:\n        if b % 2 == 0:\n        	return True\n        else:\n        	return False\n    else:\n        if a % 2 == 0:\n            return True\n        else:\n            return False\n
###
1111
def big_even(a, b):\n    if a>b:\n        if a % 2 == 0:\n        	return True\n        else:\n            return False\n    else:\n        if b % 2 == 0:\n            return True\n        else:\n            return False\n
###
1111
def big_even(a, b):\n    return (a>b and a%2==0) or (a<b and b % 2 == 0)\n
###
1111
def big_even(a, b):\n    if ((a > b) and (a % 2 == 0)) or ((a < b) and (b % 2 == 0)):\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n    pole=[a,b]\n    pole.sort()\n    if pole[1]%2==0:\n        return True\n    else:\n        return False\n
###
1111
def big_even(a, b):\n   if a > b:\n       if a % 2 == 0:\n   	       return True\n       else:\n           return False\n   else:\n       if b % 2 == 0:\n           return True\n       return False\n
###
1111
def big_even(a, b):\n    if(a>b):\n        if(a%2==0):\n            return True\n        else:\n            return False\n    if(a<b):\n        if(b%2==0):\n            return True\n        else:\n            return False\n
###
1111
def big_even(a, b):\n   if a > b  and a % 2== 0 or a<b and b %2 == 0:\n        return True	\n   else: \n    	return False\n
###
1111
def big_even(a, b):\n    return (a > b and a % 2 == 0) or (b > a and b % 2 == 0)\n
###
1111
def big_even(a, b):\n    if a>b:\n        if a%2==0:\n            return True\n        else: \n            return False\n    else:\n        if b%2==0:\n            return True\n        else: \n            return False\n	\n
###
1111
def big_even(a, b):\n    if a>b and a%2 == 0 or b>a and b%2 == 0:\n        print("True", end="")\n    else:\n        print("False", end="")\n    return print\n
def big_even(a, b):\n    if a>b and a%2 == 0 or b>a and b%2 == 0:\n        print("True", end="")\n    else:\n        print("False", end="")\n    return print\n
def big_even(a, b):\n    if a>b and a%2 == 0 or b>a and b%2 == 0:\n        print(True)\n    else:\n        print(False)\n    return print(end="")
###
1111
def big_even(a, b):\n    return max(a,b) % 2 == 0\n
###
1111
def big_even(a, b):\n    if a>b and a%2 == 0:\n        return True\n    elif b>a and b%2 == 0:\n        return True\n    else:\n    	return False\n
###
1111
def big_even(a, b):\n	if b < a:\n		if a%2==0:\n			return True\n		else:\n			return False\n	elif b > a:\n		if b%2==0:\n			return True\n		else:\n			return False
###
1111
def big_even(a, b):\n    if max(a, b) % 2 == 0:\n        return True\n    return False\n
###
1111
def dragon_test(heads, pigs):\n    if(pigs % heads != 0):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n	if pigs%heads==0:\n		print("Nebude bitka.")\n	else:\n		print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n            print("Nebude bitka")\n    else:\n            print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n            print("Nebude bitka.")\n    else:\n            print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n	if pigs%heads==0:\n		print("Nebude bitka.")\n	else:\n		print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n    	print("Nebude bitka.")\n    else:\n    	print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n    	print("Nebude bitka.")\n    else:\n    	print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n	if pigs%heads==0:\n		print("Nebude bitka.")\n	else:\n		print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n	if pigs%heads==0:\n     	print("Nebude bitka.")\n	else:\n		print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n    	print("Nebude bitka.")	\n    else:\n    	print ("Bude bitka.")\n             
###
1111
def dragon_test(heads, pigs):\n    if (pigs%heads == 0): print("Nebude bitka.")\n    if (pigs%heads != 0): print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("nebude bitka.")\n    if pigs%heads:\n        print ("bude bitka.")\n    if pigs%heads :\n        print( "nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("nebude bitka.")\n    if pigs%heads1!=0:\n        print ("bude bitka.")\n    if pigs%heads ==0\n        print("nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("nebude bitka.")\n    if pigs%heads1!=0:\n        print ("bude bitka.")\n    if pigs%heads ==0:\n        print("nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("nebude bitka.")\n    if pigs%heads!=0:\n        print ("bude bitka.")\n    if pigs%heads ==0:\n        print("nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    if pigs%heads!=0:\n        print ("Bude bitka.")\n    if pigs%heads ==0:\n        print("Nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    if pigs%heads!=0:\n        print ("Bude bitka.")\n    if pigs%heads==0:\n        print("Nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    if pigs%heads!=0:\n        print ("Bude bitka.")\n    if pigs%heads==0:\n        print("Nebude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    if pigs%heads!=0:\n        print ("Bude bitka.")\n  \n
###
1111
def dragon_test(h, p):\n    if p%h==0:\n        print("Nebude bitka.")\n    if p%h!=0:\n        print("Bude bitka.")\n    \n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0\n       print("Nebude bitka.")\n    else:\n       print("Bude bitka.")\n    \n    
def dragon_test(heads, pigs):\n    if pigs%heads==0\n       print("Nebude bitka.")\n    else:\n       print("Bude bitka.")\n    \n    
def dragon_test(heads, pigs):\n    if pigs%heads==0\n       print("Nebude bitka.")\n    else:\n       print("Bude bitka.")\n    \n    
def dragon_test(heads, pigs):\n    if pigs%heads==0\n       print("Nebude bitka.")\n    else:\n       print("Bude bitka.")\n    \n    
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    if pigs%heads!=0:\n        print("Bude bitka.")\n   
###
1111
def dragon_test(heads, pigs):\n    print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (3, 12)\n    print("Bitka nebude!")\n    if (3, 11)\n    print("Bitka bude!") \n    if (5,5)\n    print("Bitka bude!")\n
def dragon_test(heads, pigs):\n    if (3, 12)\n    print("Bitka nebude!")\n    if (3, 11)\n    print("Bitka bude!") \n    if (5,5)\n    print("Bitka bude!")\n
def dragon_test(heads, pigs):\n    if (3, 12)\n    print("Bitka nebude!")\n    if (3, 11)\n    print("Bitka bude!") \n    if (5,5)\n    print("Bitka bude!")\n
def dragon_test(heads, pigs):\n    if (4, 9)\n    print("Bitka bude!")\n
def dragon_test(heads, pigs):\n    if (4, 9)\n    print("Bitka bude!")\n
def dragon_test(heads, pigs):\n    if (4, 9)\n    print("Bitka bude!")\n
def dragon_test(heads, pigs):\n    if (4, 9)\n    print("Dobijou se jak psi!")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    if pigs%heads!=0:\n        print("Bude bitka.") \n
###
1111
def dragon_test(heads, pigs):\n    if (3, 12) \n       print("Nebude bitka")\n    if (3, 11) \n       print("Bude bitka")\n    if (5, 5)\n       print("Nebude bitka")\n    \n
def dragon_test(heads, pigs):\n    if (3%12) \n       print("Nebude bitka")\n    if (3%11) \n       print("Bude bitka")\n    if (5%5)\n       print("Nebude bitka")\n    \n
def dragon_test(heads, pigs):\n    if (pigs//heads==0)\n       print("Nebude bitka")\n    if (pigs//heads==1)\n       print("Bude bitka")\n    \n
def dragon_test(heads, pigs):\n    if (pigs%heads==0)\n       print("Nebude bitka")\n    if (pigs%heads==1)\n       print("Bude bitka")\n    \n
def dragon_test(heads, pigs):\n    if (pigs%heads==0):\n       print("Nebude bitka")\n    if (pigs%heads==1):\n       print("Bude bitka")\n    \n
def dragon_test(heads, pigs):\n    if (pigs%heads==0):\n       print("Nebude bitka.")\n    if (pigs%heads==1):\n       print("Bude bitka.")\n    \n
def dragon_test(heads, pigs):\n    if (pigs%heads==0):\n       print("Nebude bitka.")\n    if (pigs%heads==1):\n       print("Bude bitka.")\n    if (pigs%heads==2):\n       print("Bude bitka.")\n    \n
###
1111
def dragon_test(heads, pigs):\n    print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if (pigs % heads != 0):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads:\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")
def dragon_test(heads, pigs):\n    if pigs % heads:\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if(pigs%heads):\n    	print("Bude bitka.")\n    else:\n    	print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if (heads =< pigs):\n    	print("Nebude bitko.")\n    if (heads == pigs):\n		print("Nebude bitky.")\n        \n
def dragon_test(heads, pigs):\n    if (heads < pigs):\n    	print("Bude bitka.")\n        \n
def dragon_test(heads, pigs):\n    if (heads < pigs):\n    	print("Nebude bitka.")\n\n        \n
def dragon_test(heads, pigs):\n    if (pigs % heads):\n        print("Nebude bitka.")\n        if (pigs % heads):\n            print("Bude bitka")\n            if (pigs % heads):\n                print("Nebude bitka.")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs // heads >= heads):\n        print("Nebude bitka.")\n    else:\n        print("Bude Buitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads > 0):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads > 1):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads >= 1):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads != 0):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n        print("Nebude bitka.")\n        if (pigs % heads == 1):\n        	print("Bude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n        print("Nebude bitka.")\n        if (pigs % heads == 1):\n        	print("Bude bitka")\n    #print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n    #print("Mozna bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0: print("Nebude bitka.")\n    else: print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n    	print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n       beg = "Neb"\n    else:\n       beg = "B"\n    print(beg + "ude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if(pigs % heads == 0):\n        print("Nebude bitka.")\n    else:\n        print("Bude  bitka.")\n
def dragon_test(heads, pigs):\n    if(pigs % heads == 0):\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n    	print("Nebude bitka.")\n    else: print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0: print("Nebude bitka.")\n    else: print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    x = pigs % heads\n    if x == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n    \n    \n    \n\n\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads:\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads:	\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs%heads:	\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")\n
def dragon_test(heads, pigs):\n    if pigs%heads:	\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka")\n
def dragon_test(heads, pigs):\n    if pigs%heads:\n    	print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("Bude bitka")\n    else:\n        print("Nebude bitka")
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("Nebude bitka")\n    else:\n        print("Bude bitka")
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("Nebude bitka")\n    else:\n        print("Bude bitka")
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("Bude bitka")\n    else:\n        print("Nebude bitka")
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("Bude bitka")\n    else:\n        print("Nebude bitka")
def dragon_test(heads, pigs):\n    if pigs%heads:\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads!=0:\n    	print('Bude bitka')\n    else:\n        print('Nebude bitka')\n\n
def dragon_test(heads, pigs):\n    if pigs%heads!=0:\n    	print('Bude bitka.')\n    else:\n        print('Nebude bitka.')\n\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads == 0:\n   		print("Nebude bitka.")\n    else:\n    	print ("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n	if (pigs % heads == 0):\n		print("Nebude bitka")\n	else:\n		print("Bude bitka")\n
def dragon_test(heads, pigs):\n	if (pigs % heads == 0):\n		print("Nebude bitka.")\n	else:\n		print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if(pigs<heads):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
def dragon_test(heads, pigs):\n    if(pigs%heads==0):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
def dragon_test(heads, pigs):\n    if(pigs%heads!=0):\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print ("Nebude bitka.")\n    else:\n        print ("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    elif pigs%heads!=0:\n        print("Bude bitka.")\n    else:\n    	print("Mozna bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    	if heads % pigs == 0:\n    		print("Nebude bitka.")\n       	if heads % pigs != 0:\n            print("Bude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs % heads ==0:\n        print("Nebude bitka.")\n    else:\n    	print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads != 0:\n    	print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0 :\n        print ("nebude bitka.")\n    else :\n        print ("bude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs % heads == 0 :\n        print ("nebude bitka.")\n    else :\n        print ("bude bitka.")\n
def dragon_test(heads, pigs):\n    if pigs % heads == 0 :\n        print ("Nebude bitka.")\n    else :\n        print ("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads != 0:\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads==0:\n		print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs % heads==0:\n		print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs % heads==0:\n		print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs % heads==0:\n		print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs % heads==0:\n		print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n    	print("Bude bitka.")\n	\n    else:\n        print("Nebude bitka.")\n        \n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n        \n
###
1111
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads != 0 or pigs < heads:\n        print("Bude bitka.")\n    else:\n        print("Nebude bitka.")\n        \n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n    \n
###
1111
def dragon_test(x, y):\n    if y % x == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if heads % pigs == 0 or pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print('Bude bitka.')\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print ("Nebude bitka")\n    else:\n        print ("Bude bitka")
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print ("Nebude bitka.")\n    else:\n        print ("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n		print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n        \n
###
1111
def dragon_test(heads, pigs):\n    if(pigs%heads==0):\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n   if pigs % heads == 0:\n    print('bude bitka')\n   else :\n    print('Nebude bitka.')
def dragon_test(heads, pigs):\n   if pigs % heads == 0:\n    print('bude bitka')\n   else :\n    print('Nebude bitka.')
def dragon_test(heads, pigs):\n   if pigs % heads == 0:\n    print('Nebude bitka')\n   else :\n    print('Bude bitka.')
def dragon_test(heads, pigs):\n   if pigs % heads == 0:\n    print('Nebude bitka.')\n   else :\n    print('Bude bitka.')
###
1111
def dragon_test(heads, pigs):\n    if(pigs//heads==0):\n    	print("Nebude bitka.")\n        \n    else:\n    	print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if(pigs//heads==0):\n    	print("Nebude bitka.")\n        \n    else:\n    	print("Mozna bude bitka.")\n
def dragon_test(heads, pigs):\n    if(pigs//heads==0):\n    	print("Nebude bitka.")\n        \n    else:\n    	print("Bude bitka.")\n
def dragon_test(heads, pigs):\n    if(pigs%heads==0):\n    	print("Nebude bitka.")\n        \n    else:\n    	print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    elif pigs%heads>=1:\n        print ("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    elif pigs%heads>=1:\n        print ("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads == 0:\n         print("Nebude bitka.")\n    else:\n         print ("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n    print\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka")\n
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(x, y):\n    if y%x <1:\n        print("Nebude bitka.")\n    else: \n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads==0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n        \n\n\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if (pigs % heads == 0):\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n	if heads % pigs == 0 or pigs % heads == 0:\n		print("Nebude bitka.")\n	else:\n		print("Bude bitka")
def dragon_test(heads, pigs):\n	if heads % pigs == 0 or pigs % heads == 0:\n		print("Nebude bitka.")\n	else:\n		print("Bude bitka.")
###
1111
def dragon_test(heads, pigs):\n    if pigs%heads == 0:\n    	print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print('Nebude bitka')\n    else:\n        print('Bude bitka')\n\n
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print('Nebude bitka')\n    else:\n        print('Bude bitka.')\n\n
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print('Nebude bitka.')\n    else:\n        print('Bude bitka.')\n\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads ==0:\n        print ("Nebude bitka.")\n    else:\n        print ("Bude bitka.")\n
###
1111
def dragon_test(heads, pigs):\n    if pigs % heads == 0:\n        print("Nebude bitka.")\n    else:\n        print("Bude bitka.")\n
###
1111
def power_test(a, b):\n    vetsiCislo = a\n    mensiCislo = b\n    if(vetsiCislo < b):\n        vetsiCislo = b\n        mensiCislo = a\n  \n    if(vetsiCislo == mensiCislo**2):\n        print(vetsiCislo, "je druhou mocninou", mensiCislo)\n    else:\n        print("bagr")\n\n
###
1111
def power_test(a, b):\n    if a>b:\n        if b**2==a:\n            print(a, "je druhou mocninou", b)\n        else:\n            print("bagr")\n    elif b>a:\n        if a**2==b:\n            print(b, "je druhou mocninou", a)\n        else:\n            print("bagr")\n
###
1111
def power_test(a, b):\n    if (b == a*a): print (b,"je druhou mocninou", a)\n    elif (a == b*b): print (a,"je druhou mocninou", b)\n    else: print("bagr")\n
###
1111
def power_test(a, b):\n	if a*a==b:\n		print(b, "je druhou mocninou", a)\n	elif b*b==a:\n		print(a, "je druhou mocninou", b)\n	else:\n		print("bagr")\n
###
1111
def power_test(a, b):\n	if a*a==b:\n		print(b,"je druhou mocninou",a)\n	elif b*b==a:\n		print(a,"je druhou mocninou",b)\n	else:\n		print("bagr")
###
1111
def power_test(a, b): \n    if a*a==b:\n 		print (b, "je druhou mocninou", a)\n    elif b*b==a:\n        print (a, "je druhou mocninou",b) \n    else : \n        print ("bagr")\n        \n 
###
1111
def power_test(a, b):\n    if(a*a==b):\n    	print(b, "je druhou mocninou", a)\n    elif(b*b==a):\n    	print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n    \n
###
1111
def power_test(a, b):\n    if (a*a==b):\n        print(b,"je druhou mocninou",a)\n    elif (b*b==a):\n        print(a,"je druhou mocninou",b)\n    else:\n        print("bagr")\n    \n
###
1111
def power_test(a, b):\n	if (a*a==b):\n		print(b, "je druhou mocninou", a)\n	elif (b*b==a):\n		print(a, "je druhou mocninou", b)\n	else:\n		print("bagr")\n	\n	\n
###
1111
def power_test(a, b):\n    if (a*a==b):\n        print (b,"je druhou mocninou",a)\n    elif (b*b==a):\n        print (a,"je druhou mocninou",b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if (a * a == b):\n    	print(b, "je druhou mocninou", a * a)\n    else:\n        print("bagr")\n
def power_test(a, b):\n    if (a * a == b):\n    	print(b, "je druhou mocninou", a)\n    elif (b * b == a):\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if b is a * a:\n        print(b, "je druhou mocninou", a)\n    elif a is b * b:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")
###
1111
def power_test(a, b):\n    if((a*a)==b):\n        print(b,"je druhou mocninou",a)\n    elif((b*b)==a):\n        print(b,"je druhou mocninou",a)\n    else:\n        print("bagr")\n
def power_test(a, b):\n    if((a*a)==b):\n        print(b,"je druhou mocninou",a)\n    elif((b*b)==a):\n        print(a,"je druhou mocninou",b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2 == b:\n        print(b,"je druhou mocninou", a)\n    elif b**2 == a:\n        print(a,"je druhou mocninou", b)\n    else:\n    	print("bagr")\n
###
1111
def power_test(a, b):\n    if (b / a == a) or (a / b == b):\n    	print(b, "je druhou odmocninou", a)\n    else:\n        print("bagr")\n    #print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if (b / a == a) or (a / b == b):\n    	print(b, "je druhou mocninou", a)\n    else:\n        print("bagr")\n    #print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if (b / a == a):\n    	print(b, "je druhou mocninou", a)\n    elif (a / b == b):\n        print (a, "je druhou mocninou", b)\n    else:\n      	print("bagr")\n    #print("bagr neni druhou mocninou")\n
###
1111
def power_test(a, b):\n    if a**2==b: print (b,"je druhou mocninou",a)\n    elif b**2==a: print (a,"je druhou mocninou",b)\n    else: print("bagr")\n
###
1111
def power_test(a, b):\n    if a*a == b:\n        print(b, "je druhou mocninou", a)\n    elif b*b == a:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2==b:\n        print(a, "je druhou mocninou", b)\n    if b**2==a:\n    	print(b, "je druhou mocninou", a)\n    else: print("bagr")\n
def power_test(a, b):\n    if a**2==b:\n        print(b, "je druhou mocninou", a)\n    if b**2==a:\n    	print(a, "je druhou mocninou", b)\n    \n    else: print("bagr")\n
def power_test(a, b):\n    \n    if a**2==b:\n        print(b, "je druhou mocninou", a)\n    if b**2==a:\n        print(a, "je druhou mocninou", b)\n    else: print("bagr") 
def power_test(a, b):\n    if a**2==b:\n        print(b,"je druhou mocninou", a)\n    if b**2==a:\n        print(b,"je druhou mocninou", a)\n    
def power_test(a, b):\n    if a**2==b:\n        print(b,"je druhou mocninou", a)\n    if b**2==a:\n        print(a,"je druhou mocninou", b)\n    
def power_test(a, b):\n    if a**2==b:\n        print(b,"je druhou mocninou", a)\n    if b**2==a:\n        print(a,"je druhou mocninou", b)\n    else: print("bagr")
def power_test(a, b):\n    if b**2==a:\n        print(a,"je druhou mocninou", b)\n    if a**2==b:\n        print(b,"je druhou mocninou", a)\n    else: print("bagr")
def power_test(a, b):\n    if b**2==a:\n        print(a,"je druhou mocninou", b)\n        x=True\n    else: x=False\n    if a**2==b:\n        print(b,"je druhou mocninou", a)\n        y=True\n    else: y=False\n    if y==False and x==False:\n        print ("bagr")
###
1111
def power_test(a, b):\n    if a>b:\n        if(b**2==a): print(a, "je druhou mocninou", b)\n        else: print("bagr")\n    elif b>a:\n        if(a**2==b): print(b, "je druhou mocninou", a)\n        else: print("bagr")\n    else: print("bagr")\n
###
1111
def power_test(a, b):\n    if a == b*b:\n        print(a, "je druhou mocninou", b)\n    elif b == a*a:\n        print(b, "je druhou mocninou", a)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2==b:\n        print(b, "je druhou mocninou", a)\n    elif b**2==a:\n    	print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if b**2==a:\n		print (a, "je druhou mocninouu",b)\n    else:\n        if a**2==b:\n            print (b, "je druhou mocninou",a)\n        else:\n            print ("bagr")
def power_test(a, b):\n    if b**2==a:\n		print (a, "je druhou mocninou",b)\n    else:\n        if a**2==b:\n            print (b, "je druhou mocninou",a)\n        else:\n            print ("bagr")
###
1111
def power_test(a, b):\n    if a == b*b:\n        print(a, "je druhou mocninou", b)\n    elif b == a*a:\n        print(b, "je druhou mocninou", a)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n	if (a**2 == b):\n		print(b, "je druhou mocninou", a)\n	else:\n		if (b**2 == a):\n			print(a, "je druhou mocninou", b)\n		else:\n			print("bagr")
###
1111
def power_test(a, b):\n    if(a==b**2):\n        print(a,"je druhou mocninou",b)\n    elif(b==a**2): \n		print(b,"je druhou mocninou",a)\n    else:\n        print("bagr")
###
1111
def power_test(a, b):\n    if a**2 == b:\n        print (b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print (a, "je druhou mocninou", b)\n    else:\n        print ("bagr")\n
###
1111
def power_test(a, b):\n    if (a**2==b):\n        print(b, "je druhou mocninou", a)\n    elif (b**2==a):\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a/b==b:\n        print(a ,"je druhou mocninou", b)\n    elif b/a==a:\n    	print(b ,"je druhou mocninou", a)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a == b ** 2:\n        print(a, "je druhou mocninou", b)\n    elif b == a ** 2:\n        print(b, "je druhou mocninou", a)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a==b**2:\n        print(a,"je druhou mocninou",b)\n    elif b==a**2:\n        print(b,"je druhou mocninou",a)\n    else:\n        print("bagr")\n    \n    \n    print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if a==b**2:\n        print(a,"je druhou mocninou",b)\n    elif b==a**2:\n        print(b,"je druhou mocninou",a)\n    else:\n        print("bagr")\n    \n    \n    #print("bagr neni druhou mocninou")\n
###
1111
def power_test(a, b):\n    x = a//b\n    y = b//a\n    if ((x) and (y)) == 0:\n            print("bagr")\n\n  \n   \n  \n   \n   \n    \n    \n    \n\n
def power_test(a, b):\n    x = a ** 2\n    y = b **2 \n    if x == b:\n        print(b, "je druhou mocninou", a)\n    elif y == a:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a > b and b**2 == a :\n        print (a, "je druhou mocninou", b)\n    elif a < b and a**2 == b :\n        print (b, "je druhou mocninou", a)\n    else :\n        print("bagr")\n    \n
###
1111
def power_test(a, b):\n    if a**2 == b:\n        print(b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a*a == b:\n        print(str(b) + " je druhou mocninou " + str(a))\n    elif b*b == a:\n        print(str(a) + " je druhou mocninou " + str(b))\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2==b:\n    	print(b,"je druhou mocninou",a)\n	\n    elif b**2==a:\n    	print(a, "je druhou mocninou",b)\n	\n    else:\n    	print("bagr")\n\n
###
1111
def power_test(a, b):\n    if (a == b**2):\n    	print(a, "je druhou mocninou", b)\n    elif (b == a**2):\n        print(b, "je druhou mocninou", a)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2==b:\n        print(b,"je druhou mocninou",a)\n    elif b**2==a:\n        print(a,"je druhou mocninou",b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if a*a == b:\n        print(b,"je druhou mocninou",a)\n    elif b*b == a:\n        print(a,"je druhou mocninou",a)\n    print()\n
def power_test(a, b):\n    if a*a == b:\n        print(b,"je druhou mocninou",a)\n    elif b*b == a:\n        print(a,"je druhou mocninou",b)\n    print()\n
def power_test(a, b):\n    if a*a == b:\n        print(b,"je druhou mocninou",a)\n    elif b*b == a:\n        print(a,"je druhou mocninou",b)\n    else:\n        print("bagr")\n    print()\n
###
1111
def power_test(a, b):\n    if a ** 2 == b:\n        print(b, "je druhou mocninou", a)\n    elif b**2==a:\n        print(a, "je druhou mocninou", b)\n    else:\n    	print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2 ==b or b**2 == a:\n        print (b, "je druhou mocninou", a)\n    else:\n        print ("bagr")\n
def power_test(a, b):\n    if a**2 ==b or b**2 == a:\n        print (a, "je druhou mocninou", b)\n    else:\n        print ("bagr")\n
def power_test(a, b):\n    if a**2 ==b or b**2 == a:\n        print (a, "je druhou mocninou", b)\n    else:\n        print ("bagr")\n
def power_test(a, b):\n    if a**2 ==b or b**2 == a:\n        print (b, "je druhou mocninou", a)\n    else:\n        print ("bagr")\n
def power_test(a, b):\n    if a**2 ==b or b**2 == a:\n        print (a, "je druhou mocninou", b)\n    elif b**2 == a:\n        print (b, "je druhou mocninou", a)\n    else:\n        print ("bagr")\n
def power_test(a, b):\n    if a**2 ==b or b**2 == a:\n        print (b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print (a, "je druhou mocninou", b)\n    else:\n        print ("bagr")\n
def power_test(a, b):\n    if a**2 ==b:\n        print (b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print (a, "je druhou mocninou", b)\n    else:\n        print ("bagr")\n
###
1111
def power_test(a, b):\n	if a**2==b:\n		print(b,"je druhou mocninou",a)\n	elif b**2==a:\n		print(a,"je druhou mocninou",b)\n	else:\n		print("bagr")\n
###
1111
def power_test(a, b):\n    if(a**2==b):\n        print(b,"je druhou mocninou",a)\n    elif(b**2==a):\n        print(a,"je druhou mocninou",b)\n    else:\n    	print("bagr")\n
###
1111
def power_test(a, b):\n    if(a**2==b):\n        print(a, "je druhou mocninou" ,b)\n    if(b**2==a):\n        print(b, "je druhou mocninou" ,a)\n    else:\n    	print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if(a**2==b):\n        print(a, "je druhou mocninou" ,b)\n    if(b**2==a):\n        print(b, "je druhou mocninou" ,a)\n    if(b**2!=a and a**2!=b):\n    	print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if(a**2==b):\n        print(b, "je druhou mocninou" ,a)\n    if(b**2==a):\n        print(a, "je druhou mocninou" ,b)\n    if(b**2!=a and a**2!=b):\n    	print("bagr neni druhou mocninou")\n
def power_test(a, b):\n    if(a**2==b):\n        print(b, "je druhou mocninou" ,a)\n    if(b**2==a):\n        print(a, "je druhou mocninou" ,b)\n    if(b**2!=a and a**2!=b):\n    	print("bagr")\n
###
1111
def power_test(a, b):\n        if a**2 == b:\n            print(b,"je druhou mocninou",a)\n        elif b**2 == a:    \n             print(a,"je druhou mocninou",b)\n        else:\n            print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2 == b:\n    	print(b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a ** 2 is b:\n    	print(b, "je druhou mocninou", a)\n    elif b ** 2 is a:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2==b: print(b,"je druhou mocninou",a)\n    elif b**2==a: print(a,"je druhou mocninou",b)\n    else: print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2 == b:\n        print(b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print(a, "je druhou mocninou", b)\n    else:\n    	print("bagr")\n
###
1111
def power_test(a, b):\n    c = a**2\n    if ((a**2) == b or (b**2) == a):\n        if (a**2 == b):\n            print(b,"je druhou mocninou",a)\n        else:\n            print(a,"je druhou mocninou",b)\n    else:\n    	print("bagr")\n
###
1111
def power_test(a, b):\n	if a**2 == b:\n		print(b, "je druhou mocninou", a)\n	elif b**2 == a:\n		print(a, "je druhou mocninou", b)\n	else:\n		print("bagr")
###
1111
def power_test(a, b):\n    if b*b == a:\n    	print(a,"je druhou mocninou",b)\n    else:\n        if a*a == b:\n    	print(b,"je druhou mocninou",a)\n        else:\n    	print("bagr")
###
1111
def power_test(a, b):\n    if b / a == a:\n        print(b, "je druhou mocninou", a)\n    elif a / b == b:\n        print(a, "je druhou mocninou", b)\n    else:\n        print("bagr")\n
###
1111
def power_test(a, b):\n    if a**2 == b:\n        print(b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print(a, "je druhou mocninou", b)\n    print("bagr")\n
def power_test(a, b):\n    if a**2 == b:\n        print(b, "je druhou mocninou", a)\n    elif b**2 == a:\n        print(a, "je druhou mocninou", b)\n    else:\n    	print("bagr")\n
###
1111
def middle_number(a, b, c):\n    list = [a,b,c]\n    print(sorted(list)[len(list)//2])\n
###
1111
def middle_number(a, b, c):\n    t=0\n    \n    if b<a:\n        t=a\n        a=b\n        b=t\n    if c<b:\n        t=b\n        b=c\n        c=t\n    if b<a:\n        t=a\n        a=b\n        b=t\n        \n    print(b)\n    \n        \n    \n        \n            \n
###
1111
def middle_number(a, b, c):\n        if (a > b and a < c) or (a > c and a < b) :\n            print(a)\n        if (b > a and b < c) or (b > c and b < a):\n            print(b)\n        if (c > a and c < b) or (c > b and c < a):\n            print(c)\n
###
1111
def middle_number(a, b, c):\n	if a<b<c:\n		print(b)\n	elif b<c<a:\n		print(c)\n	else:\n		print(a)\n
def middle_number(a, b, c):\n	if a<b<c:\n		print(b)\n	if b<c<a:\n		print(c)\n	if c<a<b:\n		print(a)\n
def middle_number(a, b, c):\n	if a<b<c:\n		print(b)\n	if b<c<a:\n		print(c)\n	if c<a<b:\n		print(a)\n	if a<c<b:\n		print(c)\n
def middle_number(a, b, c):\n	if a<b<c:\n		print(b)\n	if b<c<a:\n		print(c)\n	if c<a<b:\n		print(a)\n	if a<c<b:\n		print(c)\n	if b<a<c:\n		print(a)\n	if c<b<a:\n		print(b)\n
###
1111
def middle_number(a, b, c):\n	if a<b<c:\n		print(b)\n	if b<c<a:\n		print(c)\n	if c<b<a:\n		print(b)\n	if b<a<c:\n		print(a)\n	if c<a<b:\n		print(a)\n	if a<c<b:\n		print(c)
###
1111
def middle_number(a, b, c):\n    if a <= b <= c or c <= b <= a:\n        print(b)\n    elif b <= a <= c or c <= a <= b:\n        print(a)\n    else:\n        print(c)\n
###
1111
def middle_number(a, b, c):\n    rada = [a,b,c]\n    rada.sort()\n    print(rada[1])\n
###
1111
def middle_number(a, b, c):\n    if a < b and b < c:\n        print(b)\n    elif a < b and c < b and c < a:\n    	print(a)\n    else:\n        print(c)\n
def middle_number(a, b, c):\n    if a < b and b < c:\n        print(b)\n    elif a < b and c < b and c < a:\n    	print(a)\n    elif a < c and b < c and b < a:\n        print(a)\n    else:\n        print(c)\n
def middle_number(a, b, c):\n    if a < b and b < c:\n        print(b)\n    elif a < b and c < b and c < a:\n    	print(a)\n    elif a < c and b < c and b < a:\n        print(a)\n    elif c < b and c < a and b < a:\n        print(b)\n    else:\n        print(c)\n
###
1111
def middle_number(a, b, c):\n    if (a<b and b<c) or (c<b and b<a): print(b)\n    elif (c<a and a<b) or (b<a and a<c): print(a)\n    elif (b<c and c<a) or (a<c and c<b): print(c)\n    else: print("Trojice nema prostredni cislo")\n
###
1111
def middle_number(a, b, c):\n    list = [a,b,c]\n    list.sort()\n    print(list[1])\n
###
1111
def middle_number(a, b, c):\n    if a<b and b<c or c<b and b<a:\n        print(b)\n    if a<c and c<b or b<c and c<a:\n        print(c)\n    if b<a and a<c or c<a and a<c:\n        print(a)\n
def middle_number(a, b, c):\n    if a<b and b<c or c<b and b<a:\n        print(b)\n    if a<c and c<b or b<c and c<a:\n        print(c)\n    if b<a and a<c or c<a and a<b:\n        print(a)\n
###
1111
def middle_number(a, b, c):\n    if a < b < c or c < b < a:\n        print(b)\n    elif b < c < a or a < c < b:\n        print(c) \n    else:\n        print(a)\n
###
1111
def middle_number(a, b, c):\n    arr=[a,b,c]\n    arr.sort()\n    print(arr[1])\n
###
1111
def middle_number(a, b, c):\n    if a < b < c or c < b < a:\n    	print(b)\n    if b < a < c or c < a < b:\n        print (a)\n    if a < c < b or b < c < a:\n     	print (c)\n
###
1111
def middle_number(a, b, c):\n    min=a\n    if b<min:\n        min=b\n    if c<min:\n        min=c\n    max=a\n    if b>max:\n        max =b\n    if c >max:\n        max=c\n        \n    if a!= min and a != max:\n        print("a")\n    if b!= min and b != max:\n        print("b")\n    if c!= min and c != max:\n        print("c")\n
def middle_number(a, b, c):\n    min=a\n    if b<min:\n        min=b\n    if c<min:\n        min=c\n    max=a\n    if b>max:\n        max =b\n    if c >max:\n        max=c\n        \n    if a!= min and a != max:\n        print(a)\n    if b!= min and b != max:\n        print(b)\n    if c!= min and c != max:\n        print(c)\n
###
1111
def middle_number(a, b, c):\n    temp=[]\n    temp.append(a)\n    temp.append(b)\n    temp.append(c)\n    temp.sort()\n    \n    print(temp[1])\n
###
1111
def middle_number(a, b, c):\n    n=[]\n    n.append(a)\n    n.append(b)\n    n.append(c)\n    n.sort()\n    print(n[1])\n
###
1111
def middle_number(a, b, c):\n    list=[a, b, c]\n    list.sort()\n    print(list[1])\n
###
1111
def middle_number(a, b, c):\n    if a<b<c:\n        print(b)\n    elif a<c<b:\n        print (c)\n    elif b<c<a:\n        print (c)\n    elif b<a<c:\n        print (a)\n    elif c<b<a:\n        print (c)\n    elif c<a<b:\n        print (a)\n
def middle_number(a, b, c):\n    if a<b<c:\n        print(b)\n    elif a<c<b:\n        print (c)\n    elif b<c<a:\n        print (c)\n    elif b<a<c:\n        print (a)\n    elif c<b<a:\n        print (b)\n    elif c<a<b:\n        print (a)\n
###
1111
def middle_number(a, b, c):\n    if (a>b and b>c)or(a<b and a<c): \n        print(b)\n    elif (b>a and a>c)or(b<a and a<c): \n        print(a)\n    else:\n        print(c)\n
def middle_number(a, b, c):\n    if (a>b and b>c)or(a<b and b<c): \n        print(b)\n    elif (b>a and a>c)or(b<a and a<c): \n        print(a)\n    else:\n        print(c)\n
###
1111
def middle_number(a, b, c):\n    if (a<=b<=c or c<=b<=a):\n        print(b)\n    elif (b<=a<=c or c<=a<=b):\n        print(a)\n    else:\n    	print(c)\n
###
1111
def numbers(n):\n    for i in range(1,11):\n        print(i)\n
def numbers(n):\n    for i in range(1,n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1,n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range (1, n+1): print(i)\n    	\n
###
1111
def numbers(n):\n    for n in range(1, n+1):\n        print (n)\n    
###
1111
def numbers(n):\n    for n in range(10):\n	print(n+1)\n
def numbers(n):\n    for n in range(n):\n	print(n+1)\n
###
1111
def numbers(n):\n    cislo = n\n    while (cislo <= 10):\n        print(n)\n        cislo = cislo + 1\n
def numbers(n):\n    for n in range(1, 4):\n        print(n)\n
def numbers(n):\n    for r in range(1, n):\n        print(r)\n
def numbers(n):\n    for r in range(1, n+1):\n        print(r)\n
###
1111
\ndef numbers(n):\n    for i in range(n):\n        print(i+1)\n
###
1111
def numbers(n):\n    for i in range(1,n+1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i)
def numbers(n):\n    for i in range(n+1):\n        print(i)
def numbers(n):\n    for i in range(n):\n        i=i+1\n        print(i)
###
1111
def numbers(n):\n    for n in range(10):\n        print(n+1)\n
def numbers(n):\n    for n in range(n):\n        print(n+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for x in range(1,11):\n    	print(x)\n
def numbers(n):\n    for i in range(1,11):\n    	print(i)\n
def numbers(n):\n    for n in range(1,n+1):\n    	print(n)\n
###
1111
def numbers(n):\n    print(n)\n
def numbers(n):\n    for numbers in range (n+1):\n    	print(numbers)\n
def numbers(n):\n    for numbers in range (1,n+1):\n    	print(numbers)\n
###
1111
def numbers(n):\n    for i in range(1,11): print(i)\n
def numbers(n):\n    for i in range(1,n+1): print(i)\n
###
1111
def numbers(n): \n    for i in range(1,11,1):\n        print(i)\n        \n    \n
def numbers(n): \n    for i in range(1,n+1,1):\n        print(i)\n        \n    \n
###
1111
def numbers(n):\n  for i in range(1,n+1):\n  	  print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i);
###
1111
def numbers(n):\n    for i in range(1,n+1):\n    	print(i)\n    print("")\n\n	
###
1111
def numbers(n):\n  for i in range(1,n+1):\n      print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(1, n + 1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i+1)\n    print()\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i+1)\n        \n    \n
###
1111
def numbers(n):\n    i = 0\n    while i < n:\n        i += 1\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n + 1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(n): \n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range (n):\n        print (i+1)\n    \n
###
1111
def numbers(n):\n    i = 1\n    while i <= n:\n        print(i)\n        i += 1\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i+1)\n
###
1111
def numbers(n):\n    for n in range(10):\n        print (n+1)\n
def numbers(n):\n    for n in range(n):\n        print (n+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n        \n    	print(n+1)\n
def numbers(n):\n    for i in range(n):\n        \n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(10):\n        print(11-n)\n        n-=1\n
def numbers(n):\n    x=1\n    for i in range(10):\n        print(x)\n        x+=1\n
def numbers(n):\n    x=1\n    for i in range(n):\n        print(x)\n        x+=1\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n    \n
###
1111
def numbers(n):\n    for i in range (n):\n    	print(i+1)\n
###
1111
def numbers(n):\n	for i in range(n):\n		print(i+1)\n
###
1111
def numbers(n):\n	for i in range(1,n+1):\n		print(i)
###
1111
def numbers(n):\n    for i in range(n):\n        print(n+1)\n
def numbers(n):\n    for i in range(n):\n        print(i+1)\n
###
1111
def numbers(n):\n    for i in range (n):\n        print(i + 1)\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i)\n
def numbers(n):\n    for i in range(n):\n        print(i+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i+1)\n    \n
###
1111
def numbers(n):\n    for n in range (n) :\n    	print(n+1)\n
###
1111
def numbers(n):\n    a=1\n    for i in range(n):\n    	print(i+1)\n		
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n	for i in range(1,n+1):\n    	print(i)\n
###
1111
def numbers(n):\n    
def numbers(n):\n    for i in range(n):\n        print(i)
def numbers(n):\n    for i in range(1, n):\n    	print(i)\n
def numbers(n):\n    for i in range(1, n+1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range(1, n+1, 1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range (1, n+1):\n		print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range(10):\n         print(i+1)\n
def numbers(n):\n    a = 1\n    for i in range(3):\n         print(a)\n         a = a+1\n
def numbers(n):\n    for i in range(n):\n         print(i+1)\n         \n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for i in range (n):\n    	print(i+1, sep='')\n \n\n
###
1111
def numbers(n):\n    for i in range(n):\n        print(i+1)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n\n
###
1111
def numbers(n):\n    for i in range(1,n+1):\n		print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range(1,n+1):\n    	print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1, n+1):\n        print(i)\n
###
1111
def numbers(n):\n    for i in range(1,n+1):\n     print(i)\n
###
1111
def numbers(n):\n	for i in range(1,n+1):\n		print(i)\n
###
1111
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n    for x in range(n+1):\n        print(x)\n
def numbers(n):\n    for x in range(1,n+1):\n        print(x)\n
###
1111
def numbers(n):\n    for i in range(10):\n    	print(i+1)\n
def numbers(n):\n    for i in range(10):\n    	print(i+1)\n
def numbers(n):\n    for i in range(n):\n    	print(i+1)\n
###
1111
def numbers(n):\n	for i in range(1, n+1):\n    	print(i)\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range (n):\n        print("hej")\n        print("rup")
###
1111
def hej_rup(n):\n    for i in range(1, n+1):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for n in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range (n*2):\n        if i % 2 == 0:\n            print("hej")\n        else:\n            print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):   \n        print("hej")\n        print("rup")\n\n
###
1111
def hej_rup(n):\n    for n in range(n):\n        print("hej")\n        print("rup")\n   
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for hej in range(n):\n    	print("hej")\n    for rup in range(n):\n        print("Rup")\n\n
def hej_rup(n):\n    for hej in range(n):\n    	print("hej")\n    for rup in range(n):\n        print("Rup")\n\n
def hej_rup(n):\n    for hej in range(n):\n    	print("hej")\n    	print("rup")\n\n
###
1111
def hej_rup(n):\n    for hej_rup in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print ("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for x in range(n):\n        print("hej");\n        print("rup");\n
###
1111
def hej_rup(n):\n    for i in range(0,n):\n    	print("hej")\n    	print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for _ in range(n):\n    	print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print('hej')\n        print('rup')\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n       print("hej")\n       print("rup")
###
1111
def hej_rup(n):\n    i = 0\n    while i < n:\n        print("hej")\n        print("rup")\n        i += 1\n        \n   \n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej")\n        print("rup")\n
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n): \n        if (i+1)%2==1:\n            print("hej")\n        else: print ("rup")\n    \n\n
def hej_rup(n):\n    for i in range(2*n): \n        if (i+1)%2==1:\n            print("hej")\n        else: print ("rup")\n    \n\n
###
1111
def hej_rup(n):\n    i = 1\n    while i <= n:\n        print("hej")\n        print("rup")\n        i += 1\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for n in range(n):\n        print("hej")\n        print("rup")\n\n  
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej""\n""rup")\n      \n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print('hej')\n        print('rup')\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    k=1\n    for i in range (n):\n    	print("hej")\n    	for j in range (k):\n        	print ("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")
###
1111
def hej_rup(n):\n	for i in range(n):\n		print("hej")\n		print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):  \n    	print("hej")\n        print("rup")\n
def hej_rup(n):\n    for i in range(n):  \n    	print("hej")\n        print("rup")\n
def hej_rup(n):\n	for i in range(n):  \n		print("hej")\n		print("rup")\n
###
1111
def hej_rup(n):\n    for i in range (n):\n		print("hej")\n		print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(10):\n        print("hej")\n        print("rup")\n
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej")\n    	print("rup")\n
###
1111
def hej_rup(n):\n    for i in range (n) :\n        \n    	print("hej", "rup")\n
def hej_rup(n):\n    for i in range (n) :\n		print ("hej")\n		print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej")\n  	    print("rup")\n
def hej_rup(n):\n    for i in range(n):\n        print("hej")    \n        print("rup")\n\n \n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej")\n    	print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(2*n):\n    	if i%2 == 0:\n    		print("hej")\n    	else:\n        	print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(a):\n    for i in range(a):\n    	print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n		print("hej")\n		print("rup")
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range (n):\n        print("hej")\n        print ("rup")
###
1111
def hej_rup(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print("hej")\n        else:\n            print("rup")\n
def hej_rup(n):\n    for i in range(1, 2*n+1):\n        if i % 2 == 1:\n            print("hej")\n        else:\n            print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej",sep='')\n        print("rup",sep='')\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n    \n
###
1111
def hej_rup(n):\n    for slovo in range(1,n+1):\n        print("hej")\n        print("rup")
###
1111
def hej_rup(n):\n    for i in range(1,n+1):\n        print("hej")\n        print('rup')\n
###
1111
def hej_rup(n):\n    for i in range(1, n+1):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(1, n+1):\n        print("hej")\n        print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n     print("hej")\n     print("rup")\n
###
1111
def hej_rup(n):\n	for i in range(n):\n		print("hej")\n		print("rup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej","\n","rup")\n        	\n    
###
1111
def hej_rup(n):\n    for i in range(n):\n     print ("hej")\n     print ("rup")
###
1111
def hej_rup(n):\n    for i in range(n):\n    	print("hej\nrup")\n
###
1111
def hej_rup(n):\n    for i in range(n):\n        print("hej")\n        print("rup")\n
###
1111
def reverse_numbers(n):\n    for i in range(n,0, -1):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n,0,-1):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in reversed(range(n)):\n        print(i+1)\n
###
1111
def reverse_numbers(n):\n    for i in range(n:0:-1):\n        print(i)\n
def reverse_numbers(n):\n    for i in range(n,0,-1):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for reverse_numbers in range(n,0,-1):\n        print(reverse_numbers)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n,0,-1):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for x in range(n):\n        print(n);\n        n -= 1;
###
1111
def reverse_numbers(n):\n    for i in range(n, 0, -1):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n, 0, -1):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n)\n        n=n-1\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n	for i in range(n , 0 , -1):\n    	print (i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in reversed(range(1, n + 1)):\n        print(i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n - i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n		print(n-i)
###
1111
def reverse_numbers(n):\n	for i in range(n):\n		print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n)\n        n = n-1\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n+1, 1):\n        print(i)\n
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(i, n-1)\n
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    \n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(1,n+1):\n        print(n+1-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n	for i in range(n):\n		print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n, 0, -1):\n        print((i))\n\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def reverse_numbers(n):\n    for i in range(n):\n        print(n-i)\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n        print(i*2)\n
###
1111
def even_numbers(n):\n    for i in range(2,(n+1)*2,2):\n   	print(i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n        print(2*(i+1))\n
###
1111
def even_numbers(n):\n    for i in range (1, n+1):\n    	print(2*i)\n
###
1111
def even_numbers(n):\n    for i in range(2,n*2+1,2):\n        print(i)
###
1111
def even_numbers(n):\n    for i in range(n): \n    	print(2*i+2)\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n        a = i*2\n        print(a)\n\n
###
1111
def even_numbers(n):\n    for even_numbers in range(1,n+1):\n    		print(2*even_numbers)\n
###
1111
def even_numbers(n):\n    for i in range (n): print(2*i+2)\n       
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n    	print(i*2)\n
###
1111
def even_numbers(n):\n    y = 2;\n    for x in range(n):\n        print(y);\n        y = y + 2;
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n    	print(i*2)\n
###
1111
def even_numbers(n):\n    for i in range(1, n + 1):\n        print(2*i)\n
###
1111
def even_numbers(n):\n    for i in range (n):\n        print((i+1)*2)\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(2*i)\n        \n
###
1111
def even_numbers(n):\n    for i in range(n):\n        print(2*i+2)\n
###
1111
def even_numbers(n):\n    i = 0\n    a = 2\n    while i < n:\n        print(a)\n        a += 2\n        i += 1\n
###
1111
def even_numbers(n):\n    for i in range(2, n):\n        if(i % 2 == 0):\n            print(i)\n
def even_numbers(n):\n    for i in range(2, n*2+1):\n        if(i % 2 == 0):\n            print(i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n        if i % 2 == 0:\n    		print(i+2)\n
def even_numbers(n):\n    for i in range(2*n):\n        if i % 2 == 0:\n    		print(i+2)\n
###
1111
def even_numbers(n):\n    x=2\n    for i in range(n):\n        print(x)\n        x=x+2\n
###
1111
def even_numbers(n):\n    i = 1\n    while i <= n:\n        print(2 * i)\n        i += 1\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(i*2)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n    	print((i+1) * 2)\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n        print(i*2)\n    \n
###
1111
def even_numbers(n):\n    for i  in range(n):\n        print((i+1)*2)\n\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n        print(i*2)\n            \n
###
1111
def even_numbers(n):\n    for i in range (n):\n    	print(2+2*i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n    	print(2+2*i)\n
###
1111
def even_numbers(n):\n	for i in range(n):\n		print((i+1)*2)\n
###
1111
def even_numbers(n):\n    for i in range(1,n*2+1):\n        if i%2==0:\n            print(i)\n
###
1111
def even_numbers(n):\n    for i in range (n):\n    		print((i+1)*2)\n
###
1111
def even_numbers(n):\n    x=2\n    for i in range(n):\n        print(x)\n        x=x+2\n
###
1111
def even_numbers(n):\n    for i in range(n):\n    	print((i+1)*2)\n
###
1111
def even_numbers(n):\n    for i in range (2, n*2+2, 2):\n    	print(i)\n
###
1111
def even_numbers(n):\n    x=2\n    for i in range(n):\n    	print(x)\n    	x=x+2\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(2*i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n	    print((i+1)*2)\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n    	print(2*i)\n
###
1111
def even_numbers(n):\n    a=0\n    for i in range(n):\n		a=a+2\n		print(a)\n
###
1111
def even_numbers(n):\n    for i in range (1, n+7):\n        if i%2==0:\n            print (i)\n
def even_numbers(n):\n    for i in range (1, n+n+1):\n        if i%2==0:\n            print (i)\n
###
1111
def even_numbers(n):\n    for i in range(1, 2*n+1):\n        if i % 2 == 0:\n            print(i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n         print(i*2+2)\n
###
1111
def even_numbers(n):\n    for n in range(2, (n*2)+2):\n        if n %2 ==0:\n    		print(n)\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n        print(i+i)\n
###
1111
def even_numbers(n):\n    for i in range(1,(n+1)*2):\n        if i % 2 == 0:\n            print(i)
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(i*2)\n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n        print(i*2)\n    \n
###
1111
def even_numbers(n):\n    for i in range(1,n+1):\n    	print(i*2)\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(2*i)\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(2*i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n     print(i*2+2)\n
###
1111
def even_numbers(n):\n	for i in range(1,n*2+1):\n		if i % 2 == 0:\n			print(i)\n
###
1111
def even_numbers(n):\n	for i in range(1,n*2+1):\n		if i%2 == 0:\n			print(i)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n           print((i+1)*2)\n
###
1111
def even_numbers(n):\n    for i in range(n):\n    	print((i+1)*2)\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(2*i)\n
###
1111
def even_numbers(n):\n    for i in range(1, n+1):\n        print(2*i)\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for s in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range (n):\n    	print("sob")\n    for i in range (n*2):\n    	print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(n*2):\n    	print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for x in range(n*2):\n    	print("los")
###
1111
def animals(n):\n    for i in range (n):\n        print("sob")\n    for j in range (n*2):\n        print("los")\n        
###
1111
def animals(n):\n    for i in range (n): print("sob")\n    for i in range (n):\n        print ("los")\n        print ("los")\n
###
1111
def animals(n):\n	for i in range(n):\n		print("sob")\n	for i in range(n*2):\n		print("los")
###
1111
def animals(n):\n   for x in range(n):\n       print("sob");\n\n   for x in range(n*2):\n       print("los");
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for _ in range(n):\n    	print("sob")\n    for _ in range(2*n):\n    	print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print('los')\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(2*n):\n        print("los")
###
1111
def animals(n):\n    i = 0\n    while i < n:\n        print("sob")\n        i += 1\n\n    i = 0\n\n    while i < (n * 2):\n        print("los")\n        i += 1\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for j in range(2*n):\n    	print("los")      \n
###
1111
def animals(n):\n    for i  in range(n):\n    	print("sob")\n    for j in range(2*n):\n        print ("los")\n
###
1111
def animals(n):\n    print("\n".join(["sob" for i in range(1,n*1+1) ]))\n    print("\n".join(["los" for i in range(1,n*2+1) ]))
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for j in range(n * 2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print('sob')\n    for j in range(n):\n        print('los')\n        print('los')\n\n
###
1111
def animals(n):\n	for i in range(n):\n		print("sob")\n	for j in range(n*2):\n		print("los")
###
1111
def animals(n):\n    for i in range (n):\n        print ("sob")\n    for i in range (2*n):\n        print ("los")
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for j in range(2*n):\n    	print("los")\n
###
1111
def animals(n):\n	for i in range(n):\n		print("sob")\n	for i in range(n*2):\n		print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(n*2):\n        print("los")\n  \n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range (n):\n    	print("sob")\n    for i in range (n*2):\n    	print ("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(n*2):\n    	print("los")\n
###
1111
def animals(n):\n    for i in range (n) :\n    	print("sob")\n    for i in range (n*2):\n        print ("los")\n    \n
###
1111
def animals(n):\n    for i in range(n):\n  	    print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(2*n):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(n*2):\n    	print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(n*2):\n    	print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(2*n):\n        print("los")\n
###
1111
def animals(n):\n    for i in range (n):\n        print("sob")\n    for i in range (n*2):\n    	print ("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(2*n):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for j in range(2*n):\n        print("los")\n            \n       \n        \n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n        print("los")\n        print("los")\n
def animals(n):\n    for i in range(n):\n        print("sob")\n    for j in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n	for i in range(n):\n    	print("sob")\n	for i in range(n*2):\n		print("los")\n
###
1111
def animals(n):\n    for word in range(n):\n        print("sob")\n        print(2*"los")\n    \n    
def animals(n):\n    for word in range(n):\n        print("sob")\n    for word in range(2*n):\n          print("los")\n        \n       
###
1111
def animals(n):\n    for i in range(1, n+1):\n        print("sob")\n    for j in range(1, 2*n+1):\n        print("los")
###
1111
def animals(n):\n    for i in range(1,n+1):\n    	print("sob")\n    for j in range(1,n*2+1):\n        print('los')\n
###
1111
def animals(n):\n    for i in range(1, n+1):\n        print("sob")\n    for j in range(1, 2*n+1):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n     print("sob")\n    for i in range(n*2):\n     print("los")\n
###
1111
def animals(n):\n	for i in range(n):\n		print("sob")\n	for i in range(n*2):\n		print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n):\n        print("los")\n        print("los")
###
1111
def animals(n):\n    for i in range(n):\n        print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n   		print("sob")\n    for i in range(n*2):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for j in range(2*n):\n        print("los")\n
###
1111
def animals(n):\n    for i in range(n):\n    	print("sob")\n    for i in range(2*n):\n		print("los")
###
1111
def factorial(n):\n    vysledek = 1\n    for i in range(2,n+1):\n        vysledek = vysledek*i\n    return vysledek\n
###
1111
def factorial(n):\n    r=1\n    for i in range(1,n):\n        r*=(i+1)\n    return r\n    \n
###
1111
def factorial(n):\n    l = 1\n    for i in range(1, n+1):\n        l = l*i \n    return l\n
###
1111
def factorial(n):\n    f = 1\n    for i in range(1,n+1): \n        f = f*i\n    \n    return (f)\n	\n
###
1111
def factorial(n):\n    fact = 1\n    for i in range(n):\n    	fact = fact*(i+1)\n    return fact\n
###
1111
import math\ndef factorial(n):\n    for i in range (1, n+1):\n    	return n * math.factorial(n-1)\n
###
1111
def factorial(n):\n    for x in range(n,n+1):\n        print(x)\n      
def factorial(n):\n    for x in range(n,n+1):\n        print(x)\n      
def factorial(n):\n    product = 1\n    for i in range(n):\n        product = product * (i+1)\n    print(product)\n
def factorial(n):\n    product = 1\n    for i in range(n):\n        product = product * (i+1)\n    print(product)\n
def factorial(n):\n    cislo = 1\n    for i in range(n):\n        cislo = cislo * (i+1)\n    return(cislo)\n
###
1111
def factorial(n):\n        for i in range (n): return(n*(n-1)*(n-i))\n    \n    \n    \n    \n        \n    \n
def factorial(n):\n    k=1\n    for i in range (n):\n    	k=k*(i+1)\n    print(k)\n \n\n \n    \n        \n    \n
def factorial(n):\n    k=1\n    for i in range (n):\n    	k=k*(i+1)\n    return(k)\n \n\n \n    \n        \n    \n
###
1111
def factorial(n):\n  f = 1\n  for i in range(2, n+1):\n      f *= i\n  return f\n
###
1111
def factorial(n):\n    temp = 1\n    for i in range(n):\n        temp *= (i+1)\n    return temp\n
###
1111
def factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n
###
1111
def factorial(n):\n    i = n\n    result = 1\n    while i > 0:\n        result *= i\n        i -= 1\n    return(result)\n
###
1111
def factorial(n):\n    factorial = 1\n    for i in range(1, n + 1):\n        factorial *= i\n    return factorial\n
###
1111
def factorial(n):\n    if n == 0:\n    	return 1\n    else:\n        return n * factorial(n-1)\n
###
1111
def factorial(n):\n    x=1\n    for i in range (1,n+1):\n		x=x*i\n    print(x)
def factorial(n):\n    x=1\n    for i in range (1,n+1):\n		x=x*i\n    print(x)
def factorial(n):\n    \n 
def factorial(n):\n    x=1\n    for i in range (1, n+1):\n        x=x*i\n    return(x)\n   
###
1111
def factorial(n):\n    x = 1\n    for i in range(n):\n        x = x * (i+1)\n    return x\n
###
1111
def factorial(n):\n    x=1\n    for i in range(n):\n        x=x*(i+1)\n    return(x)\n        \n
###
1111
def factorial(n):\n    x=1\n    for i in range(1,n+1):\n        x*=i\n    print(x)\n    \n
def factorial(n):\n	x=1\n	for i in range(1,n+1):\n		x*=i\n	return x
###
1111
import math\ndef factorial(n):\n   	print(math.factorial(n))
def factorial(n):\n    res = 1\n    for i in range(2, n + 1):\n        res *= i\n    return res
###
1111
def factorial(n):\n    if n==1:\n        return 1\n    else:\n        return n* factorial (n-1)
###
1111
def factorial(n):\n	fact = 1\n	for i in range(1,n+1):\n		fact = fact*i\n	return fact\n
###
1111
def factorial(n):\n    count = 1\n    for i in range(1,n+1):\n        count = count * i\n    print(count)
def factorial(n):\n    count = 1\n    for i in range(1,n+1):\n        count = count * i\n    return(count)
###
1111
def factorial(n):\n    sum = 0\n    for i in range (1,n+1):\n        sum+=i\n    return sum\n
def factorial(n):\n    sum = 1\n    for i in range (1,n+1):\n        sum*=i\n    return sum\n
###
1111
def factorial(n):\n    f = 1\n    for i in range (1, n+1):\n    	f = f * i\n    return f\n
###
1111
def factorial(n):\n    product=1\n    for i in range(n):\n        product=product*(i+1)\n    return product\n
###
1111
def factorial(n):\n	if n == 1:\n		return 1\n	else:\n		return n*factorial(n-1)
###
1111
def factorial(n):\n    temp=1\n    for i in range(n):\n        temp=temp*(n-i)\n        print(temp)\n    return temp\n
def factorial(n):\n    temp=1\n    for i in range(n):\n        temp=temp*(n-i)\n    return temp\n
###
1111
def factorial(n):\n    a=1\n    for i in range(n):\n        a=(i+1)*a\n    print(a)\n
def factorial(n):\n    a=1\n    for i in range(n):\n        a=(i+1)*a\n    return(a)
###
1111
def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)
###
1111
import math\ndef factorial(n): \n    return math.factorial(n)\n\n
###
1111
def factorial(n):\n    if n <= 0:\n        return 1\n    else:\n        f = 1\n        for i in range(n):\n            f = f*(i+1)\n        return f \n\n
###
1111
def factorial(n):\n   \n    num = 1\n    while n >= 1:\n        num = num * n\n        n = n - 1\n    return num\n   
###
1111
def factorial(n):\n    x = 1\n    for i in range(1,n+1):\n        x = x * (i)\n    print(x)
def factorial(n):\n    x = 1\n    for i in range(1,n+1):\n        x = x * i\n	print(x)
def factorial(n):\n    x = 1\n    for i in range(1,n+1):\n        x = x * i\n    return x
###
1111
def factorial(n):\n    sucin=1\n    for i in range(n):\n        sucin=sucin*(n-i)\n    print(sucin)\n
def factorial(n):\n    sucin=1\n    for i in range(n):\n        sucin=sucin*(n-i)\n    print(sucin)\n
def factorial(n):\n    sucin=1\n    for i in range(n):\n        sucin=sucin*(n-i)\n    print(sucin)\n
def factorial(n):\n    sucin=1\n    for i in range(n):\n        sucin=sucin*(n-i)\n    return(sucin)\n
###
1111
def factorial(n):\n    faktorial=1\n    for i in range(1, n+1):\n        faktorial=faktorial*i\n    print(faktorial)
def factorial(n):\n    faktorial=1\n    for i in range(1, n+1):\n        faktorial=faktorial*i\n    print(faktorial)\n    return 1
def factorial(n):\n    faktorial=1\n    for i in range(1, n+1):\n        faktorial=faktorial*i\n    print(faktorial)
def factorial(n):\n    f=1\n    for i in range(1, n+1):\n        f=f*i\n    return f\n
###
1111
def factorial(n):\n    f=1\n    for i in range(1, n+1):\n        f=f*i\n    return f\n
###
1111
def factorial(n):\n	x = 1\n	for i in range(1,n+1):\n		x = x * i\n	return x\n
###
1111
def factorial(n):\n    a=1\n    for i in range(n):\n        a = a*(i+1)\n    return a\n
###
1111
def factorial(n):\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n    return result\n
###
1111
def factorial(n):\n    for i in range(1,n+1):\n        x = i * i\n        y = x * i\n\n    print(y-n)
def factorial(n):\n    if n < 2:\n        return 1\n    return n * factorial(n - 1)
###
1111
def factorial(n):\n    if (n == 1):\n        return 1\n    return factorial(n-1)*n\n
###
1111
def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", 12-i)\n
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", n-i)\n
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", n-1-i)\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-1-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n - 1):\n        print(n, "=", i + 1, "+", (n-1) - i)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", n-i-1)\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", (n-i))\n
###
1111
def print_sums(n):\n    for i in range(n):\n        if i+1!=n:\n        	print(n, "=", i+1, "+", n-(i+1))
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1, n):\n        print(n, "=", i, "+", n - i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", 12-i)\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i)\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-1-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n+1):\n        print(n, "=", i, "+", n-i)\n
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i, "+", n-i)\n
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i, "+", n-i)\n
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", n-i-1)\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", (i + 1), "+", (n - i - 1))\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n+1):\n        print(n, "=", i, "+", n-i)\n
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", n-(i+1))\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-(i+1))\n
###
1111
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(1, n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i+1, "+", n-i-1)\n
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1, n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1, n):\n        print(n, "=", i, "+", n - i)\n
###
1111
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", i+1, "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(1, n+1):\n        print(n, "=", i, "+", n-i)\n
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n+1):\n        if n-i != 0:\n			print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n):\n        print(n, "=", i, "+",n- i)\n
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+",n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(n-1):\n        print(n, "=", (i+1), "+", n-i-1)\n
###
1111
def print_sums(n):\n    for i in range(1,n+1):\n        print(n, "=", i, "+", n-i)\n
def print_sums(n):\n    for i in range(1,n):\n        print(n, "=", i, "+", n-i)\n
###
1111
def print_sums(n):\n    for i in range(1,n):\n        n-=1\n        print(13, "=", i, "+", n)\n
def print_sums(n):\n    for i in range(1,n):\n        n-=1\n        print(i+n, "=", i, "+", n)\n
###
1111
def print_sums(n):\n    for i in range(1, n + 1):\n        print(n, "=", i, "+", n - i)\n
def print_sums(n):\n    for i in range(1, n):\n        print(n, "=", i, "+", n - i)\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+ 1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(i, end=" ")\n        print()\n
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j, end=" ")\n        print()\n
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j + 1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(1,i+2):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1, n + 1):\n        for j in range(1, i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(i, end=" ")\n        print()\n
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        x=0\n        for j in range(i):\n            x=x+1\n            print(x, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for i in range(i+1):\n            print(i+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(i + 1, end=" ")\n        print()\n
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            i = j + 1\n            print(i, end=" ")\n        print()\n
###
1111
def sequences(n):\n    counter=1\n    for i in range(n):\n        for j in range(i+1):\n            print(counter, end=" ")\n            counter=counter+1\n        counter=1\n        print()\n
###
1111
def sequences(n):\n    for i in range(n+1):\n        for j in range(i):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1, n + 1):\n        x = " "\n        for j in range(1, i + 1):\n            x += str(j) + " "\n        print(x)\n            \n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            print(j, end=" ")       \n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(0,n+1):\n        for j in range(i):\n            print(i, end=" ")\n        print()\n
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1, i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(n):\n        for j in range(i+1):\n            print(j+1, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1, n + 1):\n        for j in range(1, i + 1):\n            print(j, end=" ")\n        print()\n
###
1111
def sequences(n):\n    for i in range(1,n):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
def sequences(n):\n    for i in range(1,n+1):\n        for j in range(1,i+1):\n            print(j, end=" ")\n        print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n    		print("",i, end="")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n    		print("",i, end="")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(" ", end="")\n            print(i, end="")\n    \n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(" ", end="")\n            print(i, end="")\n    \n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if bool(i % 2):\n            print(i, end=" ")\n    print(" ")\n    for i in range(1, n+1):\n        if not(i % 2):\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 != 1:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 != 1:\n            print(i, end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(2, n+1):\n        if i % 2 == 0: \n            print(i, end=" ")\n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(2, n+1):\n        if i % 2 == 0: \n            print(i, end=" ")\n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n    print()
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n    print()
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n):\n        if i % 2 == 0:\n            print("",i, end="")\n
def odd_even(n):\n    for i in range(n):\n        if (i+1) % 2 != 0:\n            print(i+1, end=" ")\n    print()\n    for i in range(n):\n        if (i+1) % 2 == 0:\n            print("",i+1, end="")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n):\n        if i % 2 == 0:\n            print("",i, end="")\n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print("",i, end="")\n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n + 1, 2):\n        print(i, end=" ")\n    print()\n    print(" ", end="")\n    for i in range(2, n + 1, 2):\n        print(i, end=" ")\n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")            \n    print()\n    print(end=" ")\n    for i in range(1, n+1):	\n        if i % 2 == 0:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")            \n    print()\n    print(end=" ")\n    for i in range(1, n+1):	\n        if i % 2 == 0:\n            print(i, end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for k in range(1, n+1):\n        if k % 2 == 0:\n            print(k,end=" ")\n	
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for k in range(1, n+1):\n        if k % 2 == 0:\n            print(k,end=" ")\n	
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n\n	for j in range(1, n):\n        if i % 2 == 0:\n            print(j, end=' ')
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(' ')\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(' ')\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print('',i,end='')
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(' ')\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print('',i,end='')
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print();\n    print(end=" ");\n    for i in range(2, n + 2):\n        if i % 2 == 0:\n            print(i, end=" ")            \n    print()\n
def odd_even(n):\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print();\n    print(end=" ");\n    for i in range(2, n + 1):\n        if i % 2 == 0:\n            print(i, end=" ")            \n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for j in range(1,n+1):\n        if j%2==0:\n            print(j,end=" ")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for j in range(1,n+1):\n        if j%2==0:\n            print(j,end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range (1,n+1):\n        if i%2==0:\n            print ("",i,end="")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range (1,n+1):\n        if i%2==0:\n            print ("",i,end="")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(2, n):\n    	if i % 2==0:\n            print(" ", i, end="")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n):\n    	if i % 2==0:\n            print("", i, end="")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n):\n    	if i % 2==0:\n        	print("", i, end="")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(2, n):\n    	if i % 2==0:\n        	print("", i, end="")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(2, n+1):\n        if i % 2 == 0:\n            print("", i, end="")
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(" ")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print( i, end=" ")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(" ")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print( i, end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(" ", end="")\n    for i in range(1, n):\n        if i % 2 == 0:\n            print(i, end=" ")
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(" ", end="")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(" ")\n    print(" ", end="")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print(" ")\n    print(" ", end="")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print("\n ", end="")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print("\n ", end="")\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1, n):\n        if i % 2 == 0:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print("\n ", end = "")\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print("\n ", end = "")\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i+1, end=" ")\n    print()\n
def odd_even(n):\n    for i in range(n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(end=" ")\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i+1, end=" ")\n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1,n+1):\n        if i % 2 == 0:\n            print("", i, end= "")\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    for i in range(1,n+1):\n        if i % 2 == 0:\n            print("", i, end= "")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n        else i%2 == 0:\n            print(i,end=" ")\n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()   \n    \n    for k in range(1,n+1):\n        if k%2==0:\n        	print(k,end=" ")\n        
###
1111
def odd_even(n):\n	for i in range(1,n+1):\n		if i % 2 == 1:\n			print(i, end= " ")\n	print()\n	for i in range(1,n+1):\n		if i % 2 == 0:\n			print("",i, end="")\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print("") \n    for i in range(1, n):\n        if i % 2 == 0:\n            print(i, end=" ")\n       \n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if (i) % 2 == 1:\n            print(i, end=" ")\n    print("") \n    for i in range(1, n):\n        if i % 2 == 0:\n            print(i, end=" ")\n       \n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if (i) % 2 == 1:\n            print(i, end=" ")\n    print("") \n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n       \n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(' ',end='')\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n    print()\n
def odd_even(n):\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(' ',end='')\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i, end=" ")\n    print()\n
###
1111
def odd_even(n):\n    for i in range(1, n):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(" ", end="")\n    for i in range(2, n + 1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
def odd_even(n):\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            print(i, end=" ")\n    print()\n    print(" ", end="")\n    for i in range(2, n + 1):\n        if i % 2 == 0:\n            print(i, end=" ")\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1) * (col+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(n):\n            print(row + col*row, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1) * (col+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n+1):\n        for col in range(1, n + 1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row*col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1) * (col+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def multip(n):\n    for j in range(n):\n    \n        for i in range(n):\n            num=(j+1)*(i+1)\n            print(str(num).rjust(3), end=" ")\n\n        print()    	
def products(n):\n    for j in range(n):\n    \n        for i in range(n):\n            num=(j+1)*(i+1)\n            print(str(num).rjust(3), end=" ")\n\n        print()    	
def products(n):\n    for j in range(n):\n    \n        for i in range(n):\n            num=(j+1)*(i+1)\n            print(str(num), end=" ")\n\n        print()    	
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row + 1) * (col + 1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print(row+1 + col*(row+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print(row+1+ col*(row+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1)*(col+1) , end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1)*(col+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1) * (col+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n+1):\n        for col in range(1, n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n + 1):\n        for col in range(1, n + 1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print(row + col +1, end=" ")\n        print()\n
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((col +1)*(row+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n+1):\n        for col in range(1, n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n+1):\n        for col in range(1, n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(n):\n        for col in range(n):\n            print((row+1) * (col+1), end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row*col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row*col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            print(row * col, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n + 1):\n        for col in range(1, n + 1):\n            print(col * row, end=" ")\n        print()\n
###
1111
def products(n):\n    for row in range(1, n+1):\n        for col in range(1, n+1):\n            print(row*col, end=" ")\n        print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n+1):\n        print("*", end="")\n        if i % 5 == 0 and i!=0:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if not((i+1) % 5):\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i == 5:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i+1 == 5:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(1,n):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print("|")\n
def stars(n):\n    for i in range(1,n):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print("|")\n
def stars(n):\n    for i in range(1,n):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(1,n):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i%5 == 4:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i%5 == 4:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i == 4 or i==9:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i == 4 or i==9 or i==14:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        for k in range (n):\n        	if (i+1) == 5*(k+1):\n            	print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i+1) % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i%5 == 0) and (i!=0):\n           	print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if(i == 4):\n        	print("|", end="")\n        if ((i-4)%5 == 0) and (i>5):\n           	print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1, n + 1):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        if i == 0:\n			None            	\n        elif i % 5 == 0:\n            print("|", end="")\n        print("*", end="")\n        \n        \n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i %5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5 == 0 and i > 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if ((i+1)%5) == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i + 1) % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i % 5 ==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i == 5:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i%5==0:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i%5==0:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i-4)%5==0 and not i==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i%5==4: \n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1, n+1):\n        print("*", end="")\n        if i == 5:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(1, n+1):\n        print("*", end="")\n        if i%5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i+1)%5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if ((i+1) % 5 == 0):\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i-4)%5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i != 1 and (i + 1) % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if ((i+1)%5==0):\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1, n+1):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i == 4:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(1, 1+n):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if i == 4:\n            print("|", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        if (i+1) %5==0:\n            print("|", end="")\n        else:\n            print("*", end="")\n    print()\n
def stars(n):\n    for i in range(n+2):\n        if (i+1) %6==0:\n            print("|", end="")\n        else:\n            print("*", end="")\n    print()\n
def stars(n):\n    for i in range(n+1):\n        if (i+1) %6==0:\n            print("|", end="")\n        else:\n            print("*", end="")\n    print()\n
def stars(n):\n    for i in range(n+1):\n        if (i+1) %6==0:\n            print("|", end="")\n        else:\n            print("*", end="")\n    print()\n
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i+1) %5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i % 5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(n):\n        print("*", end="")\n        if (i+1) % 5 ==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i % 5 ==0 and i>1 :\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1,n+1):\n        print("*", end="")\n        if i%5==0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1, n + 1):\n        print("*", end="")\n        if i % 5 == 0 and i != 0:\n            print("|", end="")\n    print()\n
###
1111
def stars(n):\n    for i in range(1, n+1):\n        print("*", end="")\n        if i%5 == 0:\n            print("|", end="")\n    print()\n
###
1111
def square(n):\n    for k in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print ("")\n
###
1111
def square(n):\n    for i in range(n):\n   		for i in range(n):\n        	print("#", end=" ")\n
def square(n):\n    for x in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n            print()\n        
###
1111
def square(n):\n    for i in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for j in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range (n):\n        	print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        for i in range(n):\n         print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n        print("\n")\n \n
def square(n):\n	for i in range(n):\n		for j in range(n):\n			print("#", end=" ")\n		print("\n", end = "")\n \n
###
1111
def square(n):\n    for i in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print();
###
1111
def square(n):\n    l = '{}'.format('# ') * n\n    for i in range(n):\n        print(l)\n\n
###
1111
def square(n):\n    for i in range(n):\n    	for j in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n    	for i in range(n):\n        	print("#", end = " ")\n    	print()\n
###
1111
def square(n):\n    for j in range(n):\n    	for i in range(n):\n       		print("#", end=" ")\n            print()\n
###
1111
def square(n):\n    for j in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for k in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        print(n*"# ",)\n    print()\n
###
1111
def square(n):\n    for j in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):	\n    for i in range(n):	\n        print()\n        for i in range(n):\n    		 		\n           	print("#", end=" ")\n        	\n    print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range (n):\n        	print("#", end=" ")\n        print("", end="\n")\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n        print("", end="\n")\n    	\n\n
###
1111
def square(n):\n    for j in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n   		print()\n
def square(n):\n    for j in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n            \n        	print("#", end=" ")\n        print()\n    print()\n
###
1111
def square(n):\n    for j in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for x in range(n):\n        for i in range(n):\n        	print("#", end=" ")\n        print()\n\n
###
1111
def square(n):\n    for i in range(n):\n        print("# " * n)\n    print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n	print()\n
###
1111
def square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n
def square(n):\n    for i in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        print("# "*n)\n    print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print('#', end=' ')\n        print()
###
1111
def square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n):\n    	print("#", end=" ")\n
def square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n - 1):\n        print("#"" " * n)\n
###
1111
def square(n):\n    for i in range(n):\n        print("# # # # #")\n    print()\n
def square(n):\n    for i in range(n):\n        print(n*" # ")\n    print()\n
def square(n):\n    for i in range(n):\n        print(n*"# ")\n    print()\n
###
1111
def square(n):\n    for i in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n	print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n    	print()\n
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print("#", end=" ")\n        print()
###
1111
def square(n):\n    for i in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        for i in range(n):\n       		print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for j in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        print("# # # # #")\n    print()\n
def square(n):\n    for i in range(n):\n        print("# "*n)\n    print()\n
###
1111
def square(n):\n    for i in range(n):\n   		for j in range(n):\n            print("#", end=" ")\n    	print()\n
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for y in range(n):\n        for x in range(n):\n			print("# ",end="")\n        \n        print()\n\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for j in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for j in range(n):\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n        	print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n
def square(n):\n    for i in range(n):\n        for i in range(n):\n        	print("#", end=" ")\n        print("")
###
1111
def square(n):\n    for i in range(n):\n        for i in range(n):\n        	print("#", end=" ")\n    print()\n
def square(n):\n    for i in range(n):\n        for i in range(n):\n        	print("#", end=" ")\n	print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print("#",end=' ')\n        print()\n 
###
1111
def square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n
def square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print("#", end=" ")\n
def square(n):\n    for i in range(n):\n        print(n*"#", end = " ")\n        print()\n
def square(n):\n    for i in range(n):\n        print(n*"# ", end = " ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        print(n*"# ", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        for j in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for j in range(n):\n        for i in range(n):\n            print("#", end=" ")\n        print()\n
###
1111
def square(n):\n    for i in range(n):\n        \n        for j in range(n):          \n        	print("#", end=" ")\n        print("")\n            \n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i == 0 or i == n-1:\n            	print("#", end=" ")\n            elif j == 0 or j == n-1:\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()\n
###
1111
def empty_square(n):\n    for row in range(1,n+1):\n        for col in range(1,n+1):\n            if row==1 or row==n:\n                print("#", end=" ")\n            elif col==1 or col==n:\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i==0 or i==n-1 or j==0 or j==n-1:\n            	print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()\n        \n
###
1111
def empty_square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for j in range(n-2):\n        print("#" + (n+2)*" " + "#", end= "\n")\n    for k in range(n):\n        print("#", end=" ")           \n    print()
def empty_square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for j in range(n-2):\n        print("# " + (n-2)*". " + "#", end= " ")\n        print()\n    for k in range(n):\n        print("#", end=" ")           \n    print()\n
def empty_square(n):\n    if n != 1:\n        for i in range(n):\n            print("#", end=" ")\n        print()\n        for j in range(n-2):\n            print("# " + (n-2)*". " + "#", end= " ")\n            print()\n        for k in range(n):\n            print("#", end=" ")\n        print()\n    else:\n        print("#")\n
###
1111
def empty_square(n):\n    for j in range(n):\n        for i in range(n):\n            if j==0 or j==(n-1) or i==0 or i==(n-1):\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()	\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range (n):\n        	if i==0 or i==n-1 or j==0 or j==n-1:\n            	print("#", end=" ")\n                else: print(".", end=" ")          \n	print()	\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i>0 and i != n-1:\n                if j>0 and j !=n-1:\n        			print(".", end=" ")\n                else:\n                    print("#", end=" ")\n            else:\n				print("#", end=" ")   \n	print()	\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if (i == 0 or i == n-1) or (j == 0 or j == n-1):\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()
###
1111
def empty_square(n):\n    for i in range(n):\n        if i == 0 || i == n-1:\n        	full_row(n)\n        else:\n        	dot_row(n)\n    \ndef full_row(n):\n    for i in range(n):\n    	print("#", end=" ")\n    print()\n    \ndef dot_row(n):\n    for i in range(n):\n        if i == 0 || i == n-1:\n        	print("#", end=" ")\n        else:\n        	print(".", end=" ")\n    print()
def empty_square(n):\n    for i in range(n):\n        if i == 0 or i == n-1:\n        	full_row(n)\n        else:\n        	dot_row(n)\n    \ndef full_row(n):\n    for i in range(n):\n    	print("#", end=" ")\n    print()\n    \ndef dot_row(n):\n    for i in range(n):\n        if i == 0 or i == n-1:\n        	print("#", end=" ")\n        else:\n        	print(".", end=" ")\n    print()
###
1111
def line(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\ndef dotted_line(n):\n    print("#", end="")\n    print((n-2)*" .", end=" ")\n    print("#")\ndef empty_square(n):\n    line(n)\n    for i in range(n-2):\n        dotted_line(n)\n    line(n)\n
def line(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\ndef dotted_line(n):\n    print("#", end="")\n    print((n-2)*" .", end=" ")\n    print("#")\ndef empty_square(n):\n    if n == 1:\n        print("#")\n    else:\n    	line(n)\n    	for i in range(n-2):\n        	dotted_line(n)\n    	line(n)\n
###
1111
def empty_square(n):\n    for j in range(1,n+1):\n        if j==1 or j==n:\n            for i in range(n):\n                print("#", end=" ")\n            print()	\n        else: \n            for k in range(1,n+1):\n                if k==1 or k==n:\n                    print("#", end=" ")\n                else: print(".", end=" ")\n            print()
###
1111
def empty_square(n):\n    for i in range(n):\n        if (i==0 or i==n-1):\n			for j in range(n):\n				print("#",end=" ")\n        else: \n            print("#", end=" ")\n            for j in range(n-2):\n                print(".",end=" ")\n            print("#", end=" ")\n	print()
###
1111
def empty_square(n):\n    for i in range (n):\n    	for j in range (n):\n        	if i == 0:\n            	print("#", end=" ")\n        	if i == (n-1):\n            	print("#", end=" ")\n        	if (0<i<(n-1)) and (j == 0):\n            	print("#", end=" ")\n        	if (0<i<(n-1)) and (j == (n-1)):\n            	print("#", end=" ")\n        	if (0<i<(n-1)) and (0<j<(n-1)):\n            	print(".", end=" ")\n\n    	print()	\n
def empty_square(n):\n    if n == 1:\n        print("#")\n    else:    \n        for i in range (n):\n    		for j in range (n):\n        		if i == 0:\n            		print("#", end=" ")\n        		if i == (n-1):\n            		print("#", end=" ")\n        		if (0<i<(n-1)) and (j == 0):\n            		print("#", end=" ")\n        		if (0<i<(n-1)) and (j == (n-1)):\n            		print("#", end=" ")\n        		if (0<i<(n-1)) and (0<j<(n-1)):\n            		print(".", end=" ")\n\n    		print()	\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i==0 or j==0 or i==n-1 or j==n-1:\n        		print("#", end=" ")\n            else:\n                print(".", end=" ")\n	print()	\n
###
1111
def empty_square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n-2):\n        print("#" , end=" ")\n        for i in range(n-2):\n            print("." , end=" ")\n        print("#")\n    for i in range(n):\n        print("#", end=" ")\n
def empty_square(n):\n    for i in range(n):\n        print("#", end=" ")\n    print()\n    for i in range(n-2):\n        print("#" , end=" ")\n        for i in range(n-2):\n            print("." , end=" ")\n        print("#")\n    for i in range(n):\n        print("#", end=" ")\n
def empty_square(n):\n    if n==1:\n        print("#")\n    else:\n    	for i in range(n):\n        	print("#", end=" ")\n    	print()\n    	for i in range(n-2):\n        	print("#" , end=" ")\n        	for i in range(n-2):\n            	print("." , end=" ")\n        	print("#")\n    	for i in range(n):\n        	print("#", end=" ")\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i == 0 or j == 0 or i == (n-1) or j == (n-1):\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()\n
###
1111
def empty_square(n):\n	for i in range(n):\n		if i == 0 or i == n-1:\n			for j in range(n):\n				print("#", end=" ")\n			\n		else:\n			for j in range(n):\n				if j == 0 or j == n-1:\n					print("#", end=" ")\n				else:\n					print(".", end=" ")\n		print()	
###
1111
def empty_square(n):\n    print("# " * n)\n    for i in range(n - 2):\n        empty = " ."\n        print("#" + empty * (n - 2) + " #")\n    print("# " * n)\n    print()	\n
def empty_square(n):\n    print("# " * n)\n    for i in range(n - 2):\n        empty = " ."\n        print("#" + empty * (n - 2) + " #")\n    print("# " * n)\n    print()	\n
def empty_square(n):\n    print("# " * n)\n    for i in range(n - 2):\n        empty = " ."\n        print("#" + empty * (n - 2) + " #")\n    #print("# " * n)\n    print()	\n
def empty_square(n):\n    print("# " * n)\n    for i in range(n - 2):\n        empty = " ."\n        print("#" + empty * (n - 2) + " #")\n    print("# " * n)\n    print()	\n
def empty_square(n):\n    if n > 1:\n        print("# " * n)\n        for i in range(n - 2):\n            empty = " ."\n            print("#" + empty * (n - 2) + " #")\n        print("# " * n)\n        print()	\n    else:\n        print("#")\n\n
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i == 0 or i == n-1:\n                print('#',end=' ')\n            elif j== 0 or j == n-1:\n                print('#',end=' ')\n            else:\n                print('.',end=' ')\n        print()\n
###
1111
\ndef empty_square(n):\n    for row in range(n):\n        for col in range(n):\n            if 0<row<n-1 and 0<col<n-1:\n                print('.',end=" ")\n            else:\n                print("#",end=" ")\n\n        print()
###
1111
def empty_square(n):\n    for i in range(n):\n        for j in range(n):\n            if i == 0 or j == 0 or i == (n-1) or j == (n-1):\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n        print()	\n
###
1111
def empty_square(n):\n    for i in range(n):\n        print("")\n\n        for j in range(n):\n            if i == 0 or i == n - 1 or j == 0 or j == n - 1   :\n                print("#", end=" ")\n            else:\n                print(". ", end="")\n    \n    	\n
###
1111
def make_fancy(text, n):\n    delka = len(text)\n    index = 0\n    mezera = 0\n    while index < delka:\n        print (" " * (mezera), end = "")\n        for i in range(n):\n          print (text[index], end = " ")\n        print()\n        mezera = mezera + 1\n        index = index + 1
###
1111
def make_fancy(text, n):\n    for i,a in enumerate(text):\n    	print(" "*i, (a+" ")*n)\n
###
1111
def make_fancy(text, n):\n    for i, letter in enumerate(text):\n        print(" "*i + letter + (" "+letter)*(n-1))\n
###
1111
def make_fancy(text, n):\n	for i in range(len(text)):\n		print(i*" "+n*(text[i]+" "))\n
###
1111
def make_fancy(text, n):\n    for i, letter in enumerate(text):\n    	print(" "*i + text[i] + (" "+text[i])*(n-1))\n
###
1111
def make_fancy(text, n):\n    for i in range (len(text)):\n        print(i*" ",end="")\n        print (n*(text[i]+" "))\n
###
1111
def pyramid(n):\n    for i in range(1,n*2,2):\n    	print(" "*(n-i+4), end=" ")\n    	for j in range(i):\n    		print("#", end=" ")\n    	print()	\n
###
1111
def pyramid(n):\n    for i in range(0,n):\n        for j in range(0,n-i-1):\n            print(" ",end=" ")\n        for j in range(0,2*i+1):\n            print("#", end=" ")\n        print()\n
###
1111
def pyramid(n):\n    for i in range(n):\n        for j in range(n-i-1):\n            print(" ", end = " ")\n        for k in range(i*2+1):\n            print("#", end=" ")\n        print()\n
###
1111
def pyramid(n):\n        for q in range(n):\n            print((n-q)*"  ", (2*q-1)*"# ", (n-q)*"  ", end = "\n")\n        print(""+(2*n -1)*" #")
###
1111
def pyramid(n):\n    a=n-1\n    b=n-1\n    for j in range(n):\n        for i in range(2*n-1):\n            if a<=i<=b:\n                print("#", end=" ")\n            else:\n                print(" ", end=" ")\n        a=a-1\n        b=b+1\n        print()	\n
###
1111
def pyramid(n):\n    for i in range(1,n+1):\n        print((n-i)*" ",(2*i-1)*"#"," ")\n\n
def pyramid(n):\n    for i in range(1,n+1):\n        print((2*n-2*i)*" ",(2*i-1)*" #")\n\n
###
1111
def pyramid(n):\n    x=0\n    for i in range(n):\n        for j in range(2*n-1):\n            if j>=(n-x-1) and j<=(n+x-1):\n                print("#", end=" ")\n            else:\n                print(" ", end=" ")        	\n        print("\n",end="")\n        x=x+1\n    print()	\n
###
1111
def pyramid(n):\n    for i in range(n):\n        row(n, n-i-1)\n        print()\n\ndef row(height, floor):\n    lenght = height*2 - 1\n    for i in range(lenght):\n        if i < (floor) or i >= (lenght - floor):\n            print(" ", end = " ")\n        else:\n    		print("#", end= " ")	
###
1111
def firstLine(n):\n    print(2*(n-1)*" ", end="")\n    print("#", end="")\n    print(2*(n-1)*" ", end="")\n    print()\n\ndef pyramid(n):\n    firstLine(n)\n    for i in range(1,n):\n        print((n-1-i)*"  ", end="")\n        print((2*i+1)*"# ", end=" ")\n        print((n-1-i)*"  ", end="")\n        print()\n
###
1111
def pyramid(n):\n    h=1\n    #řadky\n    for i in range (1,n+1):\n        #mezery\n        for j in range (n-i):\n            print(" ", end=" ",)\n            \n        #hashe\n        \n        for k in range(1,h+1):\n            print ("#", end=" ")\n        h+=2  \n        print()\n            
###
1111
def pyramid(n):\n    x=n\n    y=1\n    for i in range(n):\n        for i in range(x-1):\n            print(" ",end=" ")\n        for i in range(y):\n            print("#",end=" ")\n        for i in range(x-1):\n            print(" ",end=" ")\n        print()\n        x-=1\n        y+=2\n
###
1111
def pyramid(n):\n    s=1\n    p=n*2\n    for i in range(n):\n        print(" "*(p//2) , end="")\n        print("#"*s)\n        s+=2\n        p-=2
def pyramid(n):\n    s=1\n    q=n\n    p=n*2\n    for i in range(n):\n        print(" "*(p//2) ," "*q , end="")\n        print("# "*s)\n        s+=2\n        p-=2\n        q-=1
###
1111
def pyramid(n):\n    for i in range(1, n+1):\n        for j in range(n-i):\n        	print(" ", end=" ")\n        print("# "*(i*2-1))\n    print()	\n
###
1111
def pyramid(n):\n	for i in range(n):\n		for j in range(n*2-1):\n			if (j+1 <= (n+(i)) and j+1 >= (n-(i))):\n				print("#", end=" ")\n			else:\n				print(' ', end=' ')\n		print()
###
1111
def pyramid(n):\n    n1=1\n    n2=1\n    n3=1\n    for x in range(n):\n        for z in range(n-n1):\n            print(" ",end=" ")\n        for e in range(n2):\n            print("#",end=" ")\n        for a in range(n-n3):\n            print(" ",end=" ")\n            \n        n1+=1\n        n3+=1\n        n2+=2\n        print()
###
1111
def pyramid(n):\n    for i in range(n):\n        for j in range(2*(n+2) - 1 + i-1):\n            if i + j > 2 * n:\n                print("#", end=" ")\n            else:\n                print(" ", end=" ")\n        print()\n
###
1111
def pyramid(n):\n    hashtag='#'\n    for i in range(n):\n        print((n-i-1)*(' ')+hashtag*((i*2)+1),end='')\n        print()\n
def pyramid(n):\n    for i in range(1,n+1):\n        print(' '*(n-i)*2,end='')\n        print('# '*(i+(i-1)), end='    ')\n        print()\n
###
1111
def chessboard(n):\n    for i in range(n):\n    	for j in range(n):\n        	if i%2==0 and j%2==0 or i%2!=0 and j%2!=0:\n            	print("#", end=" ")\n        	else:\n           		print(".", end=" ")\n    	print()\n
###
1111
def chessboard(n):\n    for j in range(n):\n        for i in range(n):\n            if not(j%2):\n                if not(i%2):\n                    print("#", end=" ")\n                else:\n                    print(".", end=" ")\n            else:\n                if (i%2):\n                    print("#", end=" ")\n                else:\n                    print(".", end=" ")\n        print()\n
###
1111
def chessboard(n):\n    for i in range(n):\n        for j in range(n):\n            if (i+j)%2==0: print("#", end=" ")\n            else: print(".", end=" ")\n	print()\n
###
1111
def chessboard(n):\n    for i in range(n):\n        for j in range(n):\n        	\n            if i%2 == 0:\n                if j%2 == 0:\n                	print("#", end=" ")\n                else:\n                    print(".", end=" ")\n            else:\n                if j%2 == 0:\n                	print(".", end=" ")\n                else:\n                    print("#", end=" ")\n        print("\n", end="")\n    print()\n
###
1111
def chessboard(n):\n    for i in range(n):\n        for j in range(n):\n            field(i, j)\n        print()\n\ndef field(i, j):\n    if (i + j) % 2 == 0:\n        print("#", end=" ")\n    else:\n    	print(".", end=" ")
###
1111
def chessboard(n):\n    for i in range(n):\n        if i % 2 == 0:\n            for j in range(n):\n                if j%2==0:\n                    print("#",end=" ")\n                else:\n                    print(".",end=" ")\n            print()\n        else:\n            for j in range(n):\n                if j%2==0:\n                    print(".",end=" ")\n                else:\n                    print("#",end=" ")\n            print()\n    print()\n
###
1111
\ndef chessboard(n):\n    for i in range(1,n+1):\n        if i%2!=0:\n            for j in range(1,n+1):\n                if j%2!=0:\n                    print("#", end=" ")\n                else: print(".", end=" ")\n            print()\n        else: \n            for k in range(1,n+1):\n                if k%2!=0:\n                    print(".", end=" ")\n                else: print("#", end=" ")\n            print ()
###
1111
def chessboard(n):\n    d=0\n    for i in range(n):\n        for j in range(n):\n            if d%2==0:\n        		print("#", end=" ")\n            else:\n                print(".",end=" ")\n            d+=1\n        d+=1\n	print()\n
def chessboard(n):\n    d=0\n    for i in range(n):\n        for j in range(n):\n            if d%2==0:\n        		print("#", end=" ")\n            else:\n                print(".",end=" ")\n            d+=1\n        d+=1\n	print()\n
def chessboard(n):\n    d=0\n    for i in range(n):\n        for j in range(n):\n            if d%2==0:\n        		print("#", end=" ")\n            else:\n                print(".",end=" ")\n            d+=1\n	print()\n
def chessboard(n):\n    d=0\n    for i in range(n):\n        for j in range(n):\n            if d%2==0:\n        		print("#", end=" ")\n            else:\n                print(".",end=" ")\n            d+=1\n        d+=1\n	print()\n
def chessboard(n):\n    d=0\n    for i in range(n):\n        for j in range(n):\n            if d%2==0:\n        		print("#", end=" ")\n            else:\n                print(".",end=" ")\n            d+=1\n        if(d%2==0):\n            d=0\n        if(d%2==1):\n            d=1\n	print()\n
def chessboard(n):\n    d=0\n    for i in range(n):\n        if(i%2==0):\n            d=0\n        else: d=1\n        for j in range(n):\n            if(d%2==0):\n                print("#", end=" ")\n                d+=1\n            else: \n                print(".", end=" ")\n                d+=1\n        print()\n
###
1111
def chessboard(n):\n    a=1\n    for i in range(n):\n        for j in range(n):\n            operator= a%2==0\n            if operator ==False:\n                print("#",end=" ")\n                a+=1\n            elif operator==True:\n                print("." , end=" ")\n                a+=1\n        if n%2==0:\n            a+=1\n        print()\n
###
1111
def chessboard(n):\n    for i in range(n):\n		for j in range(n):\n			if ((i*n)+j)%2 == i%2:\n				print("#", end=" ")\n			else:\n				print(".", end=" ")\n		print()\n
def chessboard(n):\n    for i in range(n):\n		for j in range(n):\n			if j%2 == i%2:\n				print("#", end=" ")\n			else:\n				print(".", end=" ")\n		print()\n
###
1111
def line_odd(n):\n	for k in range(n//2):\n		print('#', end=' ')\n		print('.', end=' ')\n	if n%2 == 1:\n		print('#', end=' ')\n	print()\ndef line_even(n):\n    for l in range(n//2):\n        print('.', end=' ')\n        print('#', end=' ')\n    if n%2 == 1:\n        print('.', end=' ')\n    print()\ndef chessboard(n):\n    for i in range(n//2):\n        line_odd(n)\n        line_even(n)\n    if n%2 == 1:\n        line_odd
def line_odd(n):\n	for k in range(n//2):\n		print('#', end=' ')\n		print('.', end=' ')\n	if n%2 == 1:\n		print('#', end=' ')\n	print()\ndef line_even(n):\n    for l in range(n//2):\n        print('.', end=' ')\n        print('#', end=' ')\n    if n%2 == 1:\n        print('.', end=' ')\n    print()\ndef chessboard(n):\n    for i in range(n//2):\n        line_odd(n)\n        line_even(n)\n    if n%2 == 1:\n        line_odd(n)
###
1111
def chessboard(n):\n    striedanie=1\n    for x in range(n):\n        if(x%2!=0):\n            striedanie=0\n        else:\n            striedanie=1\n        for y in range(n):\n            if(striedanie==1):\n                print("#",end=" ")\n                striedanie=0\n            else:\n                print(".",end=" ")\n                striedanie=1\n        print("\t")
###
1111
def chessboard(n):\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            if i%2==0:\n                if j%2 == 0:\n                    print('#',end=' ')\n                else:\n                    print('.',end=' ')\n            else:\n                if j%2 == 0:\n                    print('.',end=' ')\n                else:\n                    print('#',end=' ')\n        print()
###
1111
def chessboard(side):\n    for row in range(1,side+1):\n        for col in range(1,side+1):\n      \n            if (row%2==0 and col%2==0) or ( row%2==1 and col%2==1):\n                print('#', end=' ')\n            else:\n                print('.', end=' ')\n        print()\n
###
1111
def chessboard(n):\n    pom = 1\n    for i in range(n):\n        for j in range(n):\n            if pom % 2 == 1:\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n            pom += 1\n        pom += 1\n        print()\n
def chessboard(n):\n    pom = 1\n    for i in range(n):\n        for j in range(n):\n            if pom % 2 == 1:\n                print("#", end=" ")\n            else:\n                print(".", end=" ")\n            pom += 1\n        if n % 2 == 0:    \n            pom += 1\n        else:\n            pom = pom\n        print()\n
###
1111
def chessboard(n):\n    for i in range(1,n+1):\n        print("")\n        for j in range(1,n+1):\n            if ((i+1)%2==1 or (j+1)%2==0) and ((i+2)%2==1 or (j+2)%2==0):\n                print("#", end=" ")\n            \n            else:\n                print(".", end=" ")\n  \n
###
1111
def bigX(n):\n    for row in range(1,n*2):\n        for col in range(1,n*2):\n            if col-row==0 or row+col==10:\n                print("*", end=" ")\n            else:\n                print(" ", end=" ")\n        print()\n
def bigX(n):\n    for row in range(1,n*2):\n        for col in range(1,n*2):\n            if col-row==0 or row+col==n*2:\n                print("*", end=" ")\n            else:\n                print(" ", end=" ")\n        print()\n
def bigX(n):\n    for row in range(1,n*2):\n        for col in range(1,n*2):\n            if col-row==0 or row+col==n*2:\n                print("#", end=" ")\n            else:\n                print(" ", end=" ")\n        print()\n
###
1111
def bigX(n):\n    a=0\n    b=2*n-1\n    for i in range(2*n-1):\n        for j in range(2*n-1):\n            if (a==b) and a==j:\n            	print("#", end=" ")\n            else:\n                if (j==a) or (j==b):\n                    print("#", end=" ")\n                else:\n                    print(" ", end=" ")\n        a=a+1\n        b=b-1\n        print()\n
def bigX(n):\n    a=0\n    b=2*n-2\n    for i in range(2*n-1):\n        for j in range(2*n-1):\n            if (a==b) and a==j:\n            	print("#", end=" ")\n            else:\n                if (j==a) or (j==b):\n                    print("#", end=" ")\n                else:\n                    print(" ", end=" ")\n        a=a+1\n        b=b-1\n        print()\n
###
1111
def bigX(n):\n    for i in range (n-1):\n		print(2*i*" "+"#"+(4*n-4*i-5)*" "+"#")\n    for i in range (1):\n		print((2*n-2)*" "+"#")	\n    for i in range (n-1):\n		print((2*n-2*i-5)*" ","#",(4*i+1)*" ","#")
###
1111
def bigX(n):\n    pass\n
def bigX(side):\n    for row in range(1,2*(side)):\n        for col in range(1,2*(side)):\n            if ((row==1 or row==side+1) and (col==1 or col==side+1)) or (row==side+1//2 and col==side+1//2):\n        		print("#",end='')\n            else:\n                print(" ",end='')\n        print()\n            \n          \n    	\n
def bigX(side):\n    for row in range(1,2*(side)):\n        for col in range(1,2*(side)):\n            if row==col or   row==(2*side)-col:\n                print('#',end=' ')\n            else:\n                print(' ',end=' ')\n        print()\n
###
1111
def queen(x, y):\n    for rows in range(1,9):\n        for cols in range(1,9):\n            if cols==x and rows==y:\n                print("D",end="")\n            elif cols==x or rows==y:\n                print("*",end="")\n            elif cols-rows==x-y or cols+rows==x+y:\n                print("*",end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def queen(x, y):\n\n    for i in range(1,9):\n        for j in range (1,9):\n            if i==y and j==x:\n                print("D",end="")\n            elif i==y and j!=x:\n                print("*",end="")\n            elif j==x and i!=y:\n                print ("*",end="")\n            elif i-y==j-x:\n                print ("*",end="")\n            elif i-y==x-j:\n                print("*",end="")\n                \n            else:print (".",end="")\n        print()\n
###
1111
def bigN(n):\n    for rows in range(1,n+1):\n        for cols in range(1,n+3):\n            if cols-rows==1:\n                print("\\",end="")\n            elif cols==1 or cols==n+2:\n                print("|",end="")\n            else:\n                print(" ",end="")\n        print()\n
###
1111
def bigN(n):\n    prvni_retezec = ""\n    druhy_retezec = " "*n\n    for i in range(n):\n        retezec = "|{0}\\{1}|".format(prvni_retezec, druhy_retezec)\n        prvni_retezec=prvni_retezec+" "\n        druhy_retezec=druhy_retezec[:-1]\n        print(retezec)\n
def bigN(n):\n    prvni_retezec = ""\n    druhy_retezec = " "*(n-1)\n    for i in range(n):\n        retezec = "|{0}\\{1}|".format(prvni_retezec, druhy_retezec)\n        prvni_retezec=prvni_retezec+" "\n        druhy_retezec=druhy_retezec[:-1]\n        print(retezec)\n
###
1111
def bigN(n):\n    for i in range(0,n):\n    	print("|",i*" ","\\",(n-i)*" ","|")\n
def bigN(n):\n    print(("|\\"),(n-3)*" ","|")\n    for i in range(n-2):\n        print("|"+(i)*" ","\\",(n-3-i)*" "+"|")\n    print("|",(n-3)*" ",("\\|"))\n
def bigN(n):\n    for i in range(n-1):\n        print("|"+(i)*" "+"\\"+(n-i-1)*" "+"|")\n    print("|",(n-3)*" ",("\\|"))\n
def bigN(n):\n    for i in range(n):\n        print("|"+(i)*" "+"\\"+(n-i-1)*" "+"|")\n
###
1111
def bigN(n):\n    for i in range(n):\n		for j in range(n+2):\n			if j==0 or j==n+1:\n				print("|", end="")\n			else:\n				if j==i+1:\n					print("\\", end="")\n				else:\n					print(" ", end="")\n		print("\n",end="")\n
###
1111
def middle(n,pos):\n    for i in range(n):\n    	if pos != i:\n        	print(" ",end="")\n        else:\n            print("\\",end="")\ndef bigN(n):\n    for i in range(n):\n        print("|", end="")\n        middle(n,i)\n        print("|")\n
def middle(n,pos):\n    for i in range(n):\n    	if pos != i:\n        	print(" ",end="")\n    	else:\n        	print("\\",end="")\ndef bigN(n):\n    for i in range(n):\n        print("|", end="")\n        middle(n,i)\n        print("|")\n
###
1111
def bigN(n):\n    for i in range(n):\n        print("|",end="")\n        for j in range(i):\n            print(end=" ")\n        print(end="\ ")\n        for k in range(n-i-1):\n            print(end=" ")\n        print("|")\n              \n    \n	\n
def bigN(n):\n    for i in range(n):\n        print("|",end="")\n        for j in range(i):\n            print(end=" ")\n        print(end="\\")\n        for k in range(n-i-1):\n            print(end=" ")\n        print("|")\n        
###
1111
def bigN(n):\n    d=0\n    for i in range(n):\n        print("|",end="")\n        for j in range(n):\n            if(j==d):\n                print("\\",end="")\n            else: print(" ",end="")\n        print("|",end="")\n        print()\n        d+=1\n            \n    \n
###
1111
def bigN(n):\n    a=n\n    b=0\n    for i in range(n):\n        space1=" "*b\n        space2=" "*a\n        b+=1\n        a-=1\n        print("|{0}\\{1}|".format(space1 , space2))
def bigN(n):\n    a=n-1\n    b=0\n    for i in range(n):\n        space1=" "*b\n        space2=" "*a\n        b+=1\n        a-=1\n        print("|{0}\\{1}|".format(space1 , space2))
###
1111
def bigN(n):\n    for row in range(0, n):\n        print("|", end="")\n        print(" "*row, end="")\n        print("\\", end="")\n        print(" "*((n-1)-row), end="")\n        print("|", end="")\n        print()\n
###
1111
def bigN(n):\n    for i in range(n):\n        for j in range(n+2):\n            if j == 0 or j == n+1:\n                print('|', end='')\n            elif j == i+1:\n                print('\\', end='')\n            else:\n                print(' ', end='')\n        print()\n
###
1111
def bigN(n):\n    n1=n\n    n2=1\n    n3=1\n    for x in range(n):\n        print("|",end="")\n        for z in range(n-n1):\n            print("",end=" ")\n        for e in range(n2):\n            print("\\",end="")\n        for a in range(n-n3):\n            print("",end=" ")\n        print("|",end="")    \n        n1-=1\n        n3+=1\n        print()
###
1111
def bigN(n):\n    for row in range(n):\n        for col in range(n):\n            if col==0 or col==n-1:\n                print("|",end=' ')\n            elif row==col:\n                print("\\",end=' ')\n            else:\n                print(end=' ')\n        print()\n            \n                \n    \n\n
def bigN(n):\n    for row in range(n):\n        for col in range(-1,n):\n            if col==-1 or col==n-1:\n                print("|",end=' ')\n            elif row==col:\n                print("\\",end=' ')\n            else:\n                print(end=' ')\n        print()\n            \n                \n    \n\n
def bigN(n):\n    for row in range(n):\n        for col in range(-1,n):\n            if col==-1 or col==n-1 and row!=n-1:\n                print("|",end='')\n            elif row==col:\n                print("\\",end=' ')\n            else:\n                print(end=' ')\n        print()\n            \n                \n    \n\n
def bigN(n):\n    for row in range(n):\n        for col in range(-1,n+1):\n            if col==-1 or col==n :\n                print("|",end='')\n            elif row==col :\n                print("\\",end=' ')\n            else:\n                print(end=' ')\n        print()\n            \n                \n    \n\n
def bigN(n):\n    for row in range(n):\n        for col in range(-1,n+1):\n            if col==-1 or col==n :\n                print("|",end='')\n            elif row==col :\n                print("\\",end=' ')\n            else:\n                print(end=' ')\n        print()\n            \n                \n    \n\n
def bigN(n):\n    for row in range(n):\n        for col in range(-1,n+1):\n            if col==-1 or col==n :\n                print("|",end='')\n            elif row==col :\n                print("\\",end='')\n            else:\n                print(end=' ')\n        print()\n            \n                \n    \n\n
###
1111
def nonzero_product(numbers):\n    sum = 1\n    for i in numbers:\n        if i != 0:\n            sum = sum * i;\n    return sum
###
1111
def nonzero_product(numbers):\n    r=1\n    for i in numbers:\n        if i!=0:\n            r*=i\n    return r\n
###
1111
def nonzero_product(numbers):\n    vysledek=1\n    kontrola=0\n    for prvek in numbers:\n        if prvek!=0:\n        	vysledek=vysledek * prvek\n        	kontrola=kontrola+1\n    if kontrola==0:\n        vyledek=0\n    return vysledek    \n
###
1111
def nonzero_product(list):\n  kontrola = 0\n  vysledek = 1\n  for prvek in list:\n    if prvek != 0:\n      vysledek = vysledek * prvek\n      kontrola = kontrola + 1\n  if kontrola == 0:\n    vysledek = 0\n  return vysledek
###
1111
def nonzero_product(numbers):\n    result = 1\n    for x in range(len(numbers)):\n        if(numbers[x] != 0):\n            result *= numbers[x]\n    return result\n            \n  \n            \n
###
1111
def nonzero_product(numbers):\n    x = 1\n    for i in numbers:\n        if i > 0:\n            x = x * i\n    return x\n            \n
def nonzero_product(numbers):\n    x = 1\n    for i in numbers:\n        if i > 0 or i < 0:\n            x = x * i\n    return x\n            \n
###
1111
def nonzero_product(numbers):\n    \n    sum = 1\n    for number in numbers:\n        if number == 0:\n        	continue\n        else:\n    		sum = sum * number\n        \n    return sum\n
###
1111
def nonzero_product(numbers):\n    \n    sum = 1\n    for num in numbers:\n        if num != 0:\n            sum = sum * num\n    \n    \n    return sum\n
###
1111
def nonzero_product(numbers):\n    result = 1\n    for i in numbers:\n        if i != 0:\n            result = result * i\n    return result\n
###
1111
def nonzero_product(numbers):\n    soucin=1\n    for i in numbers:\n        if i!=0:\n            soucin=soucin*i\n    return soucin\n
###
1111
def nonzero_product(numbers):\n    s=1\n    for i in numbers:\n        if i!=0: s=s*i\n    return(s)\n            
###
1111
def nonzero_product(numbers):\n    x = 1\n    for i in numbers:\n        if numbers[i] != 0:\n            x *= i\n    return x\n
def nonzero_product(numbers):\n    x = 1\n    for i in numbers:\n        if i != 0:\n            x *= i\n    return x\n
###
1111
def nonzero_product(numbers):\n    s = 1\n    for x in numbers:\n        if x != 0:\n            s *= x\n    return s\n
###
1111
def nonzero_product(numbers):\n    if not numbers:\n        return 1\n    if numbers[0] is 0:\n        return nonzero_product(numbers[1:])\n    return numbers[0] * nonzero_product(numbers[1:])\n
###
1111
def nonzero_product(numbers):\n    product = 1\n    for x in numbers:\n        if x!=0:\n            product*=x\n    return product
###
1111
def nonzero_product(numbers):\n    cislo = 1\n    for x in numbers:\n        cislo = cislo * x         \n    return cislo\n
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    cislo = 1\n    for x in numbers:\n        if x>0:\n			seznam.append(x)\n        cislo = cislo * x  \n    			return cislo
def nonzero_product(numbers):\n    seznam = []\n    for x in numbers:\n        if x!=0:\n			seznam.append(x)\n    cislo = 1\n    for i in seznam:\n        cislo = cislo * i\n    return cislo\n
###
1111
def every_second_number(num_list):\n    for i in range (len(num_list)):\n        if i % 2 == 0:\n            print (num_list[i])
###
1111
def every_second_number(num_list):\n index =0\n for i in num_list:\n  let = num_list[index]\n  if index ==0 or index%2==0:\n   print(let)\n  index = index +1\n
###
1111
def every_second_number(num_list):\n    vysledek=1\n    for i in num_list:\n        vysledek=vysledek+1\n        if vysledek % 2==0:\n            print (i)\n        else:\n            continue\n        \n
###
1111
def every_second_number(num_list):\n    \n    for i in num_list:\n        if i%2==0 or i==1:\n            print (i)\n        else:\n            continue\n
def every_second_number(num_list):\n	for i in num_list:\n            if i==0 or i%2==1:\n                print (i)\n            else:\n                continue
def every_second_number(num_list):\n	for i in num_list:\n            if i==0 or [i]%2==1:\n                print (i)\n            else:\n                continue
def every_second_number(num_list):\n    vysledek=0\n    for i in num_list:\n        vysledek=vysledek+1\n        if vysledek%2==1:\n            print (i)\n        else: \n            continue    \n    \n
###
1111
def every_second_number(num_list):\n    k=[]\n    for i in num_list:\n        if i%2==0 or i==1:\n            print(i)\n
def every_second_number(num_list):\n    vysledek=0\n    for i in num_list:\n        \n        vysledek=vysledek+1\n        if vysledek%2==1:\n             print (i)\n        else:\n             continue   \n
###
1111
def every_second_number(num_list):\n    \n    i = 0\n    while i < len(num_list):\n        print(num_list[i])\n        i += 2\n    \n    \n
###
1111
def every_second_number(num_list):\n    for i in range(0, len(num_list), 2):\n        print(num_list[i])\n
###
1111
def every_second_number(num_list):\n    for i in num_list[::2]:\n        print(i)\n
###
1111
def every_second_number(num_list):\n    for i in range(len(num_list)):\n        if i%2==0: print(num_list[i])\n    		
###
1111
def every_second_number(num_list):\n    for i in range(0, len(num_list), 2):\n            print(num_list[i])
###
1111
def every_second_number(num_list):\n    for x in num_list[0:len(num_list):2]:\n        print(x)\n
###
1111
def every_second_number(num_list):\n    for i in range(len(num_list)):\n        if i % 2 == 0:\n    		print(num_list[i])
###
1111
def every_second_number(num_list):\n    for i in range(0, len(num_list), 2):\n  	print(num_list[i])\n
###
1111
def every_second_number(num_list):\n    for i in range(len(num_list)):\n        if i%2==0:\n        	print(num_list[i])\n
###
1111
def every_second_number(num_list):\n    lst = [x for c, x in enumerate(num_list) if c % 2 == 0]\n    for x in lst:\n        print(x)\n
###
1111
def every_second_number(num_list):\n    [print(i) for i in num_list[::2]]\n
###
1111
def every_second_number(num_list):\n    for i in range (len(num_list)):\n        if i%2==0:\n            print (num_list[i])\n            \n
###
1111
def every_second_number(num_list):\n		print(num_list[0],num_list[2],num_list[4])\n
def every_second_number(num_list):\n		print(num_list[0],num_list[2],num_list[4])\n
def every_second_number(num_list):\n		print(num_list[0],num_list[2],num_list[4])\n
def every_second_number(num_list):\n		print(num_list[0],num_list[2],num_list[4])\n
def every_second_number(num_list):\n		print(num_list[0],num_list[2],num_list[4])\n
def every_second_number(num_list):\n    for x in num_list:\n        i = num_list[::2]\n    print(i)\n
def every_second_number(num_list):\n    for x in num_list:\n        i = num_list[::2]\n    print(i)\n
def every_second_number(num_list):\n    for x in num_list:\n        i = num_list[::2]\n    print(i)\n
def every_second_number(num_list):\n    for x in num_list:\n    	if x % 2 == 0:\n			print(x)\n    print(num_list[0])\n
def every_second_number(num_list):\n    for x in num_list:\n    	if x % 2 == 0:\n			print(x)\n    print(num_list[0])\n
def every_second_number(num_list):\n    print(num_list[0])\n    print(num_list[2])\n    print(num_list[4])\n
def every_second_number(num_list):\n    #for x in num_list:\n    	if  num_list = num_list[::2]:\n			print(num_list)\n    #print(num_list[0])\n
def every_second_number(num_list):\n    for x in range(len(num_list)):\n    	if x % 2 == 0:\n                print(num_list[x])\n
###
1111
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for num in num_list[]:\n        if num%2==0:\n            print(num,"Co sa deje")\n\n
def every_second_number(num_list):\n    for pos in range(len(num_list)):\n        if pos%2==0:\n            print(num_list[pos])\n\n
###
1111
def print_products(n):\n    for i in range(1,n+1):\n        if n%i==0:\n            print(n,"=",i,"*",int(n/i))\n
###
1111
def print_products(n):\n    for i in range(n):\n        for j in range(n:0:-1):\n        	if i*j==n:\n                print(n,"=",i,"*",j)\n
def print_products(n):\n    for i in range(n):\n        for j in range(n,0,-1):\n        	if (i*j==n):\n                print(n,"=",i,"*",j)\n
def print_products(n):\n    for i in range(n):\n        for j in range(n,0,-1):\n        	if (i*j==n):\n                print(n)\n
def print_products(n):\n    for i in range(n):\n        for j in range(n,0,-1):\n        	if ((i*j)==n):\n                print(n)\n
def print_products(n):\n    for i in range(n+1):\n    	for j in range(n,0,-1):\n        	if ((i*j)==n):\n            	print(n,"=",i,"*",j)\n
###
1111
def print_products(n):\n    for i in range (n):\n        if n%(i+1)==0:\n        	print (n,"=",i+1,"*",n/(i+1))\n   \n
def print_products(n):\n    for i in range (n):\n        if n%(i+1)==0:\n        	print (n,"=",i+1,"*",n//(i+1))\n   \n
###
1111
def print_products(n):\n    l = []\n    for i in range(n):\n        if n % (i + 1) == 0:\n            l.append(i + 1)\n    for i in l:\n        print("{0} = {1} * {2}".format(n, i, n/i))\n
###
1111
def print_products(n):\n    for i in range(1,n+1,1):\n        if n%i==0:\n            print(n,"=",i,"*",int(n/i))\n        else:\n            pass\n
###
1111
def print_products(n):\n    for i in range(1,n+1):\n        if n % i == 0:\n        	print(n, "=", i, "*", int(n/i))\n    	\n
###
1111
def print_products(n):\n    for i in range(n):\n        if n%(i+1)==0:\n            print(n,'=',i+1,'*',n/(i+1)\n\n
def print_products(n):\n    for i in range(n):\n        if n%(i+1)==0:\n            print(n,'=',i+1,'*',n/(i+1))\n\n
def print_products(n):\n    for i in range(n):\n        if n%(i+1)==0:\n            print(n,'=',i+1,'*',n//(i+1))\n\n
###
1111
def print_products(n):\n    for i in range (1,n+1):\n        if n%i==0:\n            print (n,"=",i,"*",n/i)\n
def print_products(n):\n    for i in range (1,n+1):\n        if n%i==0:\n            print (n,"=",i,"*",n//i)\n
###
1111
def print_products(n):\n    for i in range(1, n+1):\n        if n % i == 0:\n            print(n, "=", i, "*", n//i)\n
###
1111
def print_products(n):\n    for i in range(1,n+1):\n    	if n%i==0:\n       		print(n,"=",i,"*",n/i)\n
def print_products(n):\n    for i in range(1,n+1):\n    	if n%i==0:\n       		print(n,"=",i,"*",n//i)\n
###
1111
def print_products(n):\n    for i in range(1, n+1):\n        if n%i==0:\n            second_number=n//i\n            print(n, " = ", i," * ", second_number)\n
def print_products(n):\n    for i in range(1, n+1):\n        if n%i==0:\n            second_number=n//i\n            print(n, "=", i,"*", second_number)\n
###
1111
def print_products(n):\n    for i in range(1, n+1):\n        if n%i==0:\n        	print(36, "=", i, "*", 36//i)\n
def print_products(n):\n    for i in range(1, n+1):\n        if n%i==0:\n        	print(n, "=", i, "*", n//i)\n
###
1111
def print_products(n):\n    for i in range(n+1):\n        for j in range(n):\n			if i*(n-j)==n:\n				print(n, "=", i, "*", n-j,)
###
1111
def print_products(n):\n    for divider in range(1,n):\n        a= n//divider\n        b= n//(n-divider)\n        \n    print(n,"=",a,"*",b)\n
def print_products(n):\n    for divider in range(1,n+1):\n        if  n%divider==0 :\n            print(n,"=",divider,"*", int((n/divider)))
###
1111
def print_products(n):\n    print(n)\n
def print_products(n):\n    a=0\n    for i in range (n):\n        if n%(i+1)==0:\n        	a=(n//(i+1))\n        	print (n, "=", i+1,"*",a)\n
###
1111
def print_products(n):\n    for i in range(1, n + 1):\n        if n % i == 0:\n            print (n, "=", i, "*", n // i)
###
1111
def divisors(n):\n    for i in range(1,n+1):\n        if n%i==0:\n            print(i)\n
###
1111
def divisors(n):\n    for i in range(1,n+1):\n    	if not(n%i):\n        	print(i)\n
###
1111
def divisors(n):\n    for i in range (n):\n        if n%(i+1)==0:\n    	print(i+1)\n
###
1111
def divisors(n):\n    pes = []\n    for i in range(n):\n        if n % (i + 1) == 0:\n            pes.append(i + 1)\n    for i in pes:\n    	print(i)\n
###
1111
def divisors(n):\n    for i in range(1,n+1,1):\n        if n%i==0:\n            print(i)\n        else:\n            pass\n
###
1111
def divisors(n):\n    for i in range(1,n+1,1):\n    	if n%i==0:\n        	print(i)\n
###
1111
def divisors(n):\n    for i in range(1,n+1,1):\n        if n%i == 0:\n        	print(i)\n\n
###
1111
def divisors(n):\n	for i in range(1,n+1,1):\n    	if n%i == 0:\n        	print(i)\n        \n
###
1111
def divisors(n):\n    for i in range(1,n+1,1):\n        if n%i==0:\n            print(i)\n    \n
###
1111
def divisors(n):\n    for i in range(1,n+1,1):\n        if n%i==0:\n            print(i)\n    \n
###
1111
def divisors(n):\n    for i in range(1,n+1,1):\n    	if n%i==0:\nprint()\n
def divisors(n):\n    for i in range(1,n+1,1):\n        if n%i==0:\n            print(i)\n	\n
###
1111
def divisors(n):\n    for candidate in range(1, n + 1):\n        if n % candidate == 0:\n            print (candidate)\n    print\n    \n
###
1111
def divisors(n):\n    count = 1\n    for i in range(1,n+1):\n        if n % i == 0:\n            print(i)\n
###
1111
def divisors(n):\n    x=1\n    for i in range (1,n+1):\n        if n%i==0:\n            x=i\n            print(x)\n\n            
###
1111
def divisors(n):\n    for i in range(1, n+1):\n        if n % i == 0:\n            print(i)\n
###
1111
def divisors(n):\n    for i in range(n):\n        if n%(i+1)==0:\n            print(i+1)\n    \n
###
1111
def divisors(n):\n    for i in range (n):\n        b=n%(i+1)\n        if b==0:\n            print (i+1)\n    \n
###
1111
def divisors(n):\n    for i in range(1, n+1):\n        if n % i == 0:\n            print(i)\n
###
1111
def divisors(n):\n    for i in range(1,n+1):\n        if(n%i==0):print(i)\n
###
1111
def divisors(n):\n    for i in range(n):\n        if(n%(i+1)==0):\n            print i\n
def divisors(n):\n    for i in range(n):\n        if(n%(i+1)==0):\n            print(i)\n
def divisors(n):\n    for i in range(n):\n        if(n%(i+1)==0):\n            print(i+1)\n
###
1111
def divisors(n):\n    for i in range(1,n+1):\n        if n%i==0:\n            print(i)\n
###
1111
def divisors(n):\n    for i in range(1, n+1):\n        if n%i == 0:\n            print(i)\n
###
1111
def divisors(n):\n    for i in range(n):\n        if n%(i+1)==0:\n            print(i+1)\n
###
1111
def divisors(n):\n    divisors = 0\n    for i in range(n):\n        if n%(i+1) == 0:\n            print(i+1)\n
###
1111
def divisors(n):\n    for i in range(1,n+1):\n        if n%i==0:\n    	print(i)\n
###
1111
def divisors(n):\n    for divider in range(1,n+1):\n        if n%divider==0:\n            print(divider)\n\n
###
1111
def divisors(n):\n    for i in range(1, n+1):\n        if n%i==0:\n		print(i)\n
###
1111
def divisors(n):\n    for i in range(n):\n        if n%(i+1)==0:\n            print(i+1)\n \n
###
1111
def divisors(n):\n    for i in range(1, n + 1):\n        if n % i == 0:\n            print(i)\n
###
1111
def divisors_count(n):\n    d=0\n    for i in range(1,n+1):\n        if n%i==0:\n            d=d+1\n    return d\n            \n
###
1111
def divisors_count(n):\n    cislo = 0\n    for i in range(1,n+1):\n        if not(n%i):\n            cislo = cislo + 1\n    return cislo\n
###
1111
def divisors_count(n):\n    k=0\n    for i in range(n):\n        if n%(i+1)==0: k=k+1\n    return (k)\n
###
1111
def divisors_count(n):\n    pes = 0\n    for i in range(n):\n        if n % (i + 1) == 0:\n            pes += 1\n    return pes\n
###
1111
def divisors_count(n):\n    return 8\n\n
n = 8\n\ndef divisors_count(n):\n	\n    \n    return n\n
def divisors_count(n):\n    return n\n
def divisors_count(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n
###
1111
def divisors_count(n):\n    a=0\n    for i in range(1,n+1,1):\n        if n%i==0:\n            a+=1\n        else:\n            pass\n    return a\n
###
1111
def divisors_count(n):\n    count=0\n    for i in range(1,n+1,1):\n        if n%i==0:\n            count+=1\n            \n    return count\n\n\n
###
1111
def divisors_count(n):\n    pocet=0\n    for i in range(1,n+1,1):\n        if n%i ==0:\n            pocet+=1\n    \n    return pocet\n
###
1111
def divisors_count(n):\n    pocet = 0\n    for i in range(1,n+1,1):\n        if n%i == 0:\n        	pocet += 1 \n    print(pocet)\n    \n\n
def divisors_count(n):\n    pocet = 0\n    for i in range(1,n+1,1):\n        if n%i == 0:\n        	pocet += 1 \n    return pocet \n    \n\n
###
1111
def divisors_count(n):\n    a=0\n    for i in range(n):\n        if n%i==0:\n            a+=1\n    return a\n
def divisors_count(n):\n    a=0\n    for i in range(n+1):\n        if i%n==0:\n            a+=1\n    return a\n
def divisors_count(n):\n    a=0\n    for i in range(1,n+1,1):\n        if n%i==0:\n            a+=1\n    return a\n
###
1111
def divisors_count(n):\n    pocet = 0\n    for i in range(1,n+1,1):\n        if n%i==0:\n            pocet+=1\n    return pocet\n
###
1111
def divisors_count(n):\n    pocet=0\n    for i in range(1,n+1,1):\n        if n%i==0:\n            pocet+=1\n    return pocet\n
###
1111
def divisors_count(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n
###
1111
def divisors_count(n):\n    count1 = 0\n    for i in range(1,n):\n 		if n % i == 0:\n            count1 += 1\n	return count1\n
def divisors_count(n):\n    count1 = 1\n    for i in range(1,n):\n 		if (n % i == 0):\n            count1 += 1\n	return count1\n
def divisors_count(n):\n    vysledok = 1\n    for i in range(1,n):\n 	    if n % i == 0:\n        	vysledok += 1\n    return vysledok\n
###
1111
def divisors_count(n):\n    s = 0\n    for i in range(n, 0, -1):\n        s += n % i == 0\n    return s\n
###
1111
def divisors_count(n):\n    x=0\n    for i in range (1,n+1):\n        if n%i==0:\n            x=x+1\n    return x\n            \n
###
1111
def divisors_count(n):\n    pocet = 0\n    for x in range(1,n+1):\n        if n % x == 0:\n            pocet += 1\n    return pocet\n
###
1111
def divisors_count(n):\n    x=0\n    for i in range(n):\n        if n%(i+1)==0:\n            x+=1\n            \n    return(x) \n
###
1111
def divisors_count(n):\n    a=0\n    \n    for i in range (n):\n        b=n%(i+1)\n        if b==0:\n            a=a+1\n           \n        \n    \n    return a\n
###
1111
\ndef divisors_count(n):\n    x = 0\n    for i in range(1,n+1):\n        if n % i == 0:\n            x += 1\n    return x\n
###
1111
def divisors_count(n):\n    count = 0\n    for i in range(1,n+1):\n        if n % i == 0:\n            count = count +1\n    return count\n
###
1111
def divisors_count(n):\n    x=0\n    for i in range(1,n+1):\n        if n%i==0:\n            x+=1\n    return x\n
###
1111
def divisors_count(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n
###
1111
def divisors_count(n):\n    divisorcnt=0\n    for i in range (n+1):\n    	if i!=0:\n    		if n % i == 0:\n        		divisorcnt=divisorcnt+1\n    return divisorcnt\n
###
1111
def divisors_count(n):\n    x = 0\n    for i in range(n):\n        if(n%(i+1)==0):\n            x+=1\n    return x\n
###
1111
def divisors_count(n):\n	count = 0\n	for i in range(1, n+1):\n		if n%i == 0:\n			count += 1\n	return count\n
###
1111
def divisors_count(n):\n    a=0\n    for i in range(n):\n        if n%(i+1)==0:\n            a=a+1\n    return a\n
###
1111
def divisors_count(n):\n    divisors=0\n    for i in range (n):\n        if n% (i + 1) == 0:\n            divisors = divisors + 1\n    return (divisors)\n
###
1111
def divisors_count(n):\n    k=0\n    for i in range(1,n+1):\n        if n%i==0:\n        	k+=1\n    return (k)\n
###
1111
def divisors_count(n):\n    \n    list_of_divisors = []\n    for i in range(1, n +1):\n        x = n / i\n        remain = n % i\n        if remain == 0:\n            list_of_divisors.append(x)\n    print(len(list_of_divisors))\n        \n        \n
def divisors_count(n):    \n    list_of_divisors = []\n    for i in range(1, n + 1):\n        x = n / i\n        remain = n % i\n        if remain == 0:\n            list_of_divisors.append(x)\n    return len(list_of_divisors)\n\n
###
1111
def divisors_count(n):\n    count = 0\n    for i in range(1, n+1):\n        if n%i == 0:\n            count += 1\n    return count\n
###
1111
def divisors_count(n):\n    sumc=0\n    for divider in range(1,n+1):\n        if n%divider==0:\n            sumc+=n/n\n        \n    return sumc\n
def divisors_count(n):\n    sumc=0\n    for divider in range(1,n+1):\n        if n%divider==0:\n            sumc+=n/n\n        \n    return sumc\n
def divisors_count(n):\n    sumc=0\n    for divider in range(1,n+1):\n        if n%divider==0:\n            sumc+=n/n\n        \n    return int(sumc)\n
###
1111
def divisors_count(n):\n    x = 0\n    for i in range(1, n+1):\n        if n%i==0: \n            x += 1\n    return (x)\n\n\n
###
1111
def divisors_count(n):\n    for i in range(n):\n        if (n+1)%(i+1)==0:\n            a=0\n            a=a+1\n    return a\n
def divisors_count(n):\n    for i in range(n):\n        if (n+1)%(i+1)==0:\n            a=1\n            a=a+1\n    return a\n
def divisors_count(n):\n    a=0\n    for i in range(n):\n        if (n)%(i+1)==0:\n            a=a+1\n    return a\n
###
1111
def divisors_count(n):\n    pocet = 0\n    for i in range (1, n + 1):\n        if n % i == 0:\n            pocet += 1\n    return pocet\n
###
1111
def powers(base, n):\n    for i in range(1,n+1):\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range(1,n+1):\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range (n):\n        print(base**(i+1))\n
###
1111
def powers(base, n):\n    for i in range(n):\n        i += 1\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range(1,n+1,1):\n        print(base**i)\n\n
###
1111
def powers(base, n):\n    for i in range(1,n+1,1):\n        pocet = base **i\n        print(pocet)\n        \n \n
###
1111
def powers(base, n):\n    mocnina= 1\n    for i in range(n):        \n        mocnina= mocnina*base\n        print(mocnina)\n        \n        \n        
###
1111
def powers(base, n):\n    for i in range(n+1):\n        print(base**i)\n    \n    \n
def powers(base, n):\n    for i in range(1,n+1,1):\n        print(base**i)\n    \n    \n
###
1111
def powers(base, n):\n    for i in range(1,n+1,1):\n        pocet = base **i\n        print(pocet)\n        \n\n
###
1111
def powers(base, n):\n    rand=1\n    for i in range(1,n+1,1):\n        rand = rand*base\n        print(str(rand))\n        \n        \n\n
###
1111
def powers(base, n):\n    print(base)\n
def powers(base, n):\n    for i in range (n):\n        base = base*2\n        print(base)\n        \n        \n        \n    print(base)\n
def powers(base, n):\n    for i in range (1,n):\n        base = base*2\n        print(base)\n    \n
def powers(base, n):\n    for i in range (1,n):\n        base = base*2\n        print(base)\n    \n
def powers(base, n):\n    for i in range (1,n):\n        \n        print(base**i)\n    \n
def powers(base, n):\n    for i in range (1,n+1):\n        \n        print(base**i)\n    \n
###
1111
def powers(base, n):\n    for i in range(n+1):\n        print(base**i)\n\n
def powers(base, n):\n    for i in range(1,n+1):\n        print(base**i)\n\n
###
1111
def powers(base, n):\n    for i in range(1,n+1):\n        x=base**i\n        print (x)\n
###
1111
def powers(base, n):\n    for i in range(n):\n        print(base**(i+1))\n    \n\n
###
1111
def powers(base, n):\n    for i in range (n):\n        print (base**(i+1))\n    \n
###
1111
def powers(base, n):\n    for i in range(1, n+1):\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range(1,n+1):\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range(1,n+1):\n        print(2**i)\n
def powers(base, n):\n    for i in range(1,n+1):\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range(1, n+1):\n        print(base**i)\n    \n
###
1111
def powers(base, n):\n    for i in range(1, n+1):\n        print(base**i)\n
###
1111
def powers(base, n):\n    for i in range(n):\n        print(base)\n        base *= 2\n
def powers(base, n):\n    x = base\n    for i in range(n):\n        print(base)\n        base *= x\n
###
1111
def powers(base, n):\n    for i in range(n):\n        print(base**(i+1))\n
###
1111
def powers(base, n):\n    for i in range (n):\n        i = i + 1\n        m = base**i\n        print(m)\n
###
1111
def powers(base, n):\n    m=0\n    for i in range(1,n+1):\n        m=base**n\n    	print(m)\n
def powers(base,n):\n	for i in range(1,n+1):\n    	print(base**i)\n
###
1111
def powers(base, n):\n    for k in range(1,n+1):\n		print(base**k)\n
###
1111
def powers(base, n):\n    for i in range(n):\n        print (base**(i+1))\n
###
1111
def powers(base, n):\n    for i in range(1, n + 1):\n        print(base ** i)\n         \n
###
1111
def digit_sum(n):\n    s=str(n)\n    r=0\n    for value in s:\n        r=r+int(value)\n    return r\n        \n
###
1111
def digit_sum(n):\n    a=str(n)\n    soucet=0\n    for prvek in a:\n    	soucet=soucet+(ord(prvek)-48)\n    return soucet
###
1111
"5"+"8"\n\n \n
def digit_sum(n):\n    s=0\n    z=str(n)\n    for i in range (len(z)):\n        a=z[i]\n        s=s+int(a)\n    return(s)\n      \n    
###
1111
def digit_sum(n):\n    l = []\n    k = 0\n    for i in str(n):\n        l.append(i)\n    for i in l:\n        k += int(i)\n    return k
###
1111
def digit_sum(n):\n    n=str(n)\n    b=0\n    for i in range(len(n)):\n        a=n[i]\n        a=int(a)\n        b+=a\n    return b\n
###
1111
def digit_sum(n):\n    text= str(n)\n    soucet = 0\n    for pismeno in text:\n        soucet+=int(pismeno)\n    return soucet
###
1111
def digit_sum(n):\n    text = str(n)   \n    soucet = 0\n    for pismeno in text:        \n        soucet += int(pismeno)        \n    return soucet\n        \n\n
###
1111
def digit_sum(n):\n    text = str(n)\n    soucet = 0\n    for pismeno in text:\n        soucet += int(pismeno)\n   	return soucet\n         	\n
def digit_sum(n):\n    text = str(n)\n    soucet = 0\n    for pismeno in text:\n        soucet += int(pismeno)\n    return soucet
###
1111
def digit_sum(n):\n    result = 0\n    while n > 0:\n        result += n % 10\n        n = n // 10\n    return result\n
###
1111
def digit_sum(n):\n    vysledok = 0\n    string = str(n)\n    for i in range(len(string)):\n        vysledok += int(string[i])\n    return vysledok\n		\n    	\n
###
1111
def digit_sum(n):\n    x=0\n    string=str(n)\n    for i in range(len(string)):\n        x+=int(string[i])\n        \n    return x\n
###
1111
def digit_sum(n):\n    sucet=0\n    cifra=0\n    while n >0:\n        cifra=n%10\n        sucet=sucet+cifra\n        n=(n-cifra)/10\n        \n    return sucet\n
def digit_sum(n):\n    sucet=0\n    cifra=0\n    while n >0:\n        cifra=n%10\n        sucet=sucet+cifra\n        n=(n-cifra)/10\n        \n    return int(sucet)\n
###
1111
def digit_sum(n):\n    x=1\n    a=0\n    while n>0:\n        x=n%10\n        n=n//10\n        a+=x\n    return (a)
###
1111
def digit_sum(n):\n    result = 0\n    digit = str(n)\n    for i in range(len(digit)):\n        result = result + int(digit[i])\n    return result\n
###
1111
def digit_sum(n):\n    x=0\n    while n:\n        x+=n%10\n        n//=10\n    return x\n
###
1111
def digit_sum(n):\n    string = str(n)\n    arr = list(string)\n    sum = 0\n    for i in range(len(arr)):\n        sum+=int(arr[int(i)])\n    return sum    \n
###
1111
def digit_sum(n):\n    counter=0\n    string=str(n)\n    length=len(string)\n    for i in range(length):\n        number=string[i]\n        real_number=int(number)\n        counter=counter+real_number\n        \n    return counter\n	
###
1111
def digit_sum(n):\n    a=0\n    b=0\n    while n>0:\n		a=n%10\n		n=n//10\n		b=b+a\n    return b\n
###
1111
def digit_sum(n):\n    result=0\n    while n>0:\n        result+=n%10\n        n=n//10\n	return result
def digit_sum(n):\n    result=0\n    while n>0:\n        result+=n%10\n        n=n//10\n	return result
def digit_sum(n):\n    result=0\n    while n>0:\n        result+=n%10\n        n=n//10\n	return result
def digit_sum(n):\n	result=0\n	while n>0:\n		result+=n%10\n		n=n//10\n	return result
###
1111
def digit_sum(n):\n	result=0\n	while n > 0:\n		result += n % 10\n		n = n // 10\n	return result\n\n
###
1111
def digit_sum(n):\n    sum = 0\n    for i in range(len(str(n))):\n        sum += n % 10\n        n = n // 10\n    return sum\n
###
1111
def digit_sum(n):\n    result = 0\n    while n > 0:\n        result += n % 10\n        n = n // 10\n    return result\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if n<=i<n*2 or n<=j<n*2:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (n<i<2*n) or (n<j<2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (n<=i<2*n) or (n<=j<2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n	for i in range (n): print(n*"."+n*"#"+n*".")\n	for i in range (n): print(3*n*"#")\n	for i in range (n): print(n*"."+n*"#"+n*".")
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (i >= n and i < 2*n) or (j >= n and j < 2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(n):\n        print(("." * n) + ("#" * n) + ("." * n))\n    for i in range(n):\n        print("#" * (3 * n))\n    for i in range(n):\n        print(("." * n) + ("#" * n) + ("." * n))
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if i == (3*n)/2 or i == ((3*n)/2)-1 or j == (3*n)/2 or j == (3*n)/2 - 1:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
import math\ndef cross(n):\n        for i in range(3*n):\n            for j in range(3*n):\n                if i == math.floor((3*n)/2) or i == ((3*n)/2)-1 or j == math.floor((3*n)/2) or j == (3*n)/2 - 1:\n                    print("#", end="")\n                else:\n                    print(".", end="")\n            print()\n
def cross(n):\n    for i in range(n):\n        print(n*".", end = "")\n        print(n*"#", end = "")\n        print(n*".", end = "")\n        print()\n    for i in range(n):\n        print(n*"#", end = "")\n        print(n*"#", end = "")\n        print(n*"#", end = "")\n        print()\n    for i in range(n):\n        print(n*".", end = "")\n        print(n*"#", end = "")\n        print(n*".", end = "")\n        print()
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if  n<=i<2*n or n<=j<2*n:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n\n    for row in range(1,3*n+1):\n        if row<n+1 or row>2*n:\n            for col in range (1,3*n+1):\n                if col<n+1 or col>2*n:\n                    print (".", end="")\n                else:	print ("#", end="")\n            print ()\n        else:\n            for i in range(1,3*n+1):\n                print("#",end="")\n            print()\n        \n    	\n			\n    
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if n <= i < n+n or n <= j < n+n:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (i > n-1 and i<(2*n)) or (j > n-1 and j<2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (i >= n and i < 2*n)  or (j >= n and j < 2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (i >= (n) and i <2*n) or (j >= (n) and j <2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if n-1 < i < n*2 or n-1 < j < n*2 :\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(n):\n        print("."*n, end="")\n        print("#"*n,end="")\n        print("."*n,end="")\n        print()\n    for i in range(n):\n        print("#"*n*3)\n    for i in range(n):\n        print("."*n, end="")\n        print("#"*n,end="")\n        print("."*n,end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if (i >= n and i < 2*n) or (j >= n and j < 2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(0, 3*n):\n        for j in range(0, 3*n):\n            if i in range(n, 2*n) or j in range(n, 2*n):\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if i == n or i==n+2 or i==n+1 or j == n or j==n+1:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if i == n  or i==n+1 or j == n or j==n+1:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for row in range(3*n):\n        for col in range(3*n):\n            if row == n or col==n:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for row in range(3*n):\n        for col in range(3*n):\n            if row == n or row==n+1 or col==n or col==n+1:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for row in range(3*n):\n        for col in range(3*n):\n            if row == n or row==n+row or col==n or col==n+col:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for row in range(3*n):\n        for col in range(3*n):\n            if (3*n-1)-n>=row>=n :\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
def cross(n):    \n    for row in range(3*n):\n        for col in range(3*n):\n            if (3*n-1)-n>=row>=n or (3*n-1)-n>=col>=n:\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def cross(n):    \n    for i in range(3*n):\n        for j in range(3*n):\n            if j>=n and j<2*n or i>=n and i<2*n :\n                print("#", end="")\n            else:\n                print(".", end="")\n        print()\n
###
1111
def palindrom(text):\n	c = len(text) - 1\n	for i in range(len(text)):\n		if text[i] == text[c]:\n			return True\n		else:\n			return False\n        \n        \n
def palindrom(text):\n	c = len(text) - 1\n	p = len(text) // 2\n	for i in range(len(text) // 2):\n		if text[i] == text[c]:\n			if p == i:\n				return True\n		else:\n			return False\n\n        \n        \n
def palindrom(text):\n	c = len(text) - 1\n	p = (len(text) // 2)\n	for i in range(0, len(text) // 2):\n		if text[i] !=text[c]:\n			return False\n		return True\n\n        \n        \n
def palindrom(text):\n	c = len(text) - 1\n	p = (len(text) // 2)\n	for i in range(len(text) // 2):\n		if text[i] !=text[c]:\n			return False\n	return True\n\n        \n        \n
def palindrom(text):\n\n	p = (len(text) // 2)\n	for i in range(len(text) // 2):\n		c = len(text) - 1 - i\n		if text[i] !=text[c]:\n			return False\n	return True\n\n        \n        \n
###
1111
def palindrom(text):\n    o = (len(text) // 2)\n    for i in range(len(text) // 2):\n        c = len(text) -1 - i\n        if text[i] != text[c]:\n            return False        \n    return True\n
###
1111
def palindrom(text):\n    delka = len(text)/2 -1\n    for i in range(int(delka)):\n        if text[i] != text[-i-1]:\n           return False\n    return True
###
1111
def palindrom(text):\n    delka = len(text)/2 -1\n    for i in range(int(delka)):\n        if text[i] != text[-i-1]:\n            return False\n    return True
###
1111
def palindrom(text):\n if text == text [::-1]:\n  return True\n else:\n  return False
###
1111
def palindrom(text):\n    delka = len(text)\n    pravaCast = text[::-1]\n    levaCast = text[::]\n    if (levaCast == pravaCast):\n        return True\n    else:\n        return False\n  \n   \n
###
1111
def palindrom(text):\n    tekst1 =""\n    tekst2 = ""\n    i = 0\n    delka = len(text)\n    for letter in range((delka) // 2):\n        tekst1 = tekst1 + text[i]\n        i += 1\n    i = 0\n    for letter in range((delka) // 2):\n        tekst2 = tekst2 + text[-(i+1)]\n        i += 1\n    if (tekst1 == tekst2):\n        return True\n    else:\n        return False\n
###
1111
def palindrom(text):\n    return (text==text[-1])\n
def palindrom(text):\n    return (text==text[::-1])\n
###
1111
def palindrom(text):\n	return text == text[::-1]\n
###
1111
def palindrom(text):\n	return text == text[::-1]\n
###
1111
import math\ndef palindrom(text):\n    lenText = len(text)\n    for i in range(int(math.floor(lenText/2)) - 1):\n                   if text[i] != text[lenText - i -1]:\n                   		return False\n    return True\n
###
1111
def palindrom(text):\n  d  = len(text)\n  ls = d-1\n \n  for i in range( int(round(d/2)) ):\n      if text[i] != text[ls-i]:\n         return False \n  return True\n
###
1111
def palindrom(text):\n    if text == text[::-1]:\n    	return True\n    else:\n        return False\n
###
1111
def palindrom(text):\n    text.lower()\n    rvrs=''\n    for a in range(len(text)):\n        rvrs += text[len(text)-a-1]\n    if rvrs==text:\n        return True\n    else:\n        return False\n
###
1111
def palindrom(text):\n    pole = list(text)\n    pole_rev = pole[::-1]\n    for i in range(len(pole)):\n        if(pole[i] == pole_rev[i] and i+1 == len(pole)):\n            return True\n        elif(pole[i] != pole_rev[i] and i+1 == len(pole)):\n            return False
def palindrom(text):\n    pole = list(text)\n    pole_rev = pole[::-1]\n    sedi = True\n    for i in range(len(pole)):\n        if(pole[i] != pole_rev[i]):\n            sedi = False\n    if(sedi == False):\n        return False\n    else:\n        return True
###
1111
def palindrom(text):\n    if (text == "jelenovipivonelej"):\n        return True\n    elif (text == "prase"):\n        return False \n    elif (text == "anna"):\n        return True\n    elif (text == "franta"):\n        return False\n
def palindrom(text):\n    if (text == "jelenovipivonelej"):\n        return True\n    elif (text == "prase"):\n        return False \n    elif (text == "anna"):\n        return True\n    elif (text == "franta"):\n        return False\n    elif (text == "kajak"):\n        return True\n
def palindrom(text):\n    text2 = text[::-1]\n    if (text == text2):\n        return True \n    else:\n        return False\n
###
1111
def palindrom(text):\n    length = len(text)\n    for i in range(length):\n        if text[i] != text[length-i-1]:\n            return False\n    return True\n\n    \n
###
1111
def palindrom(text):\n    for i in range(len(text)//2):\n        if text[i] != text[len(text)-i-1]:\n            return False\n    return True\n
###
1111
def palindrom(text):\n	for letters in text:\n    	if text[::] == text[::-1]:\n    		return True\n    	else:\n        	return False\n
###
1111
def palindrom(text):\n    for i in range(len(text)//2):\n        if text[i] != text[len(text)-i-1]:\n            return False\n    return True\n
###
1111
def palindrom(text):\n    x = 0\n    for i in range(len(text)):\n        if text[i] != text[len(text)-1-i]:\n            x += 1\n    if x != 0:\n        return False\n    else:\n        return True\n
###
1111
def palindrom(text):\n    is_palindrom = True\n    for i in range(len(text)//2):\n    	if text[i]!=text[len(text)-1-i]:\n       		is_palindrom = False\n    return is_palindrom\n
###
1111
def palindrom(text):\n    test = True\n    i = 0\n    while test == True and i<(len(text)-i):\n        if text[i] == text[len(text) - i-1]:\n            test = True\n            i+=1\n        else:\n            test = False\n    return test
###
1111
def max_pair_sum(num_list):\n k= 0\n t =[]\n for i in num_list:\n  k = k +i\n  t.append(k)\n  k=i\n return(max(t))\n\n
###
1111
def max_pair_sum(num_list):\n k= 0\n t =[]\n for i in num_list:\n  k = k +i\n  t.append(k)\n  k=i\n return(max(t))\n
###
1111
def max_pair_sum(num_list):\n    \n    sum = 0\n    i = 0\n        \n    while i < len(num_list)-1:\n        \n        docasna = num_list[i] + num_list[i+1]\n        \n        if docasna > sum:\n        	sum = docasna\n        \n        i += 1\n        \n    return sum\n
###
1111
def max_pair_sum(num_list):\n    curMax = 0\n    for i in range(len(num_list) - 1):\n        if num_list[i] + num_list[i+1] > curMax:\n            curMax = num_list[i] + num_list[i+1]\n    return curMax\n
###
1111
def max_pair_sum(num):\n    max=num[0]+num[1]\n    for i in range(1,len(num)):\n        if (num[i]+num[i-1])>max:\n            max=num[i]+num[i-1]\n    return max\n
###
1111
def max_pair_sum(num_list):\n    s=[]\n    for i in range(len(num_list)):\n        if i!=0: s.append(num_list[i-1]+num_list[i])\n    s.sort()\n    return(s[len(s)-1])\n
###
1111
def max_pair_sum(num_list):\n    nList = []\n    for i in range (len (num_list)-1):\n        nList.append (num_list[i] + num_list[i+1])\n    return max(nList)\n
###
1111
def max_pair_sum(num_list):\n    sums=0\n    for i in range(1,len(num_list)):\n        if sums < (num_list[i]+num_list[i-1]):\n            sums = (num_list[i] + num_list[i-1])\n\n    return sums\n\n
###
1111
def count_a(text,a=0):\n    for i in (text):\n        if i=="a":\n            a=a+1\n        if i=="A":\n            a=a+1\n    return (a)\n            \n
###
1111
def count_a(text,a=0):\n    for i in (text):\n        if i=="a":\n            a=a+1\n        if i=="A":\n            a=a+1\n    return (a)
###
1111
\ndef count_a(text):\n celek = 0\n for i, prvek in enumerate(text):\n  if prvek =="A" or prvek =="a":\n   celek = celek+1\n return celek
###
1111
def count_a(text):\n    vysledek=0\n    for i in (text):\n        if i=="a" or i=="A":\n            vysledek = vysledek+1\n            \n        \n    return vysledek\n
###
1111
def count_a(text):\n  x = 0\n  for letter in text:\n    if letter == "a":\n      x = x + 1\n    if letter == "A":\n      x = x + 1\n  return x
###
1111
def count_a(text):\n    counter = 0\n    for letter in text:\n        if (letter == "a"):\n            counter = counter + 1\n            if (letter == "A"):\n                counter = counter + 1\n    return counter\n
def count_a(text):\n    counter = 0\n    for letter in text:\n        if (letter == "a"):\n            counter = counter + 1\n        if (letter == "A"):\n                counter = counter + 1\n    return counter\n
###
1111
def count_a(text):\n    pocet=0\n    for i in text:\n    	if i=="A" or i=="a":\n            pocet=pocet+1\n    return pocet\n
def count_a(text):\n    pocet=0\n    for i in text:\n        if (i=="A") or (i=="a"):\n            pocet=pocet+1\n    return pocet\n
###
1111
def count_a(text):\n    n=len(text)\n    k=0\n    for i in range (n):\n        if (text[i]=="a" or text[i]=="A"): k=k+1\n    return(k)\n
###
1111
def count_a(text):\n    t = text.lower()\n    i = t.count("a")\n    return i\n\n
###
1111
def count_a(text):\n    return text.lower().count('a')\n
###
1111
def count_a(text):\n    count = 0\n    for i in range(len(text)):\n        if text[i] == 'a' or text[i] == 'A':\n            count = count + 1\n        \n    return count\n
###
1111
def count_a(text):\n    c=0\n    for i in text:\n      if i is "a" or i is "A":\n         c += 1\n    return c\n
###
1111
def count_a(text):\n    count = 0\n    for i in text:\n        if i == 'a' or i == 'A':\n            count += 1\n    return count\n
###
1111
def count_a(text):\n    pocet = 0\n    for i in text:\n        if (i == "a")or(i=="A"):\n            pocet+=1\n    return pocet\n
###
1111
def count_a(text):\n    a=0\n    for i in range(len(text)):\n        if text[i]=="a" or text[i]=="A":\n            a++;\n    return a\n
def count_a(text):\n    a=0\n    for i in range(len(text)):\n        if text[i]=="a" or text[i]=="A":\n            a=a+1;\n    return a\n
###
1111
def count_a(text):\n    text = text.lower()\n    return text.count('a')\n
###
1111
def count_a(text):\n    n=text.count('a')+text.count('A')\n    return n\n	\n
###
1111
def count_a(text):\n    return len(text)\n
def count_a(text):\n    return sentence.count(text)\n
def count_a(text):\n    a=len(text)\n    return a\n
def count_a(text):\n    a = len(text)\n    return (a)\n
def count_a(text):\n    a = len(text)\n    return (a)\n
a=0\ndef count_a(text):\n    pocet=len(text)\n    for i in pocet(0, pocet):\n        a+=1\n    return (a)\n
def count_a(text):\n	text.count('a','A')    \n    return (a)\n
def count_a(text):\n	a=text.count('a','A')    \n    return (a)\n
def count_a(text):\n	a = text.count('a','A')    \n    return (a)\n
def count_a(text):\n    pocet = 0\n    for i in range (0, len(text)):\n        if (text[i]=="a"):\n            pocet += 1\n        elif (text[i]=="A"):\n            pocet += 1\n    return pocet\n
###
1111
def count_a(text):\n    count = 0\n    for i in range(len(text)):\n        if text[i] == 'a' or text[i] == 'A':\n            count = count + 1\n    return count\n
###
1111
def count_a(text):\n    return text.lower().count('a')\n
###
1111
def count_a(text, char="a", bigchar="A"):\n    count = 0\n    for c in text:\n        if c == char:\n            count += 1\n        if c == bigchar:\n            count += 1\n    return count\n
###
1111
def count_a(text):\n    return text.lower().count("a")\n
###
1111
def count_a(text):\n    x = 0\n    for i in range(len(text)):\n        if text[i] == "a" or text[i] == "A":\n            x += 1\n    return x\n        \n
###
1111
def count_a(text):\n    x=0\n    for i in range(len(text)):\n        if(text[i]=="A" or text[i]=="a"):\n            x+=1\n    return x\n
###
1111
def count_a(text):\n    count = 0\n    for i in range(len(text)):\n        if text[i].lower() == "a":\n            count += 1\n    return count\n
###
1111
def count_a(text):\n    total = 0\n    for i in range(len(text)):\n        if(text[i] == "a" or text[i] == "A"):\n            total += 1\n    return total\n
###
1111
def count_a(text):\n    n = 0\n    for i in text:\n    	if i == 'a' or i== 'A':\n        	n+=1\n    return n\n
###
1111
def count_a(text):\n    count=0\n    for i in range(len(text)):\n        if text[i]=="a" or text[i]=="A":\n            count=+1\n	return count
def count_a(text):\n    count=0\n    for i in range(len(text)):\n        if text[i]=="a" or text[i]=="A":\n            count+=1\n    return count
###
1111
def count_a(text):\n    cnt=0\n    for let in text:\n        if let=='a':\n            cnt+=1\n\n    \n
def count_a(text):\n    cnt=0\n    for let in text:\n        if let=='a':\n            cnt+=1\n\n    \n
def count_a(text):\n    cnt=0\n    for let in text:\n        if let=='a':\n            cnt+=1\n            print(2)\n\n    \n
def count_a(text):\n    cnt=0\n    for let in text:\n        if let=='a':\n            cnt+=1\n    print(cnt+1)\n\n    \n
def count_a(text):\n    cnt=0\n    for let in text:\n        if let=='a':\n            cnt+=1\n    return(cnt+1)\n\n    \n
def count_a(text):\n    cnt=0\n    for let in text:\n        if let=='a':\n            cnt+=1\n    return(cnt)\n\n    \n
def count_a(text):\n    cnt=0\n    text=text.lower()\n    for let in text:\n        if let=='a':\n            cnt+=1\n    return(cnt)\n\n    \n
###
1111
def censorship(text):\n    text = list(text)\n    vysledek = ""\n    for i in range(len(text)):\n        if i % 2 == 1:\n            text[i] = "X"\n    \n    \n    for i in range(len(text)):\n        vysledek = vysledek + text[i]\n    return(vysledek)\n\n
###
1111
def censorship(text):\n    tekst = ""\n    x = 1\n    for word in text:\n        if (x == 1):\n            tekst = tekst + word\n            x += 1\n        else:\n            tekst = tekst + ("X")\n            x -= 1\n    return tekst\n
###
1111
def censorship(text):\n    kriz=False\n    text2=""\n    for i in text:\n        if kriz:\n            text2=text2+"X"\n        else:\n            text2=text2+i\n        kriz=not(kriz)\n    return text2\n
###
1111
def censorship(text):\n    new = ""\n    for i in range(len(text)):\n        if i % 2 == 0:\n            new += text[i] + 'X'\n    return new\n
def censorship(text):\n    new = ""\n    for i in range(len(text)):\n        if i % 2 == 0:\n            new += text[i]\n        else:\n        	new += 'X'\n    return new\n
###
1111
def censorship(text):\n    c_text=''\n    for a in range(len(text)):\n        if (a+1)%2==0:\n        	c_text+='X'\n        else:\n            c_text+= text[a]\n    return c_text\n
###
1111
def censorship(text):\n    vypis = " "\n    for i in range(len(text)):\n        if(i%2 == 0):\n        	vypis+=text[i:i+1]\n        else:\n            vypis += "X"\n    return vypis\n
###
1111
def censorship(text):\n    newstr = ""\n    for i, letter in enumerate(text):\n        if i %2==0:\n            newstr+="X"\n        else:\n            newstr+=letter\n    return newstr\n
def censorship(text):\n    newstr = ""\n    for i, letter in enumerate(text):\n        if i %2==1:\n            newstr+="X"\n        else:\n            newstr+=letter\n    return newstr\n
###
1111
def censorship(text):\n    return "".join([l if i % 2 == 0 else "X" for i, l in enumerate(text)])\n
###
1111
def censorship(text):\n    for i in range(len(text)):\n        if i%2==0: print("X", end="")\n        else: print(text[i], end="")
def censorship(text):\n    for i in range(len(text)):\n        if i%2==1: print("X", end="")\n        else: print(text[i], end="")\n            \n    return ""
###
1111
def censorship(text):\n    puzzle=""\n    for i in range(len(text)):\n        if i%2==1: puzzle+="X"\n        else: puzzle+=text[i]\n            \n    return puzzle
###
1111
def alphabet(n):\na=65\nb=0\nfor i in range(kolikpismen):\n    if b == 26:\n        a = a - 26\n        b = 0\n        b = b + 1\n        print(chr(a))\n        a = a+ 1
def alphabet(n,a=65,b=0):\n    for i in range(n):\n        if b == 26:\n            a = a - 26\n           \n        b = b + 1\n        print(chr(a))\n        a = a+ 1
def alphabet(n,a=65,b=0):\n    for i in range(n):\n        if b == 90:\n            a = a - 26\n            b=0\n        b = b + 1\n        print(chr(a))\n        a = a+ 1
def alphabet(n,a=65,b=0):\n    for i in range(n):\n        if b == 26:\n            a = a - 26\n            b=0\n        b = b + 1\n        print(chr(a))\n        a = a+ 1
###
1111
def alphabet(n):\n    for i in range(n):\n        if i == 0:\n            a=0\n        else:\n            a=(65%i)\n        print(chr(65+a))\n
def alphabet(n):\n    for i in range(n):\n        if i == 0:\n            a=0\n        else:\n            a=(i%65)\n        print(chr(65+a))\n
def alphabet(n):\n    for i in range(n):\n        j=i%26\n        if i == 0:\n            a=0\n        else:\n            a=(i%65)\n        print(chr(65+j+a))\n
def alphabet(n):\n    for i in range(n):\n        if i == 0:\n            a=0\n        else:\n            a=(i%26)\n        print(chr(65+a))\n
###
1111
def alphabet(n):\n    for i in range(n):\n        print(chr(ord("A")+i%26))\n
###
1111
def alphabet(n):\n    for i in range(n//26):\n        for j in range(26):\n        	print(chr(65+j-i*26))\n	for i in range(n%26):\n		print(chr(65+i))
def alphabet(n):\n	for i in range(n//26):\n		for j in range(26):\n			print(chr(65+j-i*26))\n	for k in range(n%26):\n		print(chr(65+k))
def alphabet(n):\n	for i in range(n//26):\n		for j in range(26):\n			print(chr(65+j))\n	for k in range(n%26):\n		print(chr(65+k))
###
1111
def alphabet(n):\n    for i in range(n):\n        print(chr(ord('A')+i%26))\n
###
1111
def alphabet(n):\n    import string\n    for i in range (n):\n        if i <len(string.ascii_uppercase):\n            print (string.ascii_uppercase[i])\n        else: print(string.ascii_uppercase[i-(i//len(string.ascii_uppercase))*len(string.ascii_uppercase)])\n
###
1111
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			while i < len(text):\n				print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			print(text[i], end="")\n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			while i < len(text):\n				print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			print(text[i], end="")\n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			while i < len(text):\n				print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			print(text[i], end="")\n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text):\n				print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			print(text[i], end="")\n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if i % 2 != 0:\n		print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if i % 2 != 0:\n		if len(text) > 4:\n			print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if i % 2 != 0:\n		if len(text) == 4:\n			print(".", end="")\n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if len(text) != 4:                \n		if i % 2 != 0:\n			print(".", end="")\n		\n            \n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if len(text) != 4:                \n		if len(text) % 2 != 0:\n			print(".", end="")\n		\n            \n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if len(text) != 4:                \n		if len(text) % 2 == 0:\n			print(".", end="")\n		\n            \n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if len(text) != 4:                \n		if len(text) % 2 != 0:\n			print(".", end="")\n		\n            \n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
def zigzag(text):\n	for i in range(len(text)):\n		if i % 2 == 0:\n			print(text[i], end="")\n			if i < len(text)-1:\n				print(".", end="")\n	if len(text) != 4:\n		if len(text) % 2 == 0:\n			pass			\n			if len(text) % 2 != 0:\n				print(".", end="")\n		\n            \n	print()\n	for i in range(len(text)):\n		if i % 2 != 0:\n			print(".", end="")\n			if i < len(text):\n				print(text[i], end="")\n	if i % 2 == 0:\n		print(".", end="")                \n
###
1111
def zigzag(text):\n    if len(text) % 2 == 1:\n        for i in range(0, len(text), 2):\n            print(str(text[i]) + ".", end = "")\n        print()\n        for j in range(1, len(text), 2):\n            print("." + str(text[j]), end = "")\n        print(".")\n    else:\n        for i in range(0, len(text), 2):\n            print(str(text[i]) + ".", end ="")\n        print()\n        for j in range(1, len(text), 2):\n            print("." + str(text[j]), end = "")
def zigzag(text):\n    if len(text) % 2 == 1:\n        for i in range(0, len(text)-2, 2):\n            print(str(text[i]) + ".", end = "")\n        print(text[i+2])\n        for j in range(1, len(text), 2):\n            print("." + str(text[j]), end = "")\n        print(".")\n    else:\n        for i in range(0, len(text), 2):\n            print(str(text[i]) + ".", end ="")\n        print()\n        for j in range(1, len(text), 2):\n            print("." + str(text[j]), end = "")
###
1111
def zigzag(text):\n    print(text)\n
def zigzag(text):\n    counter = 1\n    text1 = ""\n    text2 = ""\n    for letter in text:\n        if (counter == 1):\n            text1 = text1 + letter\n            counter += 1\n        else:\n            text1 = text1 + "."\n            counter -= 1\n    counter = 1\n    for letter in text:\n        if (counter == 2):\n            text2 = text2 + letter\n            counter -= 1\n        else:\n            text2 = text2 + "."\n            counter += 1   \n    print(text1)\n    print(text2)\n
###
1111
def zigzag(text):\n    for i in text[::2]:\n        print(i,".",end="")\n    print(end="\n")\n    for i in text[1::2]:\n    	print(".",i,end="")\n
def zigzag(text):\n    for i in text[::2]:\n        print(i,".",end="")\n    print(end="\n")\n    for i in text[1::2]:\n    	print(".",i,end="")\n
def zigzag(text):\n    for i in text[::2]:\n        print(i,".",end=" ")\n    print(end="\n")\n    for i in text[1::2]:\n    	print(".",i,end="")\n
def zigzag(text):\n    for i in text[::2]:\n        print(i,".",end="")\n    print(end="\n")\n    for i in text[1::2]:\n    	print(".",i,end="")\n
def zigzag(text):\n    for i in text[::2]:\n        print(i+".",end="")\n    print(end="\n")\n    for i in text[1::2]:\n    	print("."+i,end="")
def zigzag(text):\n    tecka=True\n    for i in text:\n        if tecka:\n            print(i,end="")\n        else:\n            print(".",end="")\n        tecka=not(tecka)\n    print(end="\n")\n    tecka=False\n    for i in text:\n    	if tecka:\n            print(i,end="")\n        else:\n            print(".",end="")\n        tecka=not(Tecka)
def zigzag(text):\n    tecka=True\n    for i in text:\n        if tecka:\n            print(i,end="")\n        else:\n            print(".",end="")\n        tecka=not(tecka)\n    print(end="\n")\n    tecka=False\n    for i in text:\n    	if tecka:\n            print(i,end="")\n        else:\n            print(".",end="")\n        tecka=not(Tecka)
def zigzag(text):\n    tecka=True\n    for i in text:\n        if tecka:\n            print(i,end="")\n        else:\n            print(".",end="")\n        tecka=not(tecka)\n    print(end="\n")\n    tecka=False\n    for i in text:\n        if tecka:\n            print(i,end="")\n        else:\n            print(".",end="")\n        tecka=not(tecka)
###
1111
def zigzag(text):\n    p1 = text[::2]\n    p2 = text[1::2]\n    print(".".join(p1))\n    print("."+".".join(p2))\n
def zigzag(text):\n    p1 = text[::2]\n    p2 = text[1::2]\n    print(".".join(p1)+".")\n    print("."+".".join(p2))\n
def zigzag(text):\n    p1 = text[::2]\n    p2 = text[1::2]\n    print(".".join(p1)+(""if len(p1)>len(p2) else "."))\n    print("."+".".join(p2)+(""if len(p1)<len(p2) else "."))\n
def zigzag(text):\n    p1 = text[::2]\n    p2 = text[1::2]\n    print(".".join(p1)+("." if len(p1)<len(p2) else ""))\n    print("."+".".join(p2)+("." if len(p1)>len(p2) else ""))\n
def zigzag(text):\n    p1 = text[::2]\n    p2 = text[1::2]\n    print(".".join(p1)+("." if len(p1)<=len(p2) else ""))\n    print("."+".".join(p2)+("." if len(p1)>len(p2) else ""))\n
###
1111
def zigzag(text):\n	pole = list(text)\n	vypis_a = ""\n	vypis_b = ""\n	for i in range(len(text)):\n		if(i%2==0):\n			vypis_a += "".join(pole[i:i+1])\n			vypis_b += "."\n		else:\n			vypis_b += "".join(pole[i:i+1])\n			vypis_a += "."\n	print(vypis_a)\n	print(vypis_b)
###
1111
def zigzag(text):\n    p1 = text[::2]\n    p2 = text[1::2]\n    \n    print(".".join(p1) + ("." if len(text) % 2 == 0 else ""))\n    print("."+".".join(p2) + ("." if len(text) % 2 == 1 else ""))\n
###
1111
def zigzag(text):\n    print(zigzag_cycle(text,1))\n    print(zigzag_cycle(text,2))\n\ndef zigzag_cycle(text, row):\n    halfword=""\n    for i in range(len(text)):\n        if i%2==(row-1):\n            halfword+=text[i]\n        else: halfword+="."\n    return halfword\n
###
1111
def string_intersection(left, right):\n for i, prvek in enumerate(left):\n  for s, prvek2 in enumerate(right):\n    if s==i and prvek == prvek2:\n     print(prvek)
###
1111
def string_intersection(left, right):\n    for i in range(len(left)):\n    	if left[i]==right[-1-i]:\n            print(i)\n
def string_intersection(left, right):\n    for i in range(len(left)):\n    	if left[i]==right[-1-i]:\n            print(i)\n
def string_intersection(left, right):\n    for i in range(len(right)):\n        if left[i]==right[i]:\n            print(left[i])\n
###
1111
def string_intersection(left, right):\n    if len(left) > len(right):\n        for i in range(len(right)):\n            if left[i] == right[i]:\n                print(left[i])\n    else:\n        for i in range(len(left)):\n            if left[i] == right[i]:\n                print(left[i])\n
###
1111
def string_intersection(left, right):\n    for l, r in zip(left, right):\n        if l == r:\n            print(l)\n
###
1111
def string_intersection(left, right):\n    for l, r in zip(left, right):\n        if l == r:\n            print(l)\n\n
###
1111
def string_intersection(left, right):\n\n    for i in range (len(shorter(left,right))):\n        if left[i]==right[i]:\n            print(left[i])\n\n\ndef shorter(left,right):\n    if len(left)<=len(right):\n        return left\n    else: return right\n\n
###
1111
def string_zip(text1, text2):\n	pleb = ""\n	for i in range((len(text1)) + (len(text2))):\n		if i < len(text1):\n			pleb = pleb + text1[i]\n		if i < len(text2):\n			pleb = pleb + text2[i]\n	return pleb
###
1111
def string_zip(text1, text2):\n    t3 = ""\n    for i in range(len(text1) + len(text2)):\n        if i < len(text1):\n            t3 = t3 + text1[i]\n        if i < len(text2):\n            t3 = t3 + text1[i]\n    return t3
def string_zip(text1, text2):\n    t3 = ""\n    for i in range(len(text1) + len(text2)):\n        if i < len(text1):\n            t3 = t3 + text1[i]\n        if i < len(text2):\n            t3 = t3 + text1[i]\n    return t3
def string_zip(text1, text2):\n    t3 = ""\n    for i in range(len(text1) + len(text2)):\n        if i < len(text1):\n            t3 = t3 + text1[i]\n        if i < len(text2):\n            t3 = t3 + text1[i]\n    return t3
def string_zip(text1, text2):\n    t3 = ""\n    for i in range(len(text1) + len(text2)):\n        if i < len(text1):\n            t3 = t3 + text1[i]\n        if i < len(text2):\n            t3 = t3 + text1[i]\n    return t3
def string_zip(text1, text2):\n    t3 = ""\n    for i in range(len(text1) + len(text2)):\n        if i < len(text1):\n            t3 = t3 + text1[i]\n        if i < len(text2):\n            t3 = t3 + text2[i]\n    return t3
###
1111
def string_zip(text1, text2):\n    text=""\n    a=len(text2)\n    for i in range(len(text1)):\n        if i<a:\n            text=text+text1[i]+text2[i]\n        else:\n            text=text+text1[i]\n    return text\n
def string_zip(text1, text2):\n    text=""\n    a=len(text1)\n    b=len(text2)\n    if b>a:\n        texta=text2\n        textb=text1\n    else:\n        texta=text1\n        textb=text2\n    for i in range(max(a,b)):\n        if i<a:\n            text=text+texta[i]+textb[i]\n        else:\n            text=text+texta[i]\n    return text\n
def string_zip(text1, text2):\n    text=""\n    a=len(text1)\n    b=len(text2)\n    for i in range(max(a,b)):\n        if i<a and i<b:\n            text=text+text1[i]+text2[i]\n        elif i>=a:\n            text=text+text2[i]\n        elif i>=b:\n            text=text+text1[i]\n    return text\n
###
1111
def string_zip(text1, text2):\n    prvy = list(text1)\n    druhy = list(text2)\n    vypis = ""\n    vacsi = ""\n    if(len(text1)>len(text2)):\n        premenna = text2\n        vacsi = text1\n    elif(len(text1)<len(text2)):\n        premenna = text1\n        vacsi = text2\n    else:\n        premenna = text1\n        vacsi = text2\n    for i in range(len(premenna)):\n        vypis += str("".join(prvy[i:i+1]))+str("".join(druhy[i:i+1]))\n    vypis+=vacsi[len(premenna):len(vacsi)-int(len(premenna)/5)]\n    return vypis\n
def string_zip(text1, text2):\n    prvy = list(text1)\n    druhy = list(text2)\n    vypis = ""\n    vacsi = ""\n    if(len(text1)>len(text2)):\n        premenna = text2\n        vacsi = text1\n    elif(len(text1)<len(text2)):\n        premenna = text1\n        vacsi = text2\n    else:\n        premenna = text1\n        vacsi = text2\n    for i in range(len(premenna)):\n        vypis += str("".join(prvy[i:i+1]))+str("".join(druhy[i:i+1]))\n    vypis+=vacsi[len(premenna):len(vacsi)]\n    return vypis\n
###
1111
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2)):]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2))+1:]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    if len(text1) != len(text2):\n        newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2))+1:]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    if len(text1) != len(text2):\n        newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2)):]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    if len(text1) != len(text2):\n        newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2))-1:]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    if len(text1) > len(text2):\n        newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2)):]\n    elif len(text1) < len(text2):\n        newstr+=text2[max(len(text1), len(text2))-min(len(text1), len(text2)):]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    if len(text1) > len(text2):\n        newstr+=text1[max(len(text1), len(text2))-min(len(text1), len(text2))-1:]\n    elif len(text1) < len(text2):\n        newstr+=text2[max(len(text1), len(text2))-min(len(text1), len(text2)):]\n    return newstr
def string_zip(text1, text2):\n    newstr=""\n    for l, r in zip(text1, text2):\n        newstr+=l+r\n    if len(text1) > len(text2):\n        newstr+=text1[len(text2):]\n    elif len(text1) < len(text2):\n        newstr+=text2[len(text1):]\n    return newstr
###
1111
def string_zip(text1, text2):\n    return "".join([l+r for l, r in zip(text1, text2)] + \n                   [text1[min(len(text1), len(text2)):]+text2[min(len(text1), len(text2)):]])\n
###
1111
def shorter(left,right):\n    if len(left)<=len(right):\n        return left\n    else: return right\n\ndef longer (left,right):\n    if len(left)<=len(right):\n        return right\n    else: return left\ndef string_zip(text1, text2):\n    result = ""\n    for i in range (len(shorter(text1,text2))):\n        result+=text1[i]+text2[i]\n    for j in range (len(longer(text1,text2)) - len(shorter(text1,text2))):\n        result+=longer(text1,text2)[len(shorter(text1,text2))+j]\n\n    return result
###
1111
def shorter(left,right):\n    if len(left)<=len(right):\n        return left\n    else: return right\n\ndef longer (left,right):\n    if len(left)<=len(right):\n        return right\n    else: return left\ndef string_zip(text1, text2):\n    result = ""\n    for i in range (len(shorter(text1,text2))):\n        result+=text1[i]+text2[i]\n    for j in range (len(longer(text1,text2)) - len(shorter(text1,text2))):\n        result+=longer(text1,text2)[len(shorter(text1,text2))+j]\n\n    return result
###
1111
def five_multiples(num_list):\n    \n    k=[]\n    for i in num_list:\n        if i%5==0:\n            k.append(i)\n        	\n        else:\n            \n            continue\n    return (k)        \n
###
1111
def five_multiples(num_list):\n    k=[]\n    for i in num_list:\n        if i%5==0:\n            k.append(i)\n        else:\n            continue\n    return k        \n            \n
###
1111
def five_multiples(num_list):\n  x = []\n  for i in num_list:\n    if i % 5 == 0:\n      x.append(i)\n  return x
###
1111
def five_multiples(num_list):\n	k = []\n	for i in (num_list):\n		if i % 5 ==0:\n			k.append(i)\n            \n	return k\n
###
1111
def five_multiples(num_list):\n    \n    vysledok = []\n    \n    for number in num_list:\n        if number % 5 == 0:\n            vysledok.append(number)\n    \n    return vysledok\n
###
1111
def five_multiples(num_list):\n    s = []\n    for i in num_list:\n        if i % 5 == 0:\n            s.append(i)\n    return s
###
1111
def five_multiples(num_list):\n    nas=[]\n    for i in num_list:\n        if not(i%5):\n        	nas.append(i)\n    return nas\n
###
1111
def five_multiples(num_list):\n    return [i for i in num_list if i%5 == 0]\n
###
1111
def five_multiples(num_list):\n    s=[]\n    for i in num_list:\n        if i%5==0: s.append(i)\n    return s\n
###
1111
def five_multiples(num_list):\n    result = []\n    for x in num_list:\n        if x%5 == 0:\n			result=result+[x]\n    return result
###
1111
def five_multiples(num_list):\n    output = []\n    for maybe in num_list:\n        if not (maybe % 5):\n            output.append(maybe)\n    return output\n
###
1111
def five_multiples(num_list):\n    temp_list = []\n    for i in range(len(num_list)):\n        if(num_list[i] % 5 == 0):\n            temp_list.append(num_list[i])\n    return temp_list
###
1111
def five_multiples(num_list):\n    return filter(lambda n : n % 5 == 0, num_list)\n
###
1111
def five_multiples(num_list):\n    return [x for x in num_list if x%5==0]\n
###
1111
def five_multiples(num_list):\n    x = []\n    for i in num_list:\n        if i % 5 == 0:\n            x.append(i)\n    return x\n
###
1111
def five_multiples(num_list):\n    nasobky_peti = []\n    for i in range(len(num_list)):\n        if (num_list[i]) % 5 == 0:\n            nasobky_peti.append(num_list[i])\n    return nasobky_peti
###
1111
def five_multiples(num_list):\n    new_list = []\n    for i in range(len(num_list)):\n        if num_list[i]%5 == 0:\n            new_list.append(num_list[i])\n    return new_list\n
###
1111
def five_multiples(num_list):\n    return [x for x in num_list if x % 5 == 0]\n
###
1111
def five_multiples(num_list):\n    return [i for i in num_list if not i%5]\n
###
1111
five_multiples = lambda num_list : [i for i in num_list if not i%5]
###
1111
def five_multiples(num_list):\n    seznam = []\n    for x in num_list:\n		if x % 5 == 0:\n        		seznam.append(x)\n    return seznam
###
1111
def five_multiples(num_list):\n    five_folds=[]\n    for x in num_list:\n        if x%5==0:\n            five_folds.append(x)\n\n    return five_folds\n
###
1111
def five_multiples(num_list):\n    for char in num_list:\n        if char%5==0:\n            return[char]
def five_multiples(num_list):\n    for char in num_list:\n        if char%5==0:\n            return[char]
def five_multiples(num_list):\n    for char in num_list:\n        if char%5==0:\n            return[char]
def five_multiples(num_list):\n    for char in num_list:\n        if char%5==0:\n            return[char]
def five_multiples(num_list):\n    for char in num_list:\n        if char%5==0:\n            return[char]
def five_multiples(num_list):\n    for char in num_list:\n        if char%5==0:\n            return[char]
def five_multiples(num_list):\n    my=[]\n    for char in num_list:\n        if char%5==0:\n            \n            return[my.append(char)]
def five_multiples(num_list):\n    my=[]\n    for char in num_list:\n        \n        if char%5==0:\n            my.append(char)\n    return my\n            
###
1111
def unique(mylist):\n    k=[]\n    for i in mylist:\n        if i not in k:\n            k.append(i)\n    return (k)        \n    \n
###
1111
def unique(mylist):\n    seznam=[]\n    for i in mylist:\n        if i not in mylist:\n            seznam.append(i)\n        else:\n            continue\n    return seznam        \n
def unique(mylist):\n    t=[]\n    for i in mylist:\n        if i not in t:\n            t.append(i)\n        else:\n            continue\n    return t        \n
###
1111
def unique(mylist):\n    \n    unique = []\n    for i in mylist:\n        if not i in unique:\n        	unique.append(i)\n    \n    \n    \n    return unique\n
###
1111
def unique(mylist):\n    list=[]\n    for i in mylist:\n        if not(i in list):\n            \n    return mylist\n
def unique(mylist):\n    list=[]\n    for i in mylist:\n        if not(i in list):\n            list.append(i)\n    return mylist\n
def unique(mylist):\n    seznam=[]\n    for i in mylist:\n        if not(i in seznam):\n            seznam.append(i)\n    return seznam\n
###
1111
def unique(mylist):\n    s=[]\n    for i in range (len(mylist)):\n        for j in range (len(mylist)):\n        	if (i>j and mylist[i]==mylist[j]): mylist[i]="a"\n    for p in range (len(mylist)): \n        if mylist[p]!="a" : s.append(mylist[p])\n    return(s)\n   	\n    \n 	
###
1111
def unique(mylist):\n    ulist = []\n    for i in mylist:\n        if i not in ulist:\n            ulist.append(i)\n    return ulist            \n                \n
###
1111
def unique(mylist):\n    taken = list()\n    to_return = list()\n    for x in mylist:\n        if x not in taken:\n            taken.append(x)\n            to_return.append(x)\n    return to_return\n
###
1111
def unique(mylist):\n    whitelist=[]\n    for i in mylist:\n        if contains(whitelist,i)==False:\n            whitelist.append(i)\n    return whitelist\ndef contains (summary,element):\n    result=False\n    for x in summary:\n        if x!=element:\n            result = False\n        else: return True\n    return result
###
1111
def unique(mylist):\n    seznam = []\n    for x in mylist:\n        if x not in seznam:\n        	seznam.append(x)\n    return seznam\n
###
1111
def find_longest_word(words_list):\n    nejdelsiSlovo = words_list[0]\n    for x in range(len(words_list)):\n        if(len(nejdelsiSlovo) < len(words_list[x])):\n        	nejdelsiSlovo = words_list[x]\n    return nejdelsiSlovo\n
###
1111
def find_longest_word(wordlist):\n  longestWord = ""\n  max_len = 0\n\n  for word in wordlist:\n    if len(word) > max_len:\n      max_len = len(word)\n      longestWord = word\n  return longestWord
###
1111
def find_longest_word(words_list):\n    longest_word = ''\n    for word in words_list:\n        if len(word) > len(longest_word):\n            longest_word = word\n    print (longest_word)      \n
def find_longest_word(words_list):\n    longest_word = ''\n    for word in words_list:\n        if len(word) > len(longest_word):\n            longest_word = word\n    return longest_word      \n
###
1111
def find_longest_word(words_list):\n    \n    pocet = 0\n    slovo = ''\n    for word in words_list:\n    	if pocet < len(word):\n			slovo = word\n            \n    return slovo\n
def find_longest_word(words_list):\n    \n    pocet = 0\n    slovo = ''\n    for word in words_list:\n    	if pocet < len(word):\n			slovo = word\n            \n    return slovo\n
def find_longest_word(words_list):\n    \n    pocet = 0\n    slovo = ''\n    for word in words_list:\n		\n        kolko = len(word)\n        if pocet < kolko:\n            pocet = kolko\n            slovo = word\n            \n    return slovo\n
###
1111
def find_longest_word(words_list):\n    k="a"\n    for i in words_list:\n        if (len(i)>len(k)):k=i\n    return(k)\n   \n        \n        
###
1111
def most_common(mylist):\n    \n    pocet = 0\n    num = 'ach'\n    for number in mylist:\n        \n        if pocet <= mylist.count(number):\n            pocet = mylist.count(number)\n            if num == 'ach':\n        		num = number\n            \n            if num > number:\n                num = number\n        \n    return num
def most_common(mylist):\n    \n    pocet = 0\n    num = -1\n    for number in mylist:\n        if num == -1:\n        	num = number\n    	\n        kolko = mylist.count(number)\n        if pocet <= kolko:\n            pocet = kolko\n            if num < number:\n                num = number\n        \n    return num
def most_common(mylist):\n    \n    pocet = 0\n    num = -1\n    for number in mylist:\n        if num == -1:\n        	num = number\n    	\n        kolko = mylist.count(number)\n        if pocet <= kolko:\n            pocet = kolko\n            num = number\n        \n    return num
###
1111
def most_common(mylist):\n    most=0\n    high_freq = 0\n    freq=0\n    for x in mylist:\n        for y in mylist:\n            if x==y:\n                freq+=1\n        if freq > high_freq:\n            high_freq=freq\n            most=x\n        freq=0\n    return most
def most_common(mylist):\n    most=0\n    high_freq = 0\n    freq=0\n    for x in mylist:\n        for y in mylist:\n            if x==y:\n                freq+=1\n        if freq > high_freq:\n            high_freq=freq\n            most=x\n        elif freq==high_freq:\n            if x<most:\n                most=x\n        freq=0\n    return most
###
1111
def first_letters(text):\n      prvni = str(text[0])\n      for i in range(1, len(text)):\n            if text[i-1] == " " and text[i] != " ":\n                  prvni += text[i]\n      print(prvni)
def first_letters(text):\n      prvni = str(text[0]) + " "\n      for i in range(1, len(text)):\n            if text[i-1] == " " and text[i] != " ":\n                  prvni += text[i]+" "\n      print(prvni)
###
1111
def first_letters(text):\n    pis=True\n    for i in text:\n        if pis:\n            print(i, end="")\n            pis=False\n        if i==" ":\n            print(" ", end="")\n            pis=True\n
def first_letters(text):\n    pis=True\n    for i in text:\n        if pis:\n            print(i, end="")\n            pis=False\n        if (i==" ")and(not(pis)):\n            print(" ", end="")\n            pis=True\n
def first_letters(text):\n    pis=True\n    for i in text:\n        if pis and i!=" ":\n            print(i, end="")\n            pis=False\n        if (i==" ")and(not(pis)):\n            print(" ", end="")\n            pis=True\n
###
1111
def first_letters(text):\n  out = ""\n  sp  = True\n\n  for c in text: \n      if sp:\n         if c!=" ": \n            out += c+" "\n            sp = False          \n      else:\n         if c==" ": \n            sp = True\n\n  print(out)\n
###
1111
def first_letters(text):\n    old = "X"\n    new = [text[0]]\n    for i in text:\n        if i != " " and old == " ":\n            new.append(i)\n            old = i\n        else:\n            old = i\n    print(new)\n
def first_letters(text):\n    old = "X"\n    new = [text[0]]\n    for i in text:\n        if i != " " and old == " ":\n            new.append(i)\n            old = i\n        else:\n            old = i\n    for i in range(len(new)):\n        print(new[i], end = " ")\n
###
1111
def first_letters(text):\n    for a in range(len(text)):\n        if text[a]!=' ':\n            if a==0:\n                print(text[a], end=' ')\n            elif text[a-1]==' ' :\n                print(text[a], end=' ')\n    print()\n                \n
###
1111
def first_letters(text):\n    pole =  text.split()\n    vypis = ""\n    for i in range(len(pole)):\n        vypis += pole[i][:1]+" "\n    print(vypis)\n
###
1111
def first_letters(text):\n    new=""\n    tex = text.split()\n    for i in tex:\n        new += i[0] + " "\n    print (new)
###
1111
def first_letters(text):\n    print(" ".join([letter[0] for letter in text.split(" ") if len(letter) > 0]))\n
###
1111
def first_letters(text):\n    print(" ".join([word[1] for word in text.split(" ") if len(word) > 0]))\n
def first_letters(text):\n    print(" ".join([word[0] for word in text.split(" ") if len(word) > 0]))\n
###
1111
def first_letters(text):\n   if text[0]!=' ': print(text[0],end=" ")\n   for i in range (len(text)):\n       if text[i]==' ' and text[i+1]!=' ':\n           print (text[i+1], end=" ")\n   print()\n
###
1111
def fibonacci(n):\n	a=1\n	print(a)\n	b=1\n	print(b)\n	p=b\n	for i in range(n-1):\n		print(a+b)\n		p=b\n        b=a+b\n        a=p\n
def fibonacci(n):\n	a=1\n	print(a)\n	b=1\n	print(b)\n	p=b\n	for i in range(n-1):\n		print(a)\n		p=b+a\n        a=b\n        b=p\n        print(b)
def fibonacci(n):\n	a=1\n	print(a)\n	b=1\n	print(b)\n	p=b\n	for i in range(n-2):\n    	print(a+b)\n    	p=b+a\n    	a=b\n    	b=p
###
1111
def fibonacci(n):\n    xold = 1\n    yold = 1\n    vysledok = 0\n    for i in range(n):\n        if i == 0 or i == 1:\n            print(1)\n        else:\n            vysledok = xold + yold\n            print(vysledok)\n            xold = yold\n            yold = vysledok\n
###
1111
def fibonacci(n):\n    for i in range(n):\n        j=1\n        k=1\n        if i==0 or i==1:\n            print(1)\n        else:\n            print(j+k)\n        if j>k:\n            k+=j\n        else:\n            j+=k
def fibonacci(n):\n    j=1\n    k=1\n    for i in range(n):\n        if i==0 or i==1:\n            print(1)\n        else:\n            print(j+k)\n            if j>k:\n                k+=j\n            else:\n                j+=k
###
1111
def fibonacci(n):\n    x=1\n    y=1\n    f=0\n    print("1")\n    print("1")\n    for i in range(1,n-1):\n        f=x+y\n        x=y\n        y=f\n        print (f)\n
###
1111
def fibonacci(n):\n    x1 = 1\n    x2 = 1\n    print(x1)\n    print(x2)\n    for i in range(2,n):\n    	print(x1+x2)\n		x2=3
def fibonacci(n):\n    x1 = 1\n    x2 = 1\n    nt = 0\n    print(x1)\n    print(x2)\n    for i in range(2,n):\n		print(x1+x2)\n		nt = x1 + x2\n		x1 = x2\n		x2 = nt
###
1111
def fibonacci(n):\n    last = 0\n    last2 = 1\n    for i in range(1, n+1):\n		fib = last + last2\n		print(fib)\n		last2 = last\n		last = fib
###
1111
def fibonacci(n):\n    a = 1\n    b = 2\n    print(1)\n    print(a)\n    print(b)\n    for i in range(n -3):\n        c = a + b\n        print(c)\n        a = b\n        b = c\n
###
1111
def fibonacci(n):\n    a0=0\n    a1=1\n    for i in range(n-1):\n        an=a0+a1\n        print(an)\n        a0=a1\n        a1=an\n        \n    \n
def fibonacci(n):\n    a0=0\n    a1=1\n    print(1)\n    for i in range(n-1):\n        an=a0+a1\n        print(an)\n        a0=a1\n        a1=an\n        \n    print()\n
###
1111
def fibonacci(n):\n    current_element = 1\n    next_element = 1 \n    \n    for i in range(n):\n        print(current_element)\n        new = current_element\n        current_element = next_element\n        next_element += new\n
###
1111
def fibonacci(n):\n    a=1\n    b=0\n\n    for i in range(1,n+1):\n                  \n            print(a+b)\n            b=a+b\n            a=b-a\n          \n        \n
###
1111
def greatest_common_divisor(a, b):\n	if a<b: \n    	cislo=b\n	else:\n    	cislo=a\n	for i in range(cislo,0,-1):\n		if (not(a%i))and(not(b%i)):\n			return i
###
1111
def greatest_common_divisor(a, b):\n    for i in range (a):\n        for j in range (b):\n            if a%(a-i)==0 and b%(b-j)==0 and a-i==b-j:\n                return(a-i)
def greatest_common_divisor(a, b):\n    print(5)
def greatest_common_divisor(a, b):\n    s=[]\n    for i in range (a):\n        for j in range (b):\n        	if a%(i+1)==0 and b%(j+1)==0 and i==j: s.append(i+1)\n    s.sort\n    return(s[len(s)-1])\n   \n
def greatest_common_divisor(a, b):\n    s=[]\n    t=[]\n    for i in range (a):\n        if a%(i+1)==0: s.append(i+1)\n    for j in range (b):\n        if a%(j+1)==0: s.append(j+1)\n    for k in range (len(s)):\n        for l in range (len(s)):\n            if k>l and s[k]==s[l]:t.append(s[k])\n    t.sort\n    return(t[len(t)-1])\n
def greatest_common_divisor(a, b):\n    s=[]\n    t=[]\n    for i in range (a):\n        if a%(i+1)==0: s.append(i+1)\n    for j in range (b):\n        if b%(j+1)==0: s.append(j+1)\n    for k in range (len(s)):\n        for l in range (len(s)):\n            if k>l and s[k]==s[l]:t.append(s[k])\n    t.sort\n    return(t[len(t)-1])\n
###
1111
def greatest_common_divisor(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n
###
1111
def greatest_common_divisor(a, b):\n    for i in range(a):\n        if a%(i+1)==0 and b%(i+1)==0:\n            x=i+1\n    return x\n
###
1111
def greatest_common_divisor(a, b):\n    D=1\n    if a<b:\n        for i in range(1,a+1):\n            if a%i==0 and b%i==0:\n                D=i      \n    elif a>b:\n        for i in range(1,b+1):\n            if a%i==0 and b%i==0:\n                D=i     \n    elif a==b:\n        D=a\n    return D\n
###
1111
def greatest_common_divisor(a, b):\n    if b == 0:\n		return a\n    else:\n        return greatest_common_divisor(b, a%b)
###
1111
def greatest_common_divisor(a, b):\n    for i in range (1, a + 1):\n        if a % i == 0:\n            if b % i == 0:\n                x = i\n    return x\n
###
1111
def duplication(text):\n    for i in text:\n        print(i*2, end="")\n    print(end="\n")\n
def duplication(text):\n    text2=""\n    for i in text:\n        text2=text2+i+i\n    return text2\n
###
1111
def duplication(text):\n    for i in range (len(text)):\n        print(2*text[i],end="")\n
def duplication(text):\n    n=len(text)\n    for i in range (n):\n    	print(2*text[i],end="")\n
def duplication(text):\n    n=len(text)\n    for i in range (n):\n    	print(2*text[i],end="")\n
def duplication(text):\n    n=len(text)\n    for i in range (n):\n    	print(2*text[i],end="")
def duplication(text):\n    n=len(text)\n    for i in range (n):\n    	print(2*text[i],end="")\n  \n       
def duplication(text):\n    k=""\n    n=len(text)\n    for i in range (n):\n        k=k+(2*text[i])\n    return(k)\n\n        \n
###
1111
def duplication(text):\n    dup1 = str()\n    for char in text:\n	    dup1 += char + char\n    return dup1\n
###
1111
def duplication(text):\n  out = ""\n  for i in text :\n      out += i+i\n  return out\n
###
1111
def duplication(text):\n    moj = ""\n    for i in text:\n        moj += 2*i\n    return moj\n
###
1111
def duplication(text):\n    dupe=''\n    for a in range(len(text)):\n    	dupe+=2*text[a]   \n    return dupe\n
###
1111
def duplication(text):\n    duplikat = ""\n    for i in text:\n        duplikat+=2*i\n    return duplikat\n
###
1111
def duplication(text):\n    new=""\n    for char in text:\n    	new += char + char\n    return new
###
1111
def duplication(text):\n    newstr = ""\n    for letter in text:\n        newstr += letter * 2\n    return newstr\n
###
1111
def duplication(text):\n    return "".join([l+l for l in text])\n
###
1111
def duplication(text):\n    text_2 = ""\n    for i in range(len(text)):\n        text_2 += 2*text[i]\n    return text_2\n
###
1111
def duplication(text):\n    text_2 = ""\n    for i in range(len(text)):\n        text_2 = text_2 + 2*text[i]\n    text = text_2\n    return text\n
###
1111
def duplication(text):\n    new = ""\n    for i in text:\n        new+= i+i\n    return new\n
###
1111
def duplication(text):\n    result=""\n    for i in range (len(text)):\n        result+=(2*text[i])\n\n    return result\n\n
###
1111
def duplication(text):\n    for let in text:\n        x=print(let*2,end='')\n    return x\n    \n
###
1111
def duplication(text):\n    for let in text:\n        x=print(let*2,end='')\n    return x\n
###
1111
def duplication(text):\n    x=''\n    for let in text:\n        x+=(let*2)\n    return x\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",a*4)\n
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",4*a)\n
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",4*a)\n
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",4*a)\n
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",a+a+a+a)\n
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",a+a+a+a)\n
def area_perimeter(a):\n    print("Obsah",a*a)\n    print("Obvod",a+a+a+a)\n
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",a+a+a+a)\n
###
1111
def area_perimeter(a):\n    obvod = 4 * a\n    obsah = a**2\n    print("obsah", obsah)\n    print("obvod", obvod)\n
###
1111
def area_perimeter(a):\n    obsah = a**2\n    obvod = 4 * a\n    print("obsah", obsah)\n    print("obvod", obvod)\n
###
1111
def area_perimeter(a):\n    print("Obsah", a*a)\n    print("Obvod", a+a+a+a)\n
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a+a+a+a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a+a+a+a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)
###
1111
def area_perimeter(a):\n    print("obsah", a*a )\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",a+a+a+a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)
###
1111
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obash", a * 4)\n
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obash", a * 4)\n
def area_perimeter(a):\n    print("obsah ", a * a)\n    print("obash ", a * 4)\n
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obash", a * 4)\n
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obvod", a * 4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a ** 2)\n    print("obvod", 4 * a)\n
###
1111
def area_perimeter(a):\n    print('obsah', a*a)\n    print('obvod', 4*a)
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod:", 4*a)\n
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",a*4)\n
###
1111
def area_perimeter(a):\n    obsah = a * a\n    obvod = 4 * a\n    print("obsah", obsah)\n    print("obvod", obvod)
###
1111
def area_perimeter(a):\n        print(("obsah"), (a**2))\n        print(("obvod"), (a*4))\n
###
1111
def area_perimeter(a):\n    x = a*a\n    y = a*4\n    print("obsah ",x)\n    print("obvod ",y)\n
def area_perimeter(a):\n    x = a*a\n    y = a*4\n    print("obsah",x)\n    print("obvod",y)\n
###
1111
def area_perimeter(a):\n    area = a**2\n    perimeter = 4*a\n    print ("obsah", area)\n    print ("obvod", perimeter)\n
###
1111
def area_perimeter(a):\n    print("obsah ", a**2)\n    print("obvod ", 4*a)\n
def area_perimeter(a):\n    print("obsah ", a**2)\n    print("obvod ", 4*a)\n
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print('obsah',a**2)\n    print('obvod',a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n	print("obvod", a*2)
def area_perimeter(a):\n    print("obsah ", a**2)\n	\n    print("obvod ", 4*a)
def area_perimeter(a):\n    print("obsah ", a**2)\n	\n    print("obvod ", 4*a)
def area_perimeter(a):\n    print("obsah ", a**2)\n	\n    print("obvod ", 4*a)
def area_perimeter(a):\n    print("obsah ", a**2)\n    print("obvod ", 4*a)
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print('obsah', a**2)\n    print('obvod', a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print ("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)
###
1111
def area_perimeter(a):\n    print("obsah:", a**2)\n    print("obvod:", a*4)\n
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n	print("obsah", a**2)\n	print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obsah", (a+a)*2)
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", (a+a)*2)
###
1111
def area_perimeter(a):\n    S = a**\n    o = 4*a\n    print("obsah", S)\n    print("obvod", s)\n
def area_perimeter(a):\n    S = a**\n    o = 4*a\n    print("obsah", S)\n    print("obvod", o)\n
def area_perimeter(a):\n    S = a**2\n    o = 4*a\n    print("obsah", S)\n    print("obvod", o)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",a*4)\n
###
1111
def area_perimeter(a):\n    b=a**2\n    print("obsah", b)\n    c=a*4\n    print("obvod", c)\n
###
1111
def area_perimeter(a):\n    print('obsah',a*a)\n    print('obvod',4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah" , a*a)\n    print("obvod" , a*4\n
def area_perimeter(a):\n    print("obsah" , a*a)\n    print("obvod" , a*4)\n
###
1111
def area_perimeter(a):\n    print(a**2)\n
def area_perimeter(a):\n    print("obsah", a**2)\n
def area_perimeter(a):\n    print("obsah", a**2)\n    print("ovod", a*4)\n
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    area = a*a\n    perimeter = a*4\n    print("obsah", area)\n    print("obvod", perimeter)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obvod", a * 4)
###
1111
def area_perimeter(a):\n    print(obsah, a**2)\n    print(obvod,4*)\n
def area_perimeter(a):\n    print(obsah, a**2)\n    print(obvod, 4*a)\n
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*4)\n    print("obvod", a*a)\n
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obvod", 4 * a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod",a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",end=" ")\n    print(a**2)\n    print("obvod", end=" ")\n    print(a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah ", a*a)\n    print("obvod ", 4*a)\n
def area_perimeter(a):\n    print("obsah ", a*a)\n    print("obvod ", 4*a)\n
def area_perimeter(a):\n    print("obsah ", a*a)\n    print("obvod ", a*4)\n
def area_perimeter(a):\n    print("obsah ", a*a)\n    print("obvod ", a*4)\n
def area_perimeter(a):\n    print("obsah ", a*a)\n    print("obvod ", a*4)\n
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(r):\n	print("obsah", r ** 2 )\n	print("obvod", r * 4)\n
###
1111
def area_perimeter(a):\n	print("obsah", a**2)\n	print("obvod", 4*a)
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*a)\n
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print(obsah, a*a)\n    print(obvod, a*4)\n
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a * a)\n    print("obvod", 4 * a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    perim = 4 * a\n    area = a**2\n    print("obsah", area)\n    print("obvod", perim)\n
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", a*4)\n
###
1111
def area_perimeter(a):\n    print('obsah', a*a)\n    print('obvod', 4*a)\n
###
1111
def area_perimeter(a):\n    obsah=a*a\n    obvod=4*a\n    print("obsah", obsah)\n    print("obvod", obvod)\n
###
1111
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah" ,a*a)\n    print("obvod" ,a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah" ,a*a)\n    print("obvod" ,a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",a*4)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",4*a)
###
1111
def area_perimeter(a):\n    print("obsah", a*a)\n    print("obvod", 4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print("obsah",a**2)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    obsah = a * a\n    obvod = 4 * a\n    \n    print("obsah", obsah)\n    print("obvod", obvod)\n
###
1111
def area_perimeter(a):\n    print("obsah",a*a)\n    print("obvod",4*a)\n
###
1111
def area_perimeter(a):\n    print('obsah',a*a)\n    print('obvod',4*a)\n
###
1111
def area_perimeter(a):\n    print('obsah', a*a)\n    print('obvod', a*4)\n
###
1111
def area_perimeter(a):\n    print(a**2)\n    print(4*a)\n
def area_perimeter(a):\n    print("obsah", a**2)\n    print("obvod", 4*a)\n
###
1111
def magic_test(tears, horns, tails):\n    return False\n
def magic_test(tears, horns, tails):\n    return (tears >= 5 and horns >=1)\n
def magic_test(tears, horns, tails):\n    return (tears >= 5 and horns >=1) or (tails >= 3 and tears >=3)\n
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tails >= 3 and tears >= 3):\n        return True\n    return False\n
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tears >= 3 and tails >= 3):\n    	return True\n    else:\n        return False\n
###
1111
def magic_test(tears, horns, tails):\n    if tears>4 and horns>0:\n        return True\n    if tails>2 and tears>2:\n        return True\n    else: return False\n
###
1111
def magic_test(tears, horns, tails):\n    if tails>2:\n        if tears>2:\n            return True\n        else:\n            return False\n    else:\n        if horns>0:\n            if tears>4:\n                return True\n            else:\n                return False\n        else:\n            return False\n
###
1111
def magic_test(tears, horns, tails):\n    return (tears>=5 and horns>=1) or (tears>=3 and tails>=3) \n
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tears >= 3 and tails >= 3):\n        return True\n    else:\n    	return False\n
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >=1) or (tears >= 3 and tails >=3):\n        return True\n    else:\n        return False\n\n
###
1111
def magic_test(tears, horns, tails):\n    return (tears == 4 and horns == 3 and tails == 3)\n
def magic_test(tears, horns, tails):\n    return (tears == 10 and horns == 10 and tails == 10)\n
def magic_test(tears, horns, tails):\n    return (tears >= 5 and horns >=1) or( tears >= 3 and tails >=3)\n
###
1111
def magic_test(tears, horns, tails):\n    if tears>4 and horns>0:\n    	return True\n    elif tears>=3 and tails>2:\n        return True\n    else:\n        return False\n
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tears >= 3 and tails >= 3):\n        return True\n    else:\n        return False\n
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tears >= 3 and tails >= 3):\n    	return True\n	
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tears >= 3 and tails >= 3):\n    	return True\n    else:\n        return False\n	
###
1111
def magic_test(tears, horns, tails):\n    if (tears >= 5 and horns >= 1) or (tears >= 3 and tails >= 3):\n        return True\n    return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n    return True\n    	\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n    return True\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    return False
###
1111
def icecream_test(money, price):\n    if money >= price: return True\n    else: return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n    	return False
###
1111
def icecream_test(money, price):\n    if money < price:\n        return False\n    else:\n        return True\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n	\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n        return false\n
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    money>price\n    return True\n
def icecream_test(money, price):\n    if money>price: return True\n    return False\n
def icecream_test(money, price):\n    if money>price: return True\n    return False\n
def icecream_test(money, price):\n    if money>price: return True\n    return False\n
def icecream_test(money, price):\n    	if money>=price: return True\n    	return False\n
###
1111
def icecream_test(money, price):\n    if money>price:\n    	return True\n
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else: return False\n
def icecream_test(money, price):\n    if money<price:\n        return False\n    else: return True\n
###
1111
def icecream_test(money, price):\n    if money > price:\n    	return True\n    \n
def icecream_test(money, price):\n    if money > price:\n    	return True\n    else:\n        return False\n    \n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n    \n
###
1111
def icecream_test(money, price):\n    if money >= price :\n    	return True\n
def icecream_test(money, price):\n    if money >= price :\n    	return True\n    else :\n    	return False\n
###
1111
def icecream_test(money, price):\n    return True\n
def icecream_test(money, price):\n    if money > price:\n        return True\n    else:\n        return False \n
def icecream_test(money, price):\n    if money > price:\n        return True\n    elif money == price:\n        return True\n    else:\n        return False \n
###
1111
def icecream_test(money, price):\n    if(money>=price):\n        return True\n
def icecream_test(money, price):\n    if(money>=price):\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    return price <= money\n
###
1111
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price: return True
def icecream_test(money, price):\n    if money >= price: return True\n    else: return False
###
1111
def icecream_test(money, price):\n    return True if money >= price else False
###
1111
def icecream_test(money, price):\n    if money<price:\n        return False\n    else:\n        return True
###
1111
def icecream_test(money, price):\n    if money>price:\n        return True\n    else:\n        return False
def icecream_test(money, price):\n    if money>=price:\n        return True\n    else:\n        return False
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money > price :\n    	return True\n
def icecream_test(money, price):\n    if money > price :\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money > price :\n    	return True\n    elif money == price :\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if price<money:\n        return True\n    else:\n        return False
def icecream_test(money, price):\n    if price<=money:\n        return True\n    else:\n        return False
###
1111
def icecream_test(money, price):\n    if money>price or money==price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money<price:\n        return False\n    else:\n        return True\n    \n
###
1111
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n	if price<=money:\n		return True\n	else:\n    	return False\n
###
1111
def icecream_test(money, price):\n    if money > price or money == price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True\n
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if price<money:\n        return True\n
def icecream_test(money, price):\n    if price<money:\n        return True\n    else:\n        return False\n    \n
def icecream_test(money, price):\n    if price<=money:\n        return True\n    else:\n        return False\n    \n
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else: \n        return False\n
###
1111
def icecream_test(m, p):\n    if (m>p):\n    	return True\n
def icecream_test(m, p):\n    if (m>p):\n    	return True\n    else:\n        return False\n
def icecream_test(m, p):\n    if (m>=p):\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    return True\n
def icecream_test(money, price):\n    final = (money >= price)\n    return (final)\n
###
1111
def icecream_test(money, price):\n    if money>price:\n    	return True\n
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money<price:\n    	return False\n    else:\n        return True\n   \n
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n        return "True"\n    else:\n    	return "False"\n
###
1111
def icecream_test(money, price):\n    if money > price:\n    	return True\n    else:\n    	return False\n\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n    	return False\n\n
###
1111
def icecream_test(money, price):\n    if money < price:\n        return False\n    else:\n    	return True\n
###
1111
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n    	return False\n
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n    	return False\n
###
1111
def icecream_test(money, price):\n    if money > price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    return money>=price\n
###
1111
def icecream_test(money, price):\n    if(money>=price):\n    	return True\n
def icecream_test(money, price):\n    if(money>=price):\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    a=(money>price)\n    print(a)\n   \n
def icecream_test(money, price):\n    print(money-price<-1)   \n    return True\n
def icecream_test(money, price):\n    print(money>price and price<money)\n  \n    
def icecream_test(money, price):\n    if money>price:\n       a=money>price\n    \n    return True\n
def icecream_test(money, price):\n    return (money > price and money==price)\n
def icecream_test(money, price):\n    return (money > price or money== price)\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n    	return False\n
###
1111
def icecream_test(money, price):\n    if price < money:\n    	return True\n
def icecream_test(money, price):\n    if price < money:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if price <= money:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    return money>=price\n
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False
###
1111
def icecream_test(money, price):\n    return True\n
def icecream_test(money, price):\n    if (money>=price):\n    	return True\n    if not (money>price): \n        return False\n	\n
###
1111
def icecream_test(money, price):\n    if money > price:\n        return True\n    else:\n        return False
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n        return False
###
1111
def icecream_test(money, price):\n	if money > price: \n    	return True
def icecream_test(money, price):\n    if money>=price:\n        return True\n    else:\n        return False\n        \n
###
1111
def icecream_test(money, price):\n    if(money >= price):\n    	print(True)\n    if(money < price):\n    	print(False)
def icecream_test(money, price):\n    if(money >= price):\n    	return True\n    else:\n    	return False
###
1111
def icecream_test(money, price):\n    return True\n
def icecream_test(money, price):\n    return False\n
def icecream_test(money, price):\n    return True 
def icecream_test(money, price):\n    if(money >= price):\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money>price:\n        return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money>=price:\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money > price:\n    	return True\n
def icecream_test(money, price):\n    if money > price:\n    	return True\n	else:\n    	return False\n
def icecream_test(money, price):\n    if money > price:\n    	return True\n	else:\n    	return False\n
def icecream_test(money, price):\n   if money > price:\n    	return True\n   else: \n        return false\n
def icecream_test(money, price):\n   if money > price:\n    	return True\n   else: \n        return False\n
def icecream_test(money, price):\n   if money > price:\n    	return True\n   else: \n        return False\n
def icecream_test(money, price):\n   if money >= price:\n    	return True\n   \n   else: \n        return False\n
###
1111
def icecream_test(money, price):\n    if (money-price>=0):\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money < price:\n        True = money < price\n    return True\n
def icecream_test(money, price):\n    if money > price:\n        result = True\n    if money < price:\n        result = False\n    return True\n
def icecream_test(money, price):\n    c = False\n    d = True\n    money > price == d\n    money < price == c\n    return c or d\n
def icecream_test(money, price):\n    if money<price:\n        print("False")\n    else:\n        print("True")\n    return print(end="")\n
###
1111
def icecream_test(money, price):\n    return True\n
def icecream_test(money, price):\n    if money > price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money < price:\n    	return False\n    else:\n        return True\n
###
1111
def icecream_test(money, price):\n    if money>price:\n    	return True\n
def icecream_test(money, price):\n    if money>price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	check = True\n    else:\n        check = False\n	return check
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False
###
1111
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else\n    	return False\n
def icecream_test(money, price):\n    if money>=price:\n    	return True\n    else:\n    	return False\n
###
1111
def icecream_test(money, price):\n    return True\n
def icecream_test(money, price):\n    return True or False\n
def icecream_test(money, price):\n    if money>=price:\n        return True\n    else :\n    	return False\n
###
1111
def icecream_test(money, price):\n    return money>=price\n
###
1111
def icecream_test(money, price):\n    if money > price:\n   	 return True\n
def icecream_test(money, price):\n    if money > price:\n   		return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money >= price:\n   		return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False
###
1111
def icecream_test(money, price):\n    while price<money:\n    	return True\n
def icecream_test(money, price):\n    while price<money:\n    	return True\n    while money<price:\n        return False\n
def icecream_test(money, price):\n    while price<=money:\n    	return True\n    while money<=price:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money > price:\n        return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money >= price:\n        return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money > price:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    	return True\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        print(False)\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False \n
###
1111
def icecream_test(money, price):\n    if(money >= price) :\n    	return True\n    else :\n        return False\n
###
1111
def icecream_test(money, price):\n    if money >= price: \n    	return True\n    else:\n        return False\n    
###
1111
def icecream_test(money, price):\n    if(money >= price) :\n		return True\n    else :\n		return False\n
###
1111
def icecream_test(money, price):\n    if money > price:\n   		return True\n
def icecream_test(money, price):\n    if money > price:\n   		return True\n    else:\n        return False\n    	\n
def icecream_test(money, price):\n    if money >= price:\n   		return True\n    else:\n        return False\n    	\n
###
1111
def icecream_test(money, price):\n    if money >= price:\n    return True\n\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n\n\n
def icecream_test(money, price):\n    if money >= price:\n    	return True\n    else:\n        return False\n\n\n
###
1111
def icecream_test(money, price):\n    if money - price > 0:\n    	return True\n    else:\n        return False\n
def icecream_test(money, price):\n    if money - price >= 0:\n    	return True\n    else:\n        return False\n
###
1111
def print_ticket(age):\n    if age >= 18 and age < 73:\n        print("Cena: 100")\n    elif age <= 6:\n		print("Cena: 0")\n    elif age <= 75:\n    	print("Cena: 50")\n    #print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age <= 6:\n    	print("Cena:",0)\n    elif age < 18 or age > 70:\n   		print("Cena:", 50)\n    else:\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if((age < 18) or (age > 70)):\n        if(age < 6):\n            print("Cena:", 0)\n        else:\n            print("Cena:", 50)\n    else:\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age <= 6:\n        print("Cena: 0")\n    elif age > 70:\n        print("Cena: 50")\n    elif age > 6 and age <= 18:\n        print("Cena: 50")\n    else:\n        print("Cena: 100")\n    \n\n
###
1111
def print_ticket(age):\n    if age < 7:\n        print("Cena:", 0)\n    elif age > 70 or age < 18:\n        print("Cena:", 50)\n    else:\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age <= 6:\n        print("Cena:", 0)\n    elif 18 <= age <= 70:\n        print("Cena:", 100)\n    else:\n        print("Cena:", 50)\n
###
1111
def print_ticket(age):\n    if age>=18 and age<70:\n    	print("Cena:", 100)\n    elif age<6:\n        print("Cena:", 0)\n    else:\n        print("Cena:", 50)\n
###
1111
def print_ticket(age):\n    if age>=6 and age<18 or age>70:\n    	print ("Cena:", 50)\n    else:\n        if age<6:\n        	print ("Cena:",0)\n        else:\n    		print("Cena:", 100)\n
###
1111
def print_ticket(age):\n	if (age<=6):\n		print("Cena: 0")\n	else:\n		if (age<18) or (age>=70):\n			print("Cena: 50")\n		else:\n			print("Cena: 100")
###
1111
def print_ticket(age):\n    if(age>=18 and age<=70):\n    	print("Cena: 100")\n    elif(age<6):    \n    	print("Cena: 0")\n    else:\n    	print("Cena: 50")\n
###
1111
def print_ticket(age):\n    if age < 7:\n        print ("Cena:", 0)\n    elif age < 18 or age > 70 :\n        print ("Cena:", 50)\n    else:\n    	print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age>=18 and age<70:\n    	print("Cena:", 100)\n    elif (age<18 and age>6) or age>=70:\n        print("Cena:", 50)\n    elif age<=6:\n        print("Cena:", 0)\n    else:\n        print("Chyba")
###
1111
def print_ticket(age):\n    if age>=18 and age<=70:\n    	print("Cena:", 100)\n    elif age>70:\n        print("Cena:", 50)\n    elif age<6:\n        print("Cena:", 0)\n    elif age<18:\n        print("Cena:", 50)\n
###
1111
def print_ticket(age):\n    if age <= 6:\n    	print("Cena:", 0)\n    elif age < 18 or age > 70:\n    	print("Cena:", 100 // 2)\n    else:\n    	print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age>=18 and age<70:\n        x = 100\n    elif age<6:\n        x=0\n    else x=50\n    \n    \n    print("Cena:", x)\n
def print_ticket(age):\n    if age>=18 and age<70:\n        x = 100\n    elif age<6:\n        x=0\n    else:\n        x=50\n    \n    \n    print("Cena:", x)\n
###
1111
def print_ticket(age):\n    if age > 70 :\n        print("Cena:", 50)\n    elif age < 7 :\n        print("Cena:", 0)\n    elif age > 6 and age <18 :\n        print("Cena:", 50)\n    else :\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age <= 6:\n        print("Cena:", 0)\n    elif (age < 18) or (age >= 70):\n        print("Cena:", 50)\n    else:\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if 17 < age < 71:\n        print ("Cena: 100")\n    elif (70 < age) or (6<age<18):\n        print ("Cena: 50")\n    elif age < 6:\n        print ("Cena: 0")\n                              \n
###
1111
def print_ticket(age):\n    if (age < 6):\n    	print("Cena:", 0)\n    elif ((age < 18) or (age > 70)):\n        print("Cena:", 50)\n    else:\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age<=6:\n        print("Cena: 0")\n    elif age<=18 and age>6:\n        print("Cena: 50")\n    elif age>=70:\n        print("Cena: 50")\n    else:\n        print("Cena: 100")\n
###
1111
def print_ticket(x):\n    if 18 <= x < 70:\n    	print("Cena:", 100)\n    elif 6 < x < 18:\n       	print("Cena:", 50)\n    elif x >= 70:\n        print("Cena:", 50)\n    elif x <= 6:\n        print("Cena:", 0)\n
###
1111
def print_ticket(age):\n    if age > 18 and age < 70:\n    	print("Cena:", 100)\n    elif age < 6:\n        print("Cena:", 0)\n    else:\n        print("Cena:", 50)\n
###
1111
def print_ticket(age):\n    if (age < 18 and age > 6) or age > 70:\n        print('Cena:', 50)\n    elif age <= 6:\n        print('Cena:', 0)\n    else:\n        print("Cena:", 100)\n
###
1111
def print_ticket(age):\n	if (6<age<18)or(age>70):\n		print("Cena:", 50)\n	elif (age<6):\n		print("Cena:", 0)\n	else:\n		print("Cena:", 100)
###
1111
def print_ticket(age):\n    if age<6:\n        print ("Cena:", 0)\n    elif age < 18 or age>70:\n    	print("Cena:", 50)\n    else:\n        print ("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if age < 6:\n        print("Cena: 0")\n    elif age < 18:\n        print("Cena: 50")\n    elif age < 69:\n        print("Cena: 100")\n    else:\n        print("Cena: 50")\n
###
1111
def print_ticket(age):\n    if age > 18 and age < 70:\n        print("Cena:", 100)\n    elif age < 6:\n        print ("Cena:",0)\n    else:\n        print ("Cena:",50)\n    \n
###
1111
def print_ticket(age):\n    if age > 7 and age < 19 or age > 71:\n        print("Cena:", 50)\n    elif age < 7:\n        print("Cena:", 0)\n    else:\n        print("Cena:", 100)\n    print\n    \n
###
1111
def print_ticket(age):\n    if age > 18 and age < 70:\n    	print("Cena:", 100)\n    elif age < 6:\n        print("Cena:", 0)\n    else:\n        print("Cena:", 50)\n
###
1111
def print_ticket(age):\n    if age<6: print("Cena: 0")\n    elif age<18: print("Cena: 50")\n    elif age<70: print("Cena: 100")\n    else: print("Cena: 50")\n    \n
###
1111
def print_ticket(age):\n    if age > 70:\n         print("Cena:", 50)\n    elif age < 6:\n        print("Cena:", 0)\n    elif age < 18:\n        print("Cena:", 50)\n    else:\n        print("Cena:", 100)\n   \n
###
1111
def print_ticket(age):\n    if (age < 18 and age > 6) or (age > 70):\n    	print("Cena:", 50)\n    else:\n        if age > 18:\n    	print("Cena:", 100)\n        else:\n            print ("Cena:",0)\n
###
1111
def print_ticket(age):\n    if age < 6:\n        print('Cena:', 0)\n        \n    elif age in range(6,19):\n        print('Cena:', 50)\n    elif age in range(69,100):\n        print('Cena:', 50)\n    else:\n    	print("Cena:", 100)\n
###
1111
def print_ticket(age):\n    if 18 < age < 70:\n    	print("Cena:", 100)\n    elif age < 6:\n        print("Cena:", 0)\n    else:\n        print("Cena:", 50)\n
###
1111
def foobar3(n):\n    for foobar3 in range (1, n+1):\n        if foobar3 % 3 == 0:\n            print(foobar3, " foo")\n        else:\n            print(foobar3, " bar")
def foobar3(n):\n    for foobar3 in range (1, n+1):\n        if foobar3 % 3 == 0:\n            print(foobar3, " foo")\n        else:\n            print(foobar3, " bar")
def foobar3(n):\n    for foobar3 in range (1, n+1):\n        if foobar3 % 3 == 0:\n            print(foobar3, "foo")\n        else:\n            print(foobar3, "bar")
###
1111
def foobar3(n):\n    for i in range (n):\n        if (i+1)%3==0: print(i+1,"foo")\n        else: print(i+1,"bar")\n       \n
###
1111
def foobar3(n):\n    for x in range(1, n+1):\n        if((x%3)==0):\n            print(x, "foo");\n        else:\n            print(x, "bar");\n
###
1111
def foobar3(n):\n  for i in range(1, n+1):\n      if i % 3 == 0:\n           ozn = "foo"\n      else:\n           ozn = "bar"\n      print(i, ozn)\n
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            print(i, " foo")\n        else:\n            print(i, " bar")
def foobar3(n):\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            print(i, " foo")\n        else:\n            print(i, " bar")
def foobar3(n):\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            print(i, "foo")\n        else:\n            print(i, "bar")
###
1111
def foobar3(n):\n    for i in range(1, n + 1):\n    	print("{} {}".format(i, "foo" if i % 3 == 0 else "bar"))\n
###
1111
def foobar3(n):\n    i = 0\n    while i < n:\n        i += 1\n        if i % 3 == 0:\n            print('foo')\n        else:\n            print('bar')\n
def foobar3(n):\n    i = 0\n    while i < n:\n        i += 1\n        if i % 3 == 0:\n            print('foo')\n        else:\n            print('bar')\n
def foobar3(n):\n    i = 0\n    while i < n:\n        i += 1\n        if i % 3 == 0:\n            print(i,'foo')\n        else:\n            print(i,'bar')\n
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if i % 3 == 0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        if i % 3 == 0:\n    		print(i, "foo")\n        else:\n            print(i, "bar")\n
def foobar3(n):\n    for i in range(1,n+1):\n        if i % 3 == 0:\n    		print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n    	if i+1%3==0:\n        	print(i+1,"foo")\n            else: print(i+1,"bar")
def foobar3(n):\n    for i in range(n):\n    	if (i+1)%3==0:\n        	print(i+1,"foo")\n            else: print(i+1,"bar")
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        if i%3 == 0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        print(i+1,end=' ')\n        if (i+1)%3 == 0:\n            print('foo')\n        else:\n            print('bar')\n            \n\n
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if(i%3==0):print(i,"foo")\n        else:print(i,"bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3:\n            print (i+1 ,"bar")\n        else:\n            print (i+1 ,"foo")
###
1111
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print(i+1, "foo")\n        else:\n            print(i+1, "bar")\n
###
1111
def foobar3(n):\n	for i in range(n):\n		if ((i+1)%3 == 0):\n			print("foo")\n		else:\n			print("bar")\n
def foobar3(n):\n	for i in range(1,n+1):\n		if (i%3 == 0):\n			print(i, "foo")\n		else:\n			print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if i % 3 == 0:\n            print("foo")\n        else:\n            print("bar")\n\n
def foobar3(n):\n    for i in range(1,n+1):\n        if i % 3 == 0:\n            print(i,"foo")\n        else:\n            print(i,"bar")\n\n
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if(i%3==0):\n            print(i,"foo")\n        else:\n            print(i,"bar")\n
###
1111
def foobar3(n):\n    for i in range (n):\n        i = i+1\n        if i % 3 == 0:\n            print(i, "foo")\n        else:\n            print (i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print("foo")\n        else:\n            print("bar")\n            \n
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print("foo")\n        else:\n            print("bar")\n            \n
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print("foo")\n        else:\n            print("bar")\n            \n
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print(i+1, "foo")\n        else:\n            print(i+1, "bar")\n            \n
###
1111
def foobar3(n):\n    for i in range(1, n + 1):\n        print(i, end=" ")\n        x = i %3\n        if x == 0:\n            print("foo")\n        else:\n            print("bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print("foo")\n        else:\n            print("bar")\n    \n
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print("foo")\n        else:\n            print("bar")\n    \n
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print("foo")\n        else:\n            print("bar")\n    \n
def foobar3(n):\n    for i in range(n):\n        if (i+1)%3==0:\n            print(i+1,"foo")\n        else:\n            print(i+1,"bar")\n    \n
###
1111
def foobar3(n):\n    for i in range (n):\n        if (i+1)%3== 0 :\n        	print (i+1, "foo")\n        else :\n            print (i+1, "bar")
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        if i%3 == 0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        print(i+1)\n        if i%3==0:\n            print("foo")\n        else:\n            print("bar")
def foobar3(n):\n    for i in range(n):\n        if i%3==0:\n            print(i+1,"foo")\n        else:\n            print(i+1,"bar")
def foobar3(n):\n    for i in range(1,n):\n        if i%3==0:\n            print(i,"foo")\n        else:\n            print(i,"bar")
def foobar3(n):\n    for i in range(1,n):\n        if i%3==0:\n            print(i,"foo")\n        else:\n            print(i,"bar")
def foobar3(n):\n    for i in range(1,n+1):\n        if i%3==0:\n            print(i,"foo")\n        else:\n            print(i,"bar")
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if i%3==0:\n            print(i,"foo")\n        else:\n            print(i,"bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        if((i+1)%3==0):\n            odpoved="foo"\n        else:\n            odpoved="bar"\n        print(i+1, odpoved)\n
###
1111
def foobar3(n):\n    for i in range (1, n+1):\n    	if i %3 ==0:\n			print (i, "foo")\n            else:\n                print (i, "bar")
###
1111
def foobar3(n):\n    for i in range(n):\n        a = i+1\n        if a%3 == 0:\n            print(a,"foo")\n        else:\n            print(a,"bar")
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if (i%3!=0):\n            print(i,"bar")\n        else:\n            print (i,"foo")\n
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        if i % 3 == 0:\n            print(i, "foo")\n        else:\n            print(i, "bar")
###
1111
def foobar3(n):\n    for number in range(1,n):\n        if number%3==0:\n            print(number,"foo")\n        else:\n        	print(number,"bar")\n
def foobar3(n):\n    for number in range(1,n+1):\n        if number%3==0:\n            print(number,"foo")\n        else:\n        	print(number,"bar")\n
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        if i%3 == 0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        if i%3==0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(1,n+1):\n        if i % 3:\n            print(i, 'bar')\n        else:\n            print(i, 'foo')\n    #print("foobar")\n
###
1111
def foobar3(n):\n	for i in range(1,n+1):\n		if i % 3 == 0:\n			print(i,"foo")\n		else:\n			print(i,"bar")\n
###
1111
def foobar3(n):\n    for i in range (n):\n        if i+1 % 3 == 0:\n    	print(i+1, "foo")\n        else:\n            print (i+1,"bar")\n
def foobar3(n):\n    for i in range (n):\n        if (i+1) % 3 == 0:\n    	print(i+1, "foo")\n        else:\n            print (i+1,"bar")\n
###
1111
def foobar3(n):\n    for i in range(n+1):\n        if  i%3==0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
def foobar3(n):\n    for i in range(1,n):\n        if  i%3==0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
def foobar3(n):\n    for i in range(1,n+1):\n        if  i%3==0:\n            print(i, "foo")\n        else:\n            print(i, "bar")\n
###
1111
def foobar3(n):\n    for i in range(n):\n        if ((i+1) % 3 == 0):\n            print(i+1,"foo")\n        else:\n            print(i+1,"bar")
###
1111
def foobar3(n):\n    for i in range(1, n+1):\n        print(i, end=" ")\n        if i % 3 == 0:\n            print("foo")\n        else:\n            print("bar")
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n - 2):\n        print("#")\n    print("#"*n)\n    for i in range(n - 2):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(int(n/2)):\n        print("#")\n    print("#"*n)\n    for i in range(int(n/2)):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n - 2):\n        print("#")\n    print("#"*n)\n    for i in range(n - 2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n//2):\n        print("#")\n    print("#"*n)\n    for i in range((n//2)):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(1,n-1):\n        print("#")\n    print("#"*n)\n    for i in range(1,n-1):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n//2):\n        print("#")\n    print("#"*n)\n    for i in range(n//2):\n        print(" "*n + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n):\n        print("#")\n    print("#"*n)\n    for i in range(n):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(int(n/2)):\n        print("#")\n    print("#"*n)\n    for i in range(int(n/2)):\n        print(" "*(n - 1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(int(n-2)):\n        print("#")\n    print("#"*n)\n    for i in range(int(n-2)):\n        print(" "*(n - 1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n//2):\n        print("#")\n    print("#"*n)\n    for i in range(n//2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n//2):\n        print("#")\n    print("#"*n)\n    for i in range(n//2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n - 2):\n        print("#")\n    print("#"*n)\n    for i in range(n - 2):\n        print(" " * (n - 1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(2):\n        print("#")\n    print("#"*n)\n    for i in range(2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(1,n-1):\n        print("#")\n    print("#"*n)\n    for i in range(1,n-1):\n        print(" "*n + "#")\n    print("#"*n)
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n):\n        print("#")\n    print("#"*n)\n    for i in range(n):\n        print(" "*n + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*(n))\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n//2):\n        print("#")\n    print("#"*n)\n    for i in range(n//2):\n        print(" "*n + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n):\n        print("#")\n    print("#"*n)\n    for i in range(n):\n        print(" "*n + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range((n-2)):\n        print("#")\n    print("#"*n)\n    for i in range((n-2)):\n        print(" "*n + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*(n-1))\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*(n))\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n-2):\n        print(" "*(n-1) + "#")\n    print("#"*n)\n
###
1111
def big_five(n):\n    print("#"*n)\n    for i in range(n-2):\n        print("#")\n    print("#"*n)\n    for i in range(n - 2):\n        print(" "*(n - 1) + "#")\n    print("#"*n)\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1=="K" and symbol2=="N": print("K")\n    elif symbol1=="K" and symbol2=="P": print("P")\n    elif symbol1=="P" and symbol2=="K": print("P")\n    elif symbol1=="P" and symbol2=="N": print("N")\n    elif symbol1=="N" and symbol2=="K": print("K")\n    elif symbol1=="N" and symbol2=="P": print("N")\n    else: print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K":\n        if symbol2 == "N":\n            print(symbol1)\n        else:\n            print(symbol2)\n    elif symbol1 == "N":\n        if symbol2 == "P": \n            print(symbol1)\n        else:\n            print(symbol2)\n    elif symbol1 == "P":\n        if symbol2 == "K": \n            print(symbol1)\n        else:\n            print(symbol2)\n
###
1111
def decide(symbol1, symbol2):\n    if(symbol1 != symbol2):\n        if symbol1 == "K":\n            if symbol2 == "P":\n                print("P")\n            else:\n                print("K")\n        if symbol2 == "K":\n            if symbol1 == "P":\n                print("P")\n            else:\n                print("K")\n        if symbol1 == "N":\n            if symbol2 == "P":\n                print("N")\n        if symbol2 == "N":\n            if symbol1 == "P":\n                print("N")\n    else:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1=="K" and symbol2=="N":\n        print ("K")\n    elif symbol2=="K" and symbol1=="N":\n        print ("K")\n    elif symbol1=="K" and symbol2=="P":\n        print ("P")\n    elif symbol1=="P" and symbol2=="K":\n        print ("P")\n    elif symbol1=="P" and symbol2=="N":\n        print ("N")\n    elif symbol1=="N" and symbol2=="P":\n        print ("N")\n    else: print("Remiza")\n    \n    \n    
###
1111
def decide(symbol1, symbol2):\n    if symbol1=="K":\n        if symbol2=="N": print(symbol1)\n        elif symbol2=="P": print(symbol2)\n        else: print("Remiza")\n    if symbol1=="N":\n        if symbol2=="P": print(symbol1)\n        elif symbol2=="K": print(symbol2)\n        else: print("Remiza")\n    if symbol1=="P":\n        if symbol2=="K": print(symbol1)\n        elif symbol2=="N": print(symbol2)\n        else: print("Remiza")
###
1111
def decide(symbol1, symbol2):\n    symbols = symbol1 + symbol2\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbols == 'KN' or symbols == 'NK':\n        print("K")\n    elif symbols == 'NP' or symbols == 'PN':\n        print("N")\n    elif symbols == 'KP' or symbols == 'PK':\n        print("P")\n        \n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == 'K' and symbol2 == 'N':\n        print(symbol1)\n    elif symbol1 == 'K' and symbol2 == 'P':\n        print(symbol2)\n    else:\n        print(symbol1)\n
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == 'K' and symbol2 == 'N':\n        print(symbol1)\n    elif symbol1 == 'K' and symbol2 == 'P':\n        print(symbol2)\n    elif symbol1 == 'N' and symbol2 == 'P':\n        print(symbol1)\n    elif symbol1 == 'N' and symbol2 == 'K':\n        print(symbol2)\n    elif symbol1 == 'P' and symbol2 == 'K':\n        print(symbol1)\n    else:\n        print(symbol2)\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1=="P" and symbol2=="K" or symbol1=="K" and symbol2=="P":\n        print("P")\n    elif symbol1=="K" and symbol2=="N" or symbol1=="N" and symbol2=="K":\n        print("K")\n    elif symbol1=="P" and symbol2=="N" or symbol1=="N" and symbol2=="P":\n        print("N")\n    else:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1=="K" and symbol2=="N" or symbol1=="N" and symbol2=="K":\n        print ("K")\n    else:\n        if symbol1=="K" and symbol2=="P" or symbol1=="P" and symbol2=="K":\n            print ("P")\n        else:\n            if symbol1=="N" and symbol2=="P" or symbol1=="P" and symbol2=="N":\n                print ("N")\n            else:\n                print ("Remiza")
###
1111
def decide(symbol1, symbol2):\n    if symbol1 != symbol2:\n        if symbol1=='K':\n            if symbol2 == 'N':\n                print(symbol1)\n            else:\n                print(symbol2)\n        else:\n            if symbol1 =='N':\n                if symbol2 =='P':\n                    print(symbol1)\n                else:\n                    print(symbol2)\n            else:\n                if symbol2 =='K':\n                    print(symbol1)\n                else:\n                    print(symbol2)\n                	\n    else:    	\n    	print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if (symbol1==symbol2):\n        print("remiza")\n    else:\n        if(symbol1=="K" and symbol2=="N")or(symbol1=="N" and symbol2=="K"):\n            print("K")\n        elif(symbol1=="N" and symbol2=="P")or(symbol1=="P" and symbol2=="N"):\n            print("N")\n        else:\n            print("P")\n
def decide(symbol1, symbol2):\n    if (symbol1==symbol2):\n        print("Remiza")\n    else:\n        if(symbol1=="K" and symbol2=="N")or(symbol1=="N" and symbol2=="K"):\n            print("K")\n        elif(symbol1=="N" and symbol2=="P")or(symbol1=="P" and symbol2=="N"):\n            print("N")\n        else:\n            print("P")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n    	print("Remiza")\n    if (symbol1 == "K" and symbol2 == "N") or (symbol1 == "N" and symbol2 == "K"):\n    	print ("K")\n    if (symbol1 == "P" and symbol2 == "N") or (symbol1 == "N" and symbol2 == "P"):\n    	print ("N")\n    if (symbol1 == "K" and symbol2 == "P") or (symbol1 == "P" and symbol2 == "K"):\n    	print ("P")
###
1111
def decide(symbol1, symbol2):\n    if (symbol1=="K" and symbol2=="N") or (symbol2=="K" and symbol1=="N"):\n        print("K")\n    if symbol1=="K" and symbol2=="P" or (symbol2=="K" and symbol1=="P"):\n        print("P")\n    if symbol1=="N" and symbol2=="P" or (symbol2=="N" and symbol1=="P"):\n        print("N")\n    elif symbol1==symbol2:\n        print("remiza")\n
def decide(symbol1, symbol2):\n    if (symbol1=="K" and symbol2=="N") or (symbol2=="K" and symbol1=="N"):\n        print("K")\n    if symbol1=="K" and symbol2=="P" or (symbol2=="K" and symbol1=="P"):\n        print("P")\n    if symbol1=="N" and symbol2=="P" or (symbol2=="N" and symbol1=="P"):\n        print("N")\n    elif symbol1==symbol2:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    	if symbol1=="K" and symbol2=="P":\n            print()\n        elif symbol1=="K" and symbol2=="N":\n            print("K")\n        elif symbol1=="P" and symbol2=="N":\n            print("N")\n        else:\n            print("Remiza")\n
def decide(symbol1, symbol2):\n    	if symbol1=="K" and symbol2=="P":\n            print()\n        elif symbol1=="K" and symbol2=="N":\n            print("K")\n        elif symbol1=="P" and symbol2=="N":\n            print("N")\n        else:\n            print("Remiza")\n
def decide(symbol1, symbol2):\n    	if symbol1=="K" and symbol2=="P":\n            print("P")\n        elif symbol1=="K" and symbol2=="N":\n            print("K")\n        elif symbol1=="P" and symbol2=="N":\n            print("N")\n        else:\n            print("Remiza")\n
def decide(symbol1, symbol2):\n	if symbol1=="K" and symbol2=="P":\n        print("P")\n    elif symbol1=="K" and symbol2=="N":\n        print("K")\n    elif symbol1=="P" and symbol2=="N":\n        print("N")\n    else:\n        print("Remiza")\n
def decide(symbol1, symbol2):\n    if (symbol1=="K" and symbol2=="P") or (symbol2=="K" and symbol1=="P"):\n        print("P")\n    elif (symbol1=="K" and symbol2=="N") or (symbol2=="N" and symbol1=="K"):\n 		print("K")\n    elif (symbol1=="N" and symbol2=="P") or (symbol2=="P" and symbol1=="N"):\n        print("N")\n    else:\n        print("Remiza")\n
def decide(symbol1, symbol2):\n    if (symbol1=="K" and symbol2=="P") or (symbol2=="K" and symbol1=="P"):\n        print("P")\n    elif (symbol1=="K" and symbol2=="N") or (symbol2=="K" and symbol1=="N"):\n 		print("K")\n    elif (symbol1=="N" and symbol2=="P") or (symbol2=="N" and symbol1=="P"):\n        print("N")\n    else:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == "K" or symbol2 == "K":\n        if symbol1 == "N" or symbol2 == "N":\n            print("K")\n        elif symbol1 == "P" or symbol2 == "P":\n            print("P")\n        else:\n            print("Remiza")\n    elif symbol1 == "P" or symbol2 == "P":\n        if symbol1 == "N" or symbol2 == "N":\n            print("N")\n        else:\n            print("Remiza")\n    else:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    x = symbol1 + symbol2\n    if x=="KN" or x=="NK":\n        print("K")\n    elif x=="PN" or x=="NP":\n        print("N")\n    elif x=="KP"or =="PK":\n        print ("P")\n    else:\n        \n        \n        print("Remiza")\n
def decide(symbol1, symbol2):\n    x = symbol1 + symbol2\n    if x=="KN" or x=="NK":\n        print("K")\n    elif x=="PN" or x=="NP":\n        print("N")\n    elif x=="KP"or =="PK":\n        print ("P")\n    else:\n        print("Remiza")\n
def decide(symbol1, symbol2):\n    x = symbol1 + symbol2\n    if x=="KN" or x=="NK":\n        print("K")\n    elif x=="PN" or x=="NP":\n        print("N")\n    elif x=="KP"or =="PK":\n        print ("P")\n    else:\n        print("Remiza")\n
def decide(symbol1, symbol2):\n    x = symbol1 + symbol2\n    if x=="KN" or x=="NK":\n        print("K")\n    elif x=="PN" or x=="NP":\n        print("N")\n    elif x=="KP"or x=="PK":\n        print ("P")\n    else:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == "K" and symbol2 == "N" or symbol1 == "N" and symbol2 == "K" :\n        print ("K")\n    elif symbol1 == "P" and symbol2 == "K" or symbol1 == "K" and symbol2 == "P" :\n        print ("P")\n    elif symbol1 == "N" and symbol2 == "P" or symbol1 == "P" and symbol2 == "N" :\n        print ("N")\n    else :\n    	print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n	if (symbol1 == "K") and (symbol2 == "N"):\n		print("K")\n	elif (symbol1 == "K") and (symbol2 == "P"):\n		print("P")\n	elif (symbol1 == "N") and (symbol2 == "K"):\n		print("K")\n	elif (symbol1 == "N") and (symbol2 == "P"):\n		print("N")\n	elif (symbol1 == "P") and (symbol2 == "N"):\n		print("N")\n	elif (symbol1 == "P") and (symbol2 == "K"):\n		print("P")\n	elif symbol1 == symbol2:\n		print("Remiza")
###
1111
def decide(symbol1, symbol2):\n	if (symbol1=="K" and symbol2=="N")or(symbol2=="K" and symbol1=="N"):\n    	print("K") \n	elif (symbol1=="K" and symbol2=="P")or(symbol2=="K" and symbol1=="P"):\n    	print("P")\n	elif (symbol1=="N" and symbol2=="P")or(symbol2=="N" and symbol1=="P"):\n    	print("N")\n	elif (symbol1==symbol2):\n    	print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print("K")\n    elif symbol1 == "P" and symbol2 == "K":\n        print("P")\n    
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print("K")\n    elif symbol1 == "P" and symbol2 == "K":\n        print("P")\n    elif symbol1 == "N" and symbol2 == "K":\n        print("K")
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print("K")\n    elif symbol1 == "P" and symbol2 == "K":\n        print("P")\n    elif symbol1 == "N" and symbol2 == "K":\n        print("K")\n    elif symbol1 == "K" and symbol2 == "P":\n        print("P")
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print("K")\n    elif symbol1 == "P" and symbol2 == "K":\n        print("P")\n    elif symbol1 == "N" and symbol2 == "K":\n        print("K")\n    elif symbol1 == "K" and symbol2 == "P":\n        print("P")\n    elif symbol1 == "P" and symbol2 == "N":\n        print("N")
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print("K")\n    elif symbol1 == "P" and symbol2 == "K":\n        print("P")\n    elif symbol1 == "N" and symbol2 == "K":\n        print("K")\n    elif symbol1 == "K" and symbol2 == "P":\n        print("P")\n    elif symbol1 == "P" and symbol2 == "N":\n        print("N")\n    elif symbol1 == "N" and symbol2 == "P":\n        print("N")
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == "K" and symbol2 == "N" or symbol1 == "N" and symbol2 == "K":\n        print("K")\n    elif symbol1 == "K" and symbol2 == "P" or symbol1 == "P" and symbol2 == "K":\n		print("P")\n    elif symbol1 == "P" and symbol2 == "N" or symbol1 == "N" and symbol2 == "P":\n		print("N")\n    else:\n    	print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n	if ((symbol1=="K") and (symbol2=="P")) or ((symbol1=="P") and (symbol2=="K")):\n		print("P")\n\n	elif ((symbol1=="N") and (symbol2=="K")) or ((symbol1=="K") and (symbol2=="N")):\n		print("K")\n\n	elif ((symbol1=="P") and (symbol2=="N")) or ((symbol1=="N") and (symbol2=="P")):\n		print("N")\n\n	elif symbol1 == symbol2:\n		print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if(symbol1==symbol2):\n        print("Remiza")\n    elif((symbol1=="K" and symbol2=="N") or (symbol2=="K" and symbol1=="N")):\n        print("K")\n    elif((symbol1=="N" and symbol2=="P") or (symbol2=="N" and symbol1=="P")):\n        print("N")\n    elif((symbol1=="K" and symbol2=="P") or (symbol2=="K" and symbol1=="P")):\n        print("P")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print ("K")\n    elif symbol1 == "K" and symbol2 == "P":\n        print ("P")\n    elif symbol1 == "P" and symbol2 == "N":\n        print ("N")\n    elif symbol1 == "P" and symbol2 == "K":\n        print ("P")\n    elif symbol1 == "N" and symbol2 == "P":\n        print ("N")\n    elif symbol1 == "N" and symbol2 == "K":\n        print ("K")\n        \n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    elif symbol1 == "K" and symbol2 == "N":\n        print ("K")\n    elif symbol1 == "K" and symbol2 == "P":\n        print ("P")\n        \n    elif symbol1 == "P" and symbol2 == "N":\n        print ("N")\n        \n    elif symbol1 == "P" and symbol2 == "K":\n        print ("P")\n    elif symbol1 == "N" and symbol2 == "P":\n        print ("N")\n    else:\n        print("K")\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n    	print("Remiza")\n    elif (symbol1 == "K" and symbol2 == "N") or (symbol1 == "N" and symbol2 == "P") or (symbol1 == "P" and symbol2 == "K"):\n        print(symbol1)\n    else:\n        print(symbol2)
###
1111
def decide(symbol1, symbol2):\n    if symbol1 is "K" and symbol2 is "N":\n        print("K")\n    elif symbol1 is "P" and symbol2 is "K":\n        print("P")\n    elif symbol1 is "P" and symbol2 is "N":\n        print("N")\n    else:\n        print("Remiza")\n
def decide(symbol1, symbol2):\n    if (symbol1 is "K" and symbol2 is "N") or (symbol1 is "N" and symbol2 is "K"):\n        print("K")\n    elif(symbol1 is "P" and symbol2 is "K") or (symbol1 is "K" and symbol2 is "P"):\n        print("P")\n    elif (symbol1 is "P" and symbol2 is "N") or (symbol1 is "N" and symbol2 is "P"):\n        print("N")\n    else:\n        print("Remiza")\n
###
1111
def decide(symbol1, symbol2):\n    if (symbol1=="K" and symbol2=="N") or (symbol1=="N" and symbol2=="P") or (symbol1=="P" and symbol2=="K"):\n        print(symbol1)\n    elif symbol1==symbol2: \n        print("Remiza")\n    else:\n        print(symbol2)\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n        print("Remiza")\n    else:\n        if (symbol1+symbol2 == "KN" or symbol1+symbol2 == "NK"):\n            print("K")\n        elif (symbol1+symbol2 == "PK" or symbol1+symbol2 == "KP"):\n            print("P")\n        elif (symbol1+symbol2 == "PN" or symbol1+symbol2 == "NP"):\n            print("N")\n   \n
###
1111
def decide(symbol1, symbol2):\n    if (symbol1 == symbol2):\n        print("Remiza")\n    elif ((symbol1 == "K" and symbol2) == "N" or \\n          (symbol1 == "N" and symbol2) == "P" or \\n          (symbol1 == "P" and symbol2) == "K"):\n        print(symbol1)\n    else:\n        print(symbol2)\n
###
1111
def decide(symbol1, symbol2):\n	if symbol1 == "K" and symbol2 == "N" or symbol1 == "N" and symbol2 == "P" or symbol1 == "P" and symbol2 == "K":\n		print(symbol1)\n	elif symbol1 == symbol2:\n		print("remiza")\n	else:\n		print(symbol2)
def decide(symbol1, symbol2):\n	if symbol1 == "K" and symbol2 == "N" or symbol1 == "N" and symbol2 == "P" or symbol1 == "P" and symbol2 == "K":\n		print(symbol1)\n	elif symbol1 == symbol2:\n		print("Remiza")\n	else:\n		print(symbol2)
###
1111
def decide(symbol1, symbol2):\n    if (symbol1 == symbol2):\n    	print("Remiza")\n    elif ((symbol1 == 'K' and symbol2 == 'N') or (symbol1 == 'N' and symbol2 == 'P') or (symbol1 == 'P' and symbol2 == 'K')):\n    	print(symbol1)\n    else:\n    	print(symbol2)\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    if symbol1>symbol2:\n        print(symbol1)\n    else:\n        print(symbol2)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    if symbol1>symbol2:\n        print(symbol1)\n    else:\n        print(symbol2)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    if symbol1>symbol2:\n        print(symbol1)\n    if symbol1<symbol2:\n        print(symbol2)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    if symbol1=="K" and symbol2=="N":\n        print(symbol1)\n    if symbol1=="N" and symbol2=="P":\n        print(symbol1)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    if symbol1=="K" and symbol2=="N":\n        print(symbol1)\n    if symbol1=="N" and symbol2=="P":\n        print(symbol1)\n    if symbol1=="P" and symbol2=="K":\n        print(symbol1)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    if symbol1=="K" and symbol2=="N":\n        print(symbol1)\n    else:\n        print(symbol2)\n    if symbol1=="N" and symbol2=="P":\n        print(symbol1)\n    if symbol1=="P" and symbol2=="K":\n        print(symbol1)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    elif symbol1=="K" and symbol2=="N":\n        print(symbol1)\n    elif symbol1=="K" and symbol2=="P":\n        print(symbol2)\n    if symbol1=="N" and symbol2=="P":\n        print(symbol1)\n    if symbol1=="P" and symbol2=="K":\n        print(symbol1)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    elif symbol1=="K" and symbol2=="N":\n        print(symbol1)\n    elif symbol1=="K" and symbol2=="P":\n        print(symbol2)\n    elif symbol1=="N" and symbol2=="P":\n        print(symbol1)\n    elif symbol1=="N" and symbol2=="K":\n        print(symbol2)\n    if symbol1=="P" and symbol2=="K":\n        print(symbol1)\n
def decide(symbol1, symbol2):\n    if symbol1==symbol2:\n    	print("Remiza")\n    elif symbol1=="K" and symbol2=="N":\n        print(symbol1)\n    elif symbol1=="K" and symbol2=="P":\n        print(symbol2)\n    elif symbol1=="N" and symbol2=="P":\n        print(symbol1)\n    elif symbol1=="N" and symbol2=="K":\n        print(symbol2)\n    elif symbol1=="P" and symbol2=="K":\n        print(symbol1)\n    elif symbol1=="P" and symbol2=="N":\n        print(symbol2)\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == 'K' and symbol2 == 'N':\n        print('K')\n    elif symbol1 == 'P' and symbol2 == 'K':\n        print('P')\n        \n    else:\n        print("Remiza")\n
def decide(symbol1, symbol2):\n    if symbol1 == 'K'and symbol2 == 'N':\n        print('K')\n    elif symbol1 == 'N'and symbol2 == 'P':\n        print('N')\n    elif symbol1 == 'P'and symbol2 == 'K':\n        print('P')\n    elif symbol1 == 'N'and symbol2 == 'P':\n        print('N')\n    elif symbol1 == 'N'and symbol2 == 'N':\n        print('Remiza')\n    elif symbol1 == 'P'and symbol2 == 'P':\n        print('Remiza')\n    elif symbol1 == 'K'and symbol2 == 'K':\n        print('Remiza')\n\n\n
def decide(symbol1, symbol2):\n    if symbol1 == 'K'and symbol2 == 'N':\n        print('K')\n    elif symbol1 == 'N'and symbol2 == 'P':\n        print('N')\n    elif symbol1 == 'P'and symbol2 == 'K':\n        print('P')\n    elif symbol1 == 'N'and symbol2 == 'P':\n        print('N')\n    elif symbol1 == 'N'and symbol2 == 'N':\n        print('Remiza')\n    elif symbol1 == 'P'and symbol2 == 'P':\n        print('Remiza')\n    elif symbol1 == 'K'and symbol2 == 'K':\n        print('Remiza')\n    elif symbol2 == 'K'and symbol1 == 'N':\n        print('K')\n    elif symbol2 == 'N'and symbol1 == 'P':\n        print('N')\n    elif symbol2 == 'P'and symbol1 == 'K':\n        print('P')\n    elif symbol2 == 'N'and symbol1 == 'P':\n        print('N')\n    elif symbol2 == 'N'and symbol1 == 'N':\n        print('Remiza')\n    elif symbol2 == 'P'and symbol1 == 'P':\n        print('Remiza')\n    elif symbol2 == 'K'and symbol1 == 'K':\n        print('Remiza')\n\n\n
###
1111
def decide(symbol1, symbol2):\n    if symbol1 == symbol2:\n    	print("Remiza")\n    elif (symbol1 == "K" and symbol2 == "N") or (symbol1 == "N" and symbol2 == "P") or (symbol1 == "P" and symbol2 == "K"):\n        print(symbol1)\n    else:\n        print(symbol2)\n
###
1111
def check_sudoku(row):\n    missing = 0\n    for i in range(1,10):\n        try:\n            index = row.index(i)\n        except ValueError:\n            missing += 1\n        else:\n            row.pop(index)\n    if(len(row) == 0 and missing == 0):\n        return True\n    else:\n        return False
###
1111
def check_sudoku(row):\n    numbers = {}\n    for x in range(min(row), max(row) + 1):\n        numbers[x] = False\n    for x in row:\n        if 9 < x or x < 1 or numbers[x]:\n    		return False\n        else:\n        	numbers[x] = True\n    for key, val in numbers.items():\n        if not val:\n            return False\n    return True\n
###
1111
def check_sudoku(row):\n    check_row=[1, 2, 3, 4, 5, 6, 7, 8, 9]\n    if check_row!=sorted(row):\n        return False\n    else: return True\n\n
###
1111
def is_prime(k):\n    prime = True\n    for i in range(2,k):\n        if k % i == 0:\n            prime = False\n    return prime\ndef print_primes(n):\n    for i in range(1,n):\n        if is_prime(i):\n        	print(i)\n
def print_primes(n):\n    moj = []\n    for i in range(2,500):\n        prime = True\n        for j in range(2,i):\n            if i % j == 0:\n                prime = False\n        if prime == True:\n            moj.append(i)\n    for z in range(n):\n        print(moj[z])
def print_primes(n):\n    moj = []\n    for i in range(2,10000):\n        prime = True\n        for j in range(2,i):\n            if i % j == 0:\n                prime = False\n        if prime == True:\n            moj.append(i)\n    for z in range(n):\n        print(moj[z])
def print_primes(n):\n    moj = []\n    for i in range(2,2000):\n        prime = True\n        for j in range(2,i):\n            if i % j == 0:\n                prime = False\n        if prime == True:\n            moj.append(i)\n    for z in range(n):\n        print(moj[z])
###
1111
def print_primes(n):\n    t=0\n    c=0\n    while c<n:\n        if IsPrime(t)==True:\n            print(t)\n            c+=1\n        t+=1\n            \n\ndef IsPrime(p):\n    c=0\n    for i in range (1,p+1):\n        if p%i==0:\n            c+=1\n    if c==2:\n        return True
###
1111
def print_primes(n):\n    x=2\n    while(n>0):\n        d=0\n        for i in range(1,x+1):\n			if(x%i==0):d+=1\n        if(d==2):\n            print(x)\n            n-=1\n        x+=1 
###
1111
def isPrime(n):\n    for i in range(2, n):\n        if n % i==0:\n            return False\n    return True\n\ndef print_primes(n):\n    primes = 0\n    i=2\n    while primes<n:\n        if(isPrime(i)):\n            print(i)\n            primes+=1\n        i+=1\n
###
1111
def print_primes(n):\n    count = 0\n    i = 2\n    print(2)\n    while count < (n-1):\n        for j in range(2, i):\n            if i%j == 0 and i != 2:\n                break\n            elif (i-1)==j:\n                print(i)\n                count += 1\n        i += 1
###
1111
def cnt_divisors(n):\n    cont = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            cont += 1\n    return cont\n\n\n\ndef is_prime(n):\n    return cnt_divisors(n) == 2\n\n\n\n\n\ndef print_primes(k):\n    i = 1\n    stoper = 0\n    while k > stoper:\n        i += 1\n        if is_prime(i):\n            stoper += 1\n            print(i)\n        else:\n            pass\n    \n\n
###
1111
def print_primes(n):\n    x = 2\n    i = 1\n    while i <= n:\n        is_prime = True\n        for j in range(1, x):\n            if x % j == 0 and j != 1:\n                is_prime = False\n                break\n        if is_prime == True:\n            print(x)\n            i += 1\n        x += 1\n    \n            \n        \n        \n        \n        \n
###
1111
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n        if a%b==0 and not a == b:\n            \n        	a = a + 1\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n        if a%b==0 and not a == b:\n            \n        	a = a + 1\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
def print_primes(n):\n    i = 0\n    a = 2\n    b = 2\n    while i < n:\n        if a%2==0 and not a == 2:\n            \n        	a = a + 1\n            \n        if a%b==0 and not a == b:\n            a = a + 1\n            b = 2\n       \n        if a%b==0 and a == b:\n            print(a)\n            a = b + 1\n            i = i + 1\n            b = 2\n        else:\n            b = b + 1\n
###
1111
def frame(text, symbol):\n    row = symbol *(len(text)+2) +"\n"\n    print( row\n          +symbol +text +symbol +"\n"\n          +row )\n
###
1111
def frame(text, symbol):\n    dlzka =	len(text) + 2\n    new = symbol+text+symbol\n    print(dlzka*symbol)\n    print(str(new))\n    print(dlzka*symbol)\n
###
1111
def frame(text, symbol):\n    print((len(text)+2)*symbol)\n    print(symbol+text+symbol)\n    print((len(text)+2)*symbol)\n
###
1111
def frame(text, symbol):\n    print((len(text)+2)*symbol)\n    print(symbol+text+symbol)\n    print((len(text)+2)*symbol)\n
###
1111
def frame(text, symbol):\n    sym = (len(text) + 2) * symbol\n    tex = symbol + text + symbol\n    print (sym)\n    print (tex)\n    print (sym)\n	  \n
###
1111
def frame(text, symbol):\n    print(symbol*(len(text)+2))\n    print(symbol+text+symbol)\n    print(symbol*(len(text)+2))\n
###
1111
def frame(text, symbol):\n    print(symbol*(len(text)+2))\n    print(symbol+text+symbol)\n    print(symbol*(len(text)+2))\n
###
1111
def frame(text, symbol):\n    \n    char_row(symbol,len(text)+2)\n    print(symbol+text+symbol)\n    char_row(symbol, len(text)+2)\ndef char_row(char,lenght):\n    for i in range (lenght):\n        print(char,end="")\n    print()
###
1111
def factorize(n):\n    oldn = n\n    moj = []\n    x = 2\n    while(x < 100):\n        if n % x == 0:\n            moj.append(x)\n            n /= x\n            x = 2\n        else:\n            x += 1\n    print(oldn, "= ", end="")        \n    for i in range(len(moj)):\n        if i == 0:\n            print(moj[i], end=" ")\n        else:\n            print("*",moj[i], end = " ")\n    print()
def factorize(n):\n    oldn = n\n    moj = []\n    x = 2\n    while(x < 1000):\n        if n % x == 0:\n            moj.append(x)\n            n /= x\n            x = 2\n        else:\n            x += 1\n    print(oldn, "= ", end="")        \n    for i in range(len(moj)):\n        if i == 0:\n            print(moj[i], end=" ")\n        else:\n            print("*",moj[i], end = " ")\n    print()
###
1111
def factorize(n):\n    print(n, '=',end=(' '))\n    for i in range(n):   	\n        while n%(i+1)==0 and (i+1)!=1 and n//(i+1)!=1:\n            n=n//(i+1)\n            print(i+1,'*',end=(' '))\n    print(n,end=' ')\n    print()\n        	\n          \n            \n\n
###
1111
def factorize(n):\n    p=2\n    print(n,"=", end=" ")\n    x=n\n    while IsPrime(n)!=True:\n        if n%p==0 :\n            n=n//p\n            print (p,end=" * ")\n            \n        else: p+=1\n                \n    print (n)            \n    \n\ndef IsPrime(p):\n    c=0\n    for i in range (1,p+1):\n        if p%i==0:\n            c+=1\n    if c==2:\n        return True
###
1111
def factorize(n):\n    print(n,"=",end=" ")\n    for i in range(2,n+1):\n        while(n%i==0):\n            n=n/i\n            print(i, end=" ")\n    print()        \n
def factorize(n):\n    x=n\n    print(n,"=",end=" ")\n    for i in range(2,n+1):\n        while(n%i==0):\n            if(n!=x):\n                print("*",end=" ")\n            n=n/i\n            print(i, end=" ")\n    print()        \n
###
1111
def big_chessboard(n, m):\n    for i in range(1,n+1):\n        if i%2!=0:\n            for x in range(m):\n                for j in range(1,n+1):\n                    if j%2!=0:\n                        print(m*"#",end="")\n                    else: print(m*".",end="")\n                print()\n        else:\n            for y in range(m):                \n                for k in range(1,n+1):\n                    if k%2!=0:\n                        print(m*".",end="")\n                    else: print(m*"#",end="")\n                print()\n\n    \n    \n
###
1111
def nested_squares(n):\n    c=0\n    c2=n-2\n    c3=5\n    c4=1\n    c5=1\n    c6=1\n    for y in range(4*n-3):\n        \n        if y%2==0 and y<=2*n-1:\n            for i in range(y-c):\n                print ("# ", end="")\n            c=c+1\n            for k in range (4*n-3-2*y):\n                print("#", end="")\n            print(end=" ")\n            for l in range (y-c+1):\n                print ("# ",end="")\n\n                                    \n        elif y%2==0 and y>2*n-1:\n            for j in range(c2):\n                print ("# ", end="")\n            c2=c2-1\n            for m in range (c3):\n                print("#", end="")\n            c3=c3+4\n            print(end=" ")\n            for o in range (c2+1):\n                print ("# ",end="") \n\n\n\n\n\n        elif y%2==1 and y<=2*n-2:\n            for p in range (c4):\n                print ("#", end=" ")\n            c4+=1\n            for r in range(4*n-4-2*y):\n                print(end=" ")\n            for s in range (c4-1):\n                print("# ", end="")\n                \n        elif y%2==1 and y>2*n-2:\n            for t in range (n-c5):\n                print ("#",end=" ")\n            c5+=1\n            for u in range(c6):\n                print(end=" ")\n            c6+=4\n            for v in range (n-c5+1):\n                print(" #", end="")\n\n        print ()\n                
###
1111
def big_frame(word_list):\n    max_len = max([len(x) for x in word_list])\n    \n    print((max_len + 2) * "+")\n    for x in word_list:\n        print("+" + x + (max_len - len(x)) * " " + "+")\n    print((max_len + 2) * "+")\n
###
1111
def big_frame(word_list):\n    print ((longest_len(word_list)+2)*"+")\n    for word in word_list:\n        print("+"+word+(longest_len(word_list)-len(word))*" "+"+")\n    print((longest_len(word_list) + 2)*"+")\n\n\ndef longest_len(list):\n    longest=0\n    for word in list:\n        if len(word)>longest:\n            longest=len(word)\n    return longest\n
###
