def divisors_count(n):
    d=0
    for i in range(1,n+1):
        if n%i==0:
            d=d+1
    return d
            

def divisors_count(n):
    k=0
    for i in range(n):
        if n%(i+1)==0: k=k+1
    return (k)

def divisors_count(n):
    pes = 0
    for i in range(n):
        if n % (i + 1) == 0:
            pes += 1
    return pes

def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

def divisors_count(n):
    a=0
    for i in range(1,n+1,1):
        if n%i==0:
            a+=1
        else:
            pass
    return a

def divisors_count(n):
    count=0
    for i in range(1,n+1,1):
        if n%i==0:
            count+=1
            
    return count



def divisors_count(n):
    pocet=0
    for i in range(1,n+1,1):
        if n%i ==0:
            pocet+=1
    
    return pocet

def divisors_count(n):
    pocet = 0
    for i in range(1,n+1,1):
        if n%i == 0:
        	pocet += 1 
    return pocet 
    


def divisors_count(n):
    a=0
    for i in range(1,n+1,1):
        if n%i==0:
            a+=1
    return a

def divisors_count(n):
    pocet = 0
    for i in range(1,n+1,1):
        if n%i==0:
            pocet+=1
    return pocet

def divisors_count(n):
    pocet=0
    for i in range(1,n+1,1):
        if n%i==0:
            pocet+=1
    return pocet

def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

def divisors_count(n):
    vysledok = 1
    for i in range(1,n):
 	    if n % i == 0:
        	vysledok += 1
    return vysledok

def divisors_count(n):
    x=0
    for i in range (1,n+1):
        if n%i==0:
            x=x+1
    return x
            

def divisors_count(n):
    pocet = 0
    for x in range(1,n+1):
        if n % x == 0:
            pocet += 1
    return pocet

def divisors_count(n):
    x=0
    for i in range(n):
        if n%(i+1)==0:
            x+=1
            
    return(x) 


def divisors_count(n):
    x = 0
    for i in range(1,n+1):
        if n % i == 0:
            x += 1
    return x

def divisors_count(n):
    count = 0
    for i in range(1,n+1):
        if n % i == 0:
            count = count +1
    return count

def divisors_count(n):
    x=0
    for i in range(1,n+1):
        if n%i==0:
            x+=1
    return x

def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

def divisors_count(n):
    x = 0
    for i in range(n):
        if(n%(i+1)==0):
            x+=1
    return x

def divisors_count(n):
	count = 0
	for i in range(1, n+1):
		if n%i == 0:
			count += 1
	return count

def divisors_count(n):
    a=0
    for i in range(n):
        if n%(i+1)==0:
            a=a+1
    return a

def divisors_count(n):
    divisors=0
    for i in range (n):
        if n% (i + 1) == 0:
            divisors = divisors + 1
    return (divisors)

def divisors_count(n):
    k=0
    for i in range(1,n+1):
        if n%i==0:
        	k+=1
    return (k)

def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n%i == 0:
            count += 1
    return count

def divisors_count(n):
    x = 0
    for i in range(1, n+1):
        if n%i==0: 
            x += 1
    return (x)



def divisors_count(n):
    a=0
    for i in range(n):
        if (n)%(i+1)==0:
            a=a+1
    return a

def divisors_count(n):
    pocet = 0
    for i in range (1, n + 1):
        if n % i == 0:
            pocet += 1
    return pocet

